{
	"id": "fd6dab48c06548497b8ecb14d9355c64",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"CYBCC.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract CYBCC is ERC20 {\n    mapping(address => uint256) private _rOwned;\n    mapping(address => uint256) private _tOwned;\n    mapping(address => bool) private _isExcludedFromFee;\n    mapping(address => bool) public isWhitelisted;\n\n    mapping(address => bool) private _isExcluded;\n    address[] private _excluded;\n\n    uint8 private _decimals;\n    address private _owner = msg.sender;\n    uint256 private constant MAX = ~uint256(0);\n    uint256 private _tTotal;\n    uint256 private _rTotal;\n    uint256 private _tFeeTotal = 0;\n\n    uint256 private _reflectionFee;\n    uint256 private _previousReflectionFee;\n\n    uint256 private _taxFee;\n    uint256 private _previousTaxFee;\n\n    address private _marketingAccount;\n    address private _developmentAccount;\n\n    address public pairAddress;\n\n    uint256 private maxWalletAmount = 10000000 * 10**uint256(_decimals);\n\n    uint256 public launchBlock;\n    bool public tradingOpen = false;\n\n    constructor() ERC20(\"CYBERCATSCOIN\", \"CYBCC\") {\n        _decimals = 18;\n        _tTotal = 1000000000 * 10**uint256(_decimals);\n        _rTotal = (MAX - (MAX % _tTotal));\n\n        _reflectionFee = 2;\n        _previousReflectionFee = _reflectionFee;\n\n        _taxFee = 2;\n        _previousTaxFee = _taxFee;\n\n        _marketingAccount = _owner;\n\n        //exclude owner, feeaccount and this contract from fee\n        _isExcludedFromFee[owner()] = true;\n        _isExcludedFromFee[_marketingAccount] = true;\n        _isExcludedFromFee[_developmentAccount] = true;\n        _isExcludedFromFee[address(this)] = true;\n        isWhitelisted[owner()] = true;\n        isWhitelisted[_marketingAccount] = true;\n        isWhitelisted[_developmentAccount] = true;\n        _rOwned[_owner] = _rTotal;\n        _mint(msg.sender, _rTotal);\n    }\n\n    receive() external payable {}\n\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    modifier onlyOwner() {\n        if (owner() == msg.sender) _;\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return _decimals;\n    }\n\n    function totalSupply() public view virtual override returns (uint256) {\n        return _tTotal;\n    }\n\n    function reflectionFee() public view returns (uint256) {\n        return _reflectionFee;\n    }\n\n    function getTaxFee() public view returns (uint256) {\n        return _taxFee;\n    }\n\n    function getMarketingAccount() public view returns (address) {\n        return _marketingAccount;\n    }\n\n    function getDevelopmentAccount() public view returns (address) {\n        return _developmentAccount;\n    }\n\n    function isExcludedFromFee(address account) public view returns (bool) {\n        return _isExcludedFromFee[account];\n    }\n\n    function balanceOf(address sender)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        if (_isExcluded[sender]) {\n            return _tOwned[sender];\n        }\n        return tokenFromReflection(_rOwned[sender]);\n    }\n\n    function isExcluded(address account) public view returns (bool) {\n        return _isExcluded[account];\n    }\n\n    function totalFeesRedistributed() public view returns (uint256) {\n        return _tFeeTotal;\n    }\n\n    function excludeFromFee(address account) public onlyOwner {\n        _isExcludedFromFee[account] = true;\n    }\n\n    function changeMarketingAccount(address newFeeAccount) public onlyOwner {\n        require(\n            newFeeAccount != address(0),\n            \"zero address can not be the FeeAccount\"\n        );\n        _marketingAccount = newFeeAccount;\n    }\n\n    function changeDevelopmentAccount(address newFeeAccount) public onlyOwner {\n        require(\n            newFeeAccount != address(0),\n            \"zero address can not be the FeeAccount\"\n        );\n        _developmentAccount = newFeeAccount;\n    }\n\n    function changePairAddress(address _pairAddress) public onlyOwner {\n        pairAddress = _pairAddress;\n    }\n\n    function reflect(uint256 tAmount) public {\n        address sender = _msgSender();\n        require(\n            !_isExcluded[sender],\n            \"Excluded addresses cannot call this function\"\n        );\n        (uint256 rAmount, , , ) = _getTransferValues(tAmount);\n        _rOwned[sender] = _rOwned[sender] - rAmount;\n        _rTotal = _rTotal - rAmount;\n        _tFeeTotal = _tFeeTotal + tAmount;\n    }\n\n    function reflectionFromToken(uint256 tAmount, bool deductTransferFee)\n        public\n        view\n        returns (uint256)\n    {\n        require(tAmount <= _tTotal, \"Amount must be less than supply\");\n        if (!deductTransferFee) {\n            (uint256 rAmount, , , ) = _getTransferValues(tAmount);\n            return rAmount;\n        } else {\n            (, uint256 rTransferAmount, , ) = _getTransferValues(tAmount);\n            return rTransferAmount;\n        }\n    }\n\n    function tokenFromReflection(uint256 rAmount)\n        private\n        view\n        returns (uint256)\n    {\n        require(\n            rAmount <= _rTotal,\n            \"Amount must be less than total reflections\"\n        );\n        uint256 currentRate = _getRate();\n        return rAmount / currentRate;\n    }\n\n    function excludeAccountFromReward(address account) public onlyOwner {\n        require(!_isExcluded[account], \"Account is already excluded\");\n        if (_rOwned[account] > 0) {\n            _tOwned[account] = tokenFromReflection(_rOwned[account]);\n        }\n        _isExcluded[account] = true;\n        _excluded.push(account);\n    }\n\n    function includeAccountinReward(address account) public onlyOwner {\n        require(_isExcluded[account], \"Account is already included\");\n        for (uint256 i = 0; i < _excluded.length; i++) {\n            if (_excluded[i] == account) {\n                _excluded[i] = _excluded[_excluded.length - 1];\n                _tOwned[account] = 0;\n                _isExcluded[account] = false;\n                _excluded.pop();\n                break;\n            }\n        }\n    }\n\n    function isWhitelistedAddress(address account) public view returns (bool) {\n        return isWhitelisted[account];\n    }\n\n    function whitelistedAddress(address account) public onlyOwner {\n        require(!isWhitelisted[account], \"Address is already whitelisted\");\n        isWhitelisted[account] = true;\n    }\n\n    function openTrading() external onlyOwner {\n        tradingOpen = true;\n        launchBlock = block.number;\n    }\n\n    modifier launchProtection(address from, address to) {\n        if (!tradingOpen) {\n            require(isWhitelisted[to], \"Trading not yet enabled\");\n        } else if (block.number <= launchBlock + 3) {\n            // Allow only whitelisted addresses for 3 blocks\n            require(isWhitelisted[to], \"Launch protection: not whitelisted\");\n        }\n        _;\n    }\n\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual override launchProtection(sender, recipient) {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n        uint256 senderBalance = balanceOf(sender);\n        require(\n            senderBalance >= amount,\n            \"ERC20: transfer amount exceeds balance\"\n        );\n\n        if (!isExcludedFromFee(recipient)) {\n            require(\n                balanceOf(recipient) + amount <= maxWalletAmount,\n                \"Whale detected!!\"\n            );\n        }\n        bool takeFee;\n\n        if (sender == pairAddress || recipient == pairAddress) {\n            takeFee = true;\n        }\n\n        _tokenTransfer(sender, recipient, amount, takeFee);\n    }\n\n    function _tokenTransfer(\n        address from,\n        address to,\n        uint256 value,\n        bool takeFee\n    ) private {\n        if (!takeFee) {\n            removeAllFee();\n        }\n\n        if (_isExcluded[from] && !_isExcluded[to]) {\n            _transferFromExcluded(from, to, value);\n        } else if (!_isExcluded[from] && _isExcluded[to]) {\n            _transferToExcluded(from, to, value);\n        } else if (!_isExcluded[from] && !_isExcluded[to]) {\n            _transferStandard(from, to, value);\n        } else if (_isExcluded[from] && _isExcluded[to]) {\n            _transferBothExcluded(from, to, value);\n        } else {\n            _transferStandard(from, to, value);\n        }\n\n        if (!takeFee) {\n            restoreAllFee();\n        }\n    }\n\n    function removeAllFee() private {\n        if (_reflectionFee == 0 && _taxFee == 0) return;\n\n        _previousReflectionFee = _reflectionFee;\n        _previousTaxFee = _taxFee;\n\n        _reflectionFee = 0;\n        _taxFee = 0;\n    }\n\n    function restoreAllFee() private {\n        _reflectionFee = _previousReflectionFee;\n        _taxFee = _previousTaxFee;\n    }\n\n    function _transferStandard(\n        address sender,\n        address recipient,\n        uint256 tAmount\n    ) private {\n        (\n            uint256 rAmount,\n            uint256 rTransferAmount,\n            uint256 tTransferAmount,\n            uint256 currentRate\n        ) = _getTransferValues(tAmount);\n\n        _rOwned[sender] = _rOwned[sender] - rAmount;\n        _rOwned[recipient] = _rOwned[recipient] + rTransferAmount;\n\n        taxFeeTransfer(sender, tAmount, currentRate);\n        _reflectFee(tAmount, currentRate);\n\n        emit Transfer(sender, recipient, tTransferAmount);\n    }\n\n    function _transferToExcluded(\n        address sender,\n        address recipient,\n        uint256 tAmount\n    ) private {\n        (\n            uint256 rAmount,\n            uint256 rTransferAmount,\n            uint256 tTransferAmount,\n            uint256 currentRate\n        ) = _getTransferValues(tAmount);\n        _rOwned[sender] = _rOwned[sender] - rAmount;\n        _tOwned[recipient] = _tOwned[recipient] + tTransferAmount;\n        _rOwned[recipient] = _rOwned[recipient] + rTransferAmount;\n\n        taxFeeTransfer(sender, tAmount, currentRate);\n        _reflectFee(tAmount, currentRate);\n\n        emit Transfer(sender, recipient, tTransferAmount);\n    }\n\n    function _transferFromExcluded(\n        address sender,\n        address recipient,\n        uint256 tAmount\n    ) private {\n        (\n            uint256 rAmount,\n            uint256 rTransferAmount,\n            uint256 tTransferAmount,\n            uint256 currentRate\n        ) = _getTransferValues(tAmount);\n        _tOwned[sender] = _tOwned[sender] - tAmount;\n        _rOwned[sender] = _rOwned[sender] - rAmount;\n        _rOwned[recipient] = _rOwned[recipient] + rTransferAmount;\n\n        taxFeeTransfer(sender, tAmount, currentRate);\n        _reflectFee(tAmount, currentRate);\n\n        emit Transfer(sender, recipient, tTransferAmount);\n    }\n\n    function _transferBothExcluded(\n        address sender,\n        address recipient,\n        uint256 tAmount\n    ) private {\n        (\n            uint256 rAmount,\n            uint256 rTransferAmount,\n            uint256 tTransferAmount,\n            uint256 currentRate\n        ) = _getTransferValues(tAmount);\n        _tOwned[sender] = _tOwned[sender] - tAmount;\n        _rOwned[sender] = _rOwned[sender] - rAmount;\n        _tOwned[recipient] = _tOwned[recipient] + tTransferAmount;\n        _rOwned[recipient] = _rOwned[recipient] + rTransferAmount;\n\n        taxFeeTransfer(sender, tAmount, currentRate);\n        _reflectFee(tAmount, currentRate);\n\n        emit Transfer(sender, recipient, tTransferAmount);\n    }\n\n    function _getCompleteTaxValue(uint256 tAmount)\n        private\n        view\n        returns (uint256)\n    {\n        uint256 allTaxes = _reflectionFee + _taxFee;\n        uint256 taxValue = (tAmount * allTaxes) / 100;\n        return taxValue;\n    }\n\n    function _getTransferValues(uint256 tAmount)\n        private\n        view\n        returns (\n            uint256,\n            uint256,\n            uint256,\n            uint256\n        )\n    {\n        uint256 taxValue = _getCompleteTaxValue(tAmount);\n        uint256 tTransferAmount = tAmount - taxValue;\n        uint256 currentRate = _getRate();\n        uint256 rTransferAmount = tTransferAmount * currentRate;\n        uint256 rAmount = tAmount * currentRate;\n        return (rAmount, rTransferAmount, tTransferAmount, currentRate);\n    }\n\n    function _reflectFee(uint256 tAmount, uint256 currentRate) private {\n        uint256 tFee = (tAmount * _reflectionFee) / 100;\n        uint256 rFee = tFee * currentRate;\n\n        _rTotal = _rTotal - rFee;\n        _tFeeTotal = _tFeeTotal + tFee;\n    }\n\n    function _getRate() private view returns (uint256) {\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\n        return rSupply / tSupply;\n    }\n\n    function _getCurrentSupply() private view returns (uint256, uint256) {\n        uint256 rSupply = _rTotal;\n        uint256 tSupply = _tTotal;\n\n        for (uint256 i = 0; i < _excluded.length; i++) {\n            if (\n                _rOwned[_excluded[i]] > rSupply ||\n                _tOwned[_excluded[i]] > tSupply\n            ) {\n                return (_rTotal, _tTotal);\n            }\n            rSupply = rSupply - _rOwned[_excluded[i]];\n            tSupply = tSupply - _tOwned[_excluded[i]];\n        }\n\n        if (rSupply < _rTotal / _tTotal) {\n            return (_rTotal, _tTotal);\n        }\n\n        return (rSupply, tSupply);\n    }\n\n    function taxFeeTransfer(\n        address sender,\n        uint256 tAmount,\n        uint256 currentRate\n    ) private {\n        uint256 tTaxFee = (tAmount * _taxFee) / 100;\n        if (tTaxFee > 0) {\n            uint256 rTaxFee = (tTaxFee * currentRate) / 2;\n            _rOwned[_marketingAccount] = _rOwned[_marketingAccount] + rTaxFee;\n            _rOwned[_developmentAccount] =\n                _rOwned[_developmentAccount] +\n                rTaxFee;\n            emit Transfer(sender, _marketingAccount, tTaxFee);\n            emit Transfer(sender, _developmentAccount, tTaxFee);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdb63a9f4c2a337faf57f2cab393316b89b404bc1ac699832cd5cdf7b73701368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdda80f2a9c1ae11b7349044863da89d5e447aea6dbdaf38987c791f871c21b6\",\"dweb:/ipfs/QmauBRwgcDXwz9HgPnzm5K4uRst84DhUrRSDgSK1TvbLCN\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CYBCC.sol": {
				"CYBCC": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newFeeAccount",
									"type": "address"
								}
							],
							"name": "changeDevelopmentAccount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newFeeAccount",
									"type": "address"
								}
							],
							"name": "changeMarketingAccount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pairAddress",
									"type": "address"
								}
							],
							"name": "changePairAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "excludeAccountFromReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "excludeFromFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDevelopmentAccount",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMarketingAccount",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTaxFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "includeAccountinReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isExcluded",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isExcludedFromFee",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isWhitelistedAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "launchBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "openTrading",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pairAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tAmount",
									"type": "uint256"
								}
							],
							"name": "reflect",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reflectionFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tAmount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "deductTransferFee",
									"type": "bool"
								}
							],
							"name": "reflectionFromToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalFeesRedistributed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tradingOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "whitelistedAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CYBCC.sol\":128:14009  contract CYBCC is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"CYBCC.sol\":478:513  address private _owner = msg.sender */\n  0x0b\n  dup1\n  sload\n  0x0100\n    /* \"CYBCC.sol\":503:513  msg.sender */\n  caller\n    /* \"CYBCC.sol\":478:513  address private _owner = msg.sender */\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup3\n  and\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n  0x00\n    /* \"CYBCC.sol\":625:655  uint256 private _tFeeTotal = 0 */\n  0x0e\n  sstore\n    /* \"CYBCC.sol\":969:991  10**uint256(_decimals) */\n  tag_1\n  swap2\n    /* \"CYBCC.sol\":981:990  _decimals */\n  0xff\n  swap1\n  dup2\n  and\n  swap2\n  and\n  or\n    /* \"CYBCC.sol\":969:971  10 */\n  0x0a\n    /* \"CYBCC.sol\":969:991  10**uint256(_decimals) */\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"CYBCC.sol\":958:991  10000000 * 10**uint256(_decimals) */\n  tag_3\n  swap1\n    /* \"CYBCC.sol\":958:966  10000000 */\n  0x989680\n    /* \"CYBCC.sol\":958:991  10000000 * 10**uint256(_decimals) */\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"CYBCC.sol\":924:991  uint256 private maxWalletAmount = 10000000 * 10**uint256(_decimals) */\n  0x16\n  sstore\n    /* \"CYBCC.sol\":1030:1061  bool public tradingOpen = false */\n  0x18\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"CYBCC.sol\":1068:1893  constructor() ERC20(\"CYBERCATSCOIN\", \"CYBCC\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_5\n  jumpi\n  revert(0x00, 0x00)\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x99, 0x21aca122a921a0aa29a1a7a4a7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd8, 0x4359424343)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_11\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n  pop\n    /* \"CYBCC.sol\":1124:1133  _decimals */\n  0x0b\n    /* \"CYBCC.sol\":1124:1138  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"CYBCC.sol\":1136:1138  18 */\n  0x12\n    /* \"CYBCC.sol\":1124:1138  _decimals = 18 */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"CYBCC.sol\":1171:1193  10**uint256(_decimals) */\n  tag_13\n  swap2\n  pop\n    /* \"CYBCC.sol\":1171:1173  10 */\n  0x0a\n    /* \"CYBCC.sol\":1171:1193  10**uint256(_decimals) */\n  tag_2\n  jump\t// in\ntag_13:\n    /* \"CYBCC.sol\":1158:1193  1000000000 * 10**uint256(_decimals) */\n  tag_14\n  swap1\n    /* \"CYBCC.sol\":1158:1168  1000000000 */\n  0x3b9aca00\n    /* \"CYBCC.sol\":1158:1193  1000000000 * 10**uint256(_decimals) */\n  tag_4\n  jump\t// in\ntag_14:\n    /* \"CYBCC.sol\":1148:1155  _tTotal */\n  0x0c\n    /* \"CYBCC.sol\":1148:1193  _tTotal = 1000000000 * 10**uint256(_decimals) */\n  dup2\n  swap1\n  sstore\n    /* \"CYBCC.sol\":1221:1234  MAX % _tTotal */\n  tag_15\n  swap1\n  not(0x00)\n  tag_16\n  jump\t// in\ntag_15:\n    /* \"CYBCC.sol\":1214:1235  MAX - (MAX % _tTotal) */\n  tag_17\n  swap1\n  not(0x00)\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"CYBCC.sol\":1203:1210  _rTotal */\n  0x0d\n    /* \"CYBCC.sol\":1203:1236  _rTotal = (MAX - (MAX % _tTotal)) */\n  swap1\n  dup2\n  sstore\n    /* \"CYBCC.sol\":1264:1265  2 */\n  0x02\n    /* \"CYBCC.sol\":1247:1261  _reflectionFee */\n  0x0f\n    /* \"CYBCC.sol\":1247:1265  _reflectionFee = 2 */\n  dup2\n  swap1\n  sstore\n    /* \"CYBCC.sol\":1275:1297  _previousReflectionFee */\n  0x10\n    /* \"CYBCC.sol\":1275:1314  _previousReflectionFee = _reflectionFee */\n  dup2\n  swap1\n  sstore\n    /* \"CYBCC.sol\":1325:1332  _taxFee */\n  0x11\n    /* \"CYBCC.sol\":1325:1336  _taxFee = 2 */\n  dup2\n  swap1\n  sstore\n    /* \"CYBCC.sol\":1346:1361  _previousTaxFee */\n  0x12\n    /* \"CYBCC.sol\":1346:1371  _previousTaxFee = _taxFee */\n  sstore\n    /* \"CYBCC.sol\":1402:1408  _owner */\n  0x0b\n  dup1\n  sload\n    /* \"CYBCC.sol\":1382:1399  _marketingAccount */\n  0x13\n    /* \"CYBCC.sol\":1382:1408  _marketingAccount = _owner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"CYBCC.sol\":1402:1408  _owner */\n  0x0100\n  swap4\n  dup5\n  swap1\n  div\n  dup2\n  and\n    /* \"CYBCC.sol\":1382:1408  _marketingAccount = _owner */\n  swap2\n  dup3\n  or\n  dup4\n  sstore\n  0x00\n    /* \"CYBCC.sol\":1482:1509  _isExcludedFromFee[owner()] */\n  swap2\n  dup3\n  mstore\n    /* \"CYBCC.sol\":1482:1500  _isExcludedFromFee */\n  0x07\n    /* \"CYBCC.sol\":1482:1509  _isExcludedFromFee[owner()] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup5\n  keccak256\n    /* \"CYBCC.sol\":1482:1516  _isExcludedFromFee[owner()] = true */\n  dup1\n  sload\n  not(0xff)\n  swap1\n  dup2\n  and\n  0x01\n  swap1\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"CYBCC.sol\":1545:1562  _marketingAccount */\n  dup7\n  sload\n  dup6\n  and\n    /* \"CYBCC.sol\":1526:1563  _isExcludedFromFee[_marketingAccount] */\n  dup7\n  mstore\n  dup3\n  dup7\n  keccak256\n    /* \"CYBCC.sol\":1526:1570  _isExcludedFromFee[_marketingAccount] = true */\n  dup1\n  sload\n  dup3\n  and\n  dup4\n  or\n  swap1\n  sstore\n    /* \"CYBCC.sol\":1599:1618  _developmentAccount */\n  0x14\n  dup1\n  sload\n  dup7\n  and\n    /* \"CYBCC.sol\":1580:1619  _isExcludedFromFee[_developmentAccount] */\n  dup8\n  mstore\n  dup4\n  dup8\n  keccak256\n    /* \"CYBCC.sol\":1580:1626  _isExcludedFromFee[_developmentAccount] = true */\n  dup1\n  sload\n  dup4\n  and\n  dup5\n  or\n  swap1\n  sstore\n    /* \"CYBCC.sol\":1663:1667  this */\n  address\n    /* \"CYBCC.sol\":1636:1669  _isExcludedFromFee[address(this)] */\n  dup8\n  mstore\n  dup4\n  dup8\n  keccak256\n    /* \"CYBCC.sol\":1636:1676  _isExcludedFromFee[address(this)] = true */\n  dup1\n  sload\n  dup4\n  and\n  dup5\n  or\n  swap1\n  sstore\n    /* \"CYBCC.sol\":2006:2012  _owner */\n  dup10\n  sload\n  dup10\n  swap1\n  div\n  dup7\n  and\n    /* \"CYBCC.sol\":1686:1708  isWhitelisted[owner()] */\n  dup8\n  mstore\n    /* \"CYBCC.sol\":1686:1699  isWhitelisted */\n  0x08\n    /* \"CYBCC.sol\":1686:1708  isWhitelisted[owner()] */\n  dup6\n  mstore\n  dup4\n  dup8\n  keccak256\n    /* \"CYBCC.sol\":1686:1715  isWhitelisted[owner()] = true */\n  dup1\n  sload\n  dup4\n  and\n  dup5\n  or\n  swap1\n  sstore\n    /* \"CYBCC.sol\":1739:1756  _marketingAccount */\n  swap7\n  sload\n  dup6\n  and\n    /* \"CYBCC.sol\":1725:1757  isWhitelisted[_marketingAccount] */\n  dup7\n  mstore\n  dup3\n  dup7\n  keccak256\n    /* \"CYBCC.sol\":1725:1764  isWhitelisted[_marketingAccount] = true */\n  dup1\n  sload\n  dup3\n  and\n  dup4\n  or\n  swap1\n  sstore\n    /* \"CYBCC.sol\":1788:1807  _developmentAccount */\n  swap6\n  sload\n  dup5\n  and\n    /* \"CYBCC.sol\":1774:1808  isWhitelisted[_developmentAccount] */\n  dup6\n  mstore\n  dup2\n  dup6\n  keccak256\n    /* \"CYBCC.sol\":1774:1815  isWhitelisted[_developmentAccount] = true */\n  dup1\n  sload\n  swap1\n  swap7\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"CYBCC.sol\":1843:1850  _rTotal */\n  swap6\n  sload\n    /* \"CYBCC.sol\":1833:1839  _owner */\n  swap5\n  sload\n  swap4\n  swap1\n  swap4\n  div\n  swap1\n  swap3\n  and\n    /* \"CYBCC.sol\":1825:1840  _rOwned[_owner] */\n  dup3\n  mstore\n    /* \"CYBCC.sol\":1825:1832  _rOwned */\n  0x05\n    /* \"CYBCC.sol\":1825:1840  _rOwned[_owner] */\n  swap1\n  swap4\n  mstore\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"CYBCC.sol\":1825:1850  _rOwned[_owner] = _rTotal */\n  dup2\n  swap1\n  sstore\n    /* \"CYBCC.sol\":1860:1886  _mint(msg.sender, _rTotal) */\n  tag_22\n  swap1\n    /* \"CYBCC.sol\":1866:1876  msg.sender */\n  caller\n  swap1\n    /* \"CYBCC.sol\":1860:1865  _mint */\n  tag_23\n    /* \"CYBCC.sol\":1860:1886  _mint(msg.sender, _rTotal) */\n  jump\t// in\ntag_22:\n    /* \"CYBCC.sol\":128:14009  contract CYBCC is ERC20 {... */\n  jump(tag_52)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7447:7655  function _mint(address account, uint256 value) internal {... */\ntag_23:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7517:7538  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7513:7604  if (account == address(0)) {... */\n  tag_27\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7561:7593  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7590:7591  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7561:7593  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4876:4927   */\n  mstore\n    /* \"#utility.yul\":4849:4867   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7561:7593  ERC20InvalidReceiver(address(0)) */\ntag_28:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7513:7604  if (account == address(0)) {... */\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7613:7648  _update(address(0), account, value) */\n  tag_30\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7629:7630  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7633:7640  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7642:7647  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7613:7620  _update */\n  tag_31\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7613:7648  _update(address(0), account, value) */\n  jump\t// in\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7447:7655  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:7104  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_31:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6086:6104  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6082:6622  if (from == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6238:6243  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6222:6234  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6222:6243  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_34\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6082:6622  if (from == address(0)) {... */\n  tag_36\n  swap1\n  pop\n  jump\ntag_33:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6296:6311  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6274:6293  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6296:6311  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6329:6348  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6325:6440  if (fromBalance < value) {... */\n  iszero\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6375:6425  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":5288:5320   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6375:6425  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5270:5321   */\n  mstore\n    /* \"#utility.yul\":5337:5355   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5330:5364   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5380:5398   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5373:5407   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":5243:5261   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6375:6425  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_28\n    /* \"#utility.yul\":5068:5413   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6325:6440  if (fromBalance < value) {... */\ntag_37:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6560:6575  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6560:6569  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6560:6575  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6578:6597  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6560:6597  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6082:6622  if (from == address(0)) {... */\ntag_36:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6636:6652  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6632:7057  if (to == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6799:6811  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6799:6820  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6632:7057  if (to == address(0)) {... */\n  jump(tag_41)\ntag_40:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7010:7023  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7010:7019  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7010:7023  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7010:7032  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6632:7057  if (to == address(0)) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7087:7089  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7072:7097  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7081:7085  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7072:7097  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7091:7096  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7072:7097  Transfer(from, to, value) */\n  mload(0x40)\n  tag_42\n  swap2\n    /* \"#utility.yul\":5564:5589   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5552:5554   */\n  0x20\n    /* \"#utility.yul\":5537:5555   */\n  add\n  swap1\n    /* \"#utility.yul\":5418:5595   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7072:7097  Transfer(from, to, value) */\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:7104  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_44:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x11\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:521   */\ntag_45:\n    /* \"#utility.yul\":234:235   */\n  0x01\n    /* \"#utility.yul\":252:257   */\n  dup2\n    /* \"#utility.yul\":266:515   */\ntag_55:\n    /* \"#utility.yul\":287:288   */\n  0x01\n    /* \"#utility.yul\":277:285   */\n  dup5\n    /* \"#utility.yul\":274:289   */\n  gt\n    /* \"#utility.yul\":266:515   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":337:341   */\n  dup1\n    /* \"#utility.yul\":332:335   */\n  dup6\n    /* \"#utility.yul\":328:342   */\n  div\n    /* \"#utility.yul\":322:326   */\n  dup2\n    /* \"#utility.yul\":319:343   */\n  gt\n    /* \"#utility.yul\":316:366   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":346:364   */\n  tag_59\n  tag_44\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":396:397   */\n  0x01\n    /* \"#utility.yul\":386:394   */\n  dup5\n    /* \"#utility.yul\":382:398   */\n  and\n    /* \"#utility.yul\":379:428   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":410:426   */\n  swap1\n  dup2\n  mul\n  swap1\n    /* \"#utility.yul\":379:428   */\ntag_60:\n    /* \"#utility.yul\":493:494   */\n  0x01\n    /* \"#utility.yul\":489:505   */\n  swap4\n  swap1\n  swap4\n  shr\n  swap3\n    /* \"#utility.yul\":449:464   */\n  dup1\n  mul\n    /* \"#utility.yul\":266:515   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":146:521   */\n  swap4\n  pop\n  swap4\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":526:1428   */\ntag_46:\n    /* \"#utility.yul\":575:580   */\n  0x00\n    /* \"#utility.yul\":605:613   */\n  dup3\n    /* \"#utility.yul\":595:675   */\n  tag_62\n  jumpi\n  pop\n    /* \"#utility.yul\":646:647   */\n  0x01\n    /* \"#utility.yul\":660:665   */\n  jump(tag_61)\n    /* \"#utility.yul\":595:675   */\ntag_62:\n    /* \"#utility.yul\":694:698   */\n  dup2\n    /* \"#utility.yul\":684:760   */\n  tag_63\n  jumpi\n  pop\n    /* \"#utility.yul\":731:732   */\n  0x00\n    /* \"#utility.yul\":745:750   */\n  jump(tag_61)\n    /* \"#utility.yul\":684:760   */\ntag_63:\n    /* \"#utility.yul\":776:780   */\n  dup2\n    /* \"#utility.yul\":794:795   */\n  0x01\n    /* \"#utility.yul\":789:848   */\n  dup2\n  eq\n  tag_65\n  jumpi\n    /* \"#utility.yul\":862:863   */\n  0x02\n    /* \"#utility.yul\":857:1031   */\n  dup2\n  eq\n  tag_66\n  jumpi\n    /* \"#utility.yul\":769:1031   */\n  jump(tag_64)\n    /* \"#utility.yul\":789:848   */\ntag_65:\n    /* \"#utility.yul\":819:820   */\n  0x01\n    /* \"#utility.yul\":810:820   */\n  swap2\n  pop\n    /* \"#utility.yul\":833:838   */\n  pop\n  jump(tag_61)\n    /* \"#utility.yul\":857:1031   */\ntag_66:\n    /* \"#utility.yul\":894:897   */\n  0xff\n    /* \"#utility.yul\":884:892   */\n  dup5\n    /* \"#utility.yul\":881:898   */\n  gt\n    /* \"#utility.yul\":878:921   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":901:919   */\n  tag_68\n  tag_44\n  jump\t// in\ntag_68:\n  pop\n  pop\n    /* \"#utility.yul\":957:958   */\n  0x01\n    /* \"#utility.yul\":943:959   */\n  dup3\n  shl\n    /* \"#utility.yul\":1016:1021   */\n  jump(tag_61)\n    /* \"#utility.yul\":769:1031   */\ntag_64:\n  pop\n    /* \"#utility.yul\":1115:1117   */\n  0x20\n    /* \"#utility.yul\":1105:1113   */\n  dup4\n    /* \"#utility.yul\":1102:1118   */\n  lt\n    /* \"#utility.yul\":1096:1099   */\n  0x0133\n    /* \"#utility.yul\":1090:1094   */\n  dup4\n    /* \"#utility.yul\":1087:1100   */\n  lt\n    /* \"#utility.yul\":1083:1119   */\n  and\n    /* \"#utility.yul\":1077:1079   */\n  0x4e\n    /* \"#utility.yul\":1067:1075   */\n  dup5\n    /* \"#utility.yul\":1064:1080   */\n  lt\n    /* \"#utility.yul\":1059:1061   */\n  0x0b\n    /* \"#utility.yul\":1053:1057   */\n  dup5\n    /* \"#utility.yul\":1050:1062   */\n  lt\n    /* \"#utility.yul\":1046:1081   */\n  and\n    /* \"#utility.yul\":1043:1120   */\n  or\n    /* \"#utility.yul\":1040:1243   */\n  iszero\n  tag_69\n  jumpi\n  pop\n    /* \"#utility.yul\":1152:1171   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":1228:1233   */\n  jump(tag_61)\n    /* \"#utility.yul\":1040:1243   */\ntag_69:\n    /* \"#utility.yul\":1275:1317   */\n  tag_70\n  not(0x00)\n    /* \"#utility.yul\":1300:1308   */\n  dup5\n    /* \"#utility.yul\":1294:1298   */\n  dup5\n    /* \"#utility.yul\":1275:1317   */\n  tag_45\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1353:1359   */\n  dup1\n    /* \"#utility.yul\":1349:1350   */\n  0x00\n    /* \"#utility.yul\":1345:1351   */\n  not\n    /* \"#utility.yul\":1341:1360   */\n  div\n    /* \"#utility.yul\":1332:1339   */\n  dup3\n    /* \"#utility.yul\":1329:1361   */\n  gt\n    /* \"#utility.yul\":1326:1384   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":1364:1382   */\n  tag_72\n  tag_44\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1402:1422   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":526:1428   */\ntag_61:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1433:1564   */\ntag_2:\n    /* \"#utility.yul\":1493:1498   */\n  0x00\n    /* \"#utility.yul\":1522:1558   */\n  tag_74\n    /* \"#utility.yul\":1549:1557   */\n  dup4\n    /* \"#utility.yul\":1543:1547   */\n  dup4\n    /* \"#utility.yul\":1522:1558   */\n  tag_46\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1513:1558   */\n  swap4\n    /* \"#utility.yul\":1433:1564   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1569:1737   */\ntag_4:\n    /* \"#utility.yul\":1642:1651   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":1673:1682   */\n  dup2\n  iszero\n    /* \"#utility.yul\":1690:1705   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":1684:1706   */\n  dup5\n  eq\n    /* \"#utility.yul\":1670:1707   */\n  or\n    /* \"#utility.yul\":1660:1731   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1711:1729   */\n  tag_61\n  tag_44\n  jump\t// in\n    /* \"#utility.yul\":1742:1869   */\ntag_47:\n    /* \"#utility.yul\":1803:1813   */\n  0x4e487b71\n    /* \"#utility.yul\":1798:1801   */\n  0xe0\n    /* \"#utility.yul\":1794:1814   */\n  shl\n    /* \"#utility.yul\":1791:1792   */\n  0x00\n    /* \"#utility.yul\":1784:1815   */\n  mstore\n    /* \"#utility.yul\":1834:1838   */\n  0x41\n    /* \"#utility.yul\":1831:1832   */\n  0x04\n    /* \"#utility.yul\":1824:1839   */\n  mstore\n    /* \"#utility.yul\":1858:1862   */\n  0x24\n    /* \"#utility.yul\":1855:1856   */\n  0x00\n    /* \"#utility.yul\":1848:1863   */\n  revert\n    /* \"#utility.yul\":1874:2254   */\ntag_48:\n    /* \"#utility.yul\":1953:1954   */\n  0x01\n    /* \"#utility.yul\":1949:1961   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1996:2008   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2017:2078   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":2071:2075   */\n  0x7f\n    /* \"#utility.yul\":2063:2069   */\n  dup3\n    /* \"#utility.yul\":2059:2076   */\n  and\n    /* \"#utility.yul\":2049:2076   */\n  swap2\n  pop\n    /* \"#utility.yul\":2017:2078   */\ntag_80:\n    /* \"#utility.yul\":2124:2126   */\n  0x20\n    /* \"#utility.yul\":2116:2122   */\n  dup3\n    /* \"#utility.yul\":2113:2127   */\n  lt\n    /* \"#utility.yul\":2093:2111   */\n  dup2\n    /* \"#utility.yul\":2090:2128   */\n  sub\n    /* \"#utility.yul\":2087:2248   */\n  tag_81\n  jumpi\n    /* \"#utility.yul\":2170:2180   */\n  0x4e487b71\n    /* \"#utility.yul\":2165:2168   */\n  0xe0\n    /* \"#utility.yul\":2161:2181   */\n  shl\n    /* \"#utility.yul\":2158:2159   */\n  0x00\n    /* \"#utility.yul\":2151:2182   */\n  mstore\n    /* \"#utility.yul\":2205:2209   */\n  0x22\n    /* \"#utility.yul\":2202:2203   */\n  0x04\n    /* \"#utility.yul\":2195:2210   */\n  mstore\n    /* \"#utility.yul\":2233:2237   */\n  0x24\n    /* \"#utility.yul\":2230:2231   */\n  0x00\n    /* \"#utility.yul\":2223:2238   */\n  revert\n    /* \"#utility.yul\":2087:2248   */\ntag_81:\n  pop\n    /* \"#utility.yul\":1874:2254   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2385:2903   */\ntag_50:\n    /* \"#utility.yul\":2487:2489   */\n  0x1f\n    /* \"#utility.yul\":2482:2485   */\n  dup3\n    /* \"#utility.yul\":2479:2490   */\n  gt\n    /* \"#utility.yul\":2476:2897   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":2523:2528   */\n  dup1\n    /* \"#utility.yul\":2520:2521   */\n  0x00\n    /* \"#utility.yul\":2513:2529   */\n  mstore\n    /* \"#utility.yul\":2567:2571   */\n  0x20\n    /* \"#utility.yul\":2564:2565   */\n  0x00\n    /* \"#utility.yul\":2554:2572   */\n  keccak256\n    /* \"#utility.yul\":2637:2639   */\n  0x1f\n    /* \"#utility.yul\":2625:2635   */\n  dup5\n    /* \"#utility.yul\":2621:2640   */\n  add\n    /* \"#utility.yul\":2618:2619   */\n  0x05\n    /* \"#utility.yul\":2614:2641   */\n  shr\n    /* \"#utility.yul\":2608:2612   */\n  dup2\n    /* \"#utility.yul\":2604:2642   */\n  add\n    /* \"#utility.yul\":2673:2677   */\n  0x20\n    /* \"#utility.yul\":2661:2671   */\n  dup6\n    /* \"#utility.yul\":2658:2678   */\n  lt\n    /* \"#utility.yul\":2655:2702   */\n  iszero\n  tag_85\n  jumpi\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2655:2702   */\ntag_85:\n    /* \"#utility.yul\":2751:2753   */\n  0x1f\n    /* \"#utility.yul\":2746:2749   */\n  dup5\n    /* \"#utility.yul\":2742:2754   */\n  add\n    /* \"#utility.yul\":2739:2740   */\n  0x05\n    /* \"#utility.yul\":2735:2755   */\n  shr\n    /* \"#utility.yul\":2729:2733   */\n  dup3\n    /* \"#utility.yul\":2725:2756   */\n  add\n    /* \"#utility.yul\":2715:2756   */\n  swap2\n  pop\n    /* \"#utility.yul\":2806:2887   */\ntag_86:\n    /* \"#utility.yul\":2824:2826   */\n  dup2\n    /* \"#utility.yul\":2817:2822   */\n  dup2\n    /* \"#utility.yul\":2814:2827   */\n  lt\n    /* \"#utility.yul\":2806:2887   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":2883:2884   */\n  0x00\n    /* \"#utility.yul\":2869:2885   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2850:2851   */\n  0x01\n    /* \"#utility.yul\":2839:2852   */\n  add\n    /* \"#utility.yul\":2806:2887   */\n  jump(tag_86)\ntag_88:\n    /* \"#utility.yul\":2810:2813   */\n  pop\n  pop\n    /* \"#utility.yul\":2476:2897   */\ntag_84:\n    /* \"#utility.yul\":2385:2903   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3079:4378   */\ntag_10:\n    /* \"#utility.yul\":3199:3209   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3221:3251   */\n  dup2\n  gt\n    /* \"#utility.yul\":3218:3274   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":3254:3272   */\n  tag_92\n  tag_47\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3283:3380   */\n  tag_93\n    /* \"#utility.yul\":3373:3379   */\n  dup2\n    /* \"#utility.yul\":3333:3371   */\n  tag_94\n    /* \"#utility.yul\":3365:3369   */\n  dup5\n    /* \"#utility.yul\":3359:3370   */\n  sload\n    /* \"#utility.yul\":3333:3371   */\n  tag_48\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3327:3331   */\n  dup5\n    /* \"#utility.yul\":3283:3380   */\n  tag_50\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3429:3433   */\n  0x20\n    /* \"#utility.yul\":3460:3462   */\n  0x1f\n    /* \"#utility.yul\":3449:3463   */\n  dup3\n  gt\n    /* \"#utility.yul\":3477:3478   */\n  0x01\n    /* \"#utility.yul\":3472:4121   */\n  dup2\n  eq\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4165:4166   */\n  0x00\n    /* \"#utility.yul\":4182:4188   */\n  dup4\n    /* \"#utility.yul\":4179:4268   */\n  iszero\n  tag_97\n  jumpi\n  pop\n    /* \"#utility.yul\":4234:4253   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":4228:4254   */\n  mload\n    /* \"#utility.yul\":4179:4268   */\ntag_97:\n  not(0x00)\n    /* \"#utility.yul\":3036:3037   */\n  0x03\n    /* \"#utility.yul\":3032:3043   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":3028:3052   */\n  shr\n    /* \"#utility.yul\":3024:3053   */\n  not\n    /* \"#utility.yul\":3014:3054   */\n  and\n    /* \"#utility.yul\":3060:3061   */\n  0x01\n    /* \"#utility.yul\":3056:3067   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":3011:3068   */\n  or\n    /* \"#utility.yul\":4281:4362   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3442:4372   */\n  jump(tag_88)\n    /* \"#utility.yul\":3472:4121   */\ntag_96:\n    /* \"#utility.yul\":2332:2333   */\n  0x00\n    /* \"#utility.yul\":2325:2339   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":2369:2373   */\n  0x20\n    /* \"#utility.yul\":2356:2374   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3508:3528   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3626:3848   */\ntag_100:\n    /* \"#utility.yul\":3640:3647   */\n  dup3\n    /* \"#utility.yul\":3637:3638   */\n  dup2\n    /* \"#utility.yul\":3634:3648   */\n  lt\n    /* \"#utility.yul\":3626:3848   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":3722:3741   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3716:3742   */\n  mload\n    /* \"#utility.yul\":3701:3743   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3829:3833   */\n  0x20\n    /* \"#utility.yul\":3814:3834   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3782:3783   */\n  0x01\n    /* \"#utility.yul\":3770:3784   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3656:3668   */\n  add\n    /* \"#utility.yul\":3626:3848   */\n  jump(tag_100)\ntag_102:\n    /* \"#utility.yul\":3630:3633   */\n  pop\n    /* \"#utility.yul\":3876:3882   */\n  dup5\n    /* \"#utility.yul\":3867:3874   */\n  dup3\n    /* \"#utility.yul\":3864:3883   */\n  lt\n    /* \"#utility.yul\":3861:4062   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":3937:3956   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3931:3957   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":4020:4021   */\n  0x03\n    /* \"#utility.yul\":4016:4030   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":4032:4035   */\n  0xf8\n    /* \"#utility.yul\":4012:4036   */\n  and\n    /* \"#utility.yul\":4008:4045   */\n  shr\n    /* \"#utility.yul\":4004:4046   */\n  not\n    /* \"#utility.yul\":3989:4047   */\n  and\n    /* \"#utility.yul\":3974:4048   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3861:4062   */\ntag_103:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4108:4109   */\n  0x01\n    /* \"#utility.yul\":4092:4106   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":4088:4110   */\n  add\n    /* \"#utility.yul\":4075:4111   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":3079:4378   */\n  jump\t// out\n    /* \"#utility.yul\":4383:4592   */\ntag_16:\n    /* \"#utility.yul\":4415:4416   */\n  0x00\n    /* \"#utility.yul\":4441:4442   */\n  dup3\n    /* \"#utility.yul\":4431:4563   */\n  tag_105\n  jumpi\n    /* \"#utility.yul\":4485:4495   */\n  0x4e487b71\n    /* \"#utility.yul\":4480:4483   */\n  0xe0\n    /* \"#utility.yul\":4476:4496   */\n  shl\n    /* \"#utility.yul\":4473:4474   */\n  0x00\n    /* \"#utility.yul\":4466:4497   */\n  mstore\n    /* \"#utility.yul\":4520:4524   */\n  0x12\n    /* \"#utility.yul\":4517:4518   */\n  0x04\n    /* \"#utility.yul\":4510:4525   */\n  mstore\n    /* \"#utility.yul\":4548:4552   */\n  0x24\n    /* \"#utility.yul\":4545:4546   */\n  0x00\n    /* \"#utility.yul\":4538:4553   */\n  revert\n    /* \"#utility.yul\":4431:4563   */\ntag_105:\n  pop\n    /* \"#utility.yul\":4577:4586   */\n  mod\n  swap1\n    /* \"#utility.yul\":4383:4592   */\n  jump\t// out\n    /* \"#utility.yul\":4597:4725   */\ntag_18:\n    /* \"#utility.yul\":4664:4673   */\n  dup2\n  dup2\n  sub\n    /* \"#utility.yul\":4685:4696   */\n  dup2\n  dup2\n  gt\n    /* \"#utility.yul\":4682:4719   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":4699:4717   */\n  tag_61\n  tag_44\n  jump\t// in\n    /* \"#utility.yul\":4938:5063   */\ntag_35:\n    /* \"#utility.yul\":5003:5012   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":5024:5034   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":5021:5057   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":5037:5055   */\n  tag_61\n  tag_44\n  jump\t// in\n    /* \"#utility.yul\":5418:5595   */\ntag_52:\n    /* \"CYBCC.sol\":128:14009  contract CYBCC is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"CYBCC.sol\":128:14009  contract CYBCC is ERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x838fcc90\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xc4863770\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf66608fe\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xfdeb889f\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xffb54a99\n      eq\n      tag_34\n      jumpi\n      revert(0x00, 0x00)\n    tag_37:\n      dup1\n      0xc4863770\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xc9567bf9\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xcba0e996\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd00efb2f\n      eq\n      tag_30\n      jumpi\n      revert(0x00, 0x00)\n    tag_36:\n      dup1\n      0x95d89b41\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa8b08982\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xc30796ab\n      eq\n      tag_26\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      dup1\n      0x838fcc90\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x83ad7994\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8873b15f\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_22\n      jumpi\n      revert(0x00, 0x00)\n    tag_35:\n      dup1\n      0x3af32abf\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x5fae0576\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x5fae0576\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x6049876e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x706407fd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      revert(0x00, 0x00)\n    tag_40:\n      dup1\n      0x3af32abf\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x437823ec\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4549b039\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5342acb4\n      eq\n      tag_14\n      jumpi\n      revert(0x00, 0x00)\n    tag_39:\n      dup1\n      0x1cf8fef5\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x1cf8fef5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x32035504\n      eq\n      tag_10\n      jumpi\n      revert(0x00, 0x00)\n    tag_41:\n      dup1\n      0x053ab182\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"CYBCC.sol\":4068:4472  function reflect(uint256 tAmount) public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      revert(0x00, 0x00)\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      revert(0x00, 0x00)\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      revert(0x00, 0x00)\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n        /* \"#utility.yul\":1316:1330   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1309:1331   */\n      iszero\n        /* \"#utility.yul\":1291:1332   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1279:1281   */\n      0x20\n        /* \"#utility.yul\":1264:1282   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_52\n        /* \"#utility.yul\":1151:1338   */\n      jump\n        /* \"CYBCC.sol\":2201:2302  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      revert(0x00, 0x00)\n    tag_61:\n      pop\n        /* \"CYBCC.sol\":2288:2295  _tTotal */\n      sload(0x0c)\n        /* \"CYBCC.sol\":2201:2302  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_62:\n      mload(0x40)\n        /* \"#utility.yul\":1489:1514   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1477:1479   */\n      0x20\n        /* \"#utility.yul\":1462:1480   */\n      add\n        /* \"CYBCC.sol\":2201:2302  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_52\n        /* \"#utility.yul\":1343:1520   */\n      jump\n        /* \"CYBCC.sol\":2603:2709  function getDevelopmentAccount() public view returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      revert(0x00, 0x00)\n    tag_66:\n      pop\n        /* \"CYBCC.sol\":2683:2702  _developmentAccount */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x14))\n        /* \"CYBCC.sol\":2603:2709  function getDevelopmentAccount() public view returns (address) {... */\n    tag_67:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1689:1721   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1671:1722   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1659:1661   */\n      0x20\n        /* \"#utility.yul\":1644:1662   */\n      add\n        /* \"CYBCC.sol\":2603:2709  function getDevelopmentAccount() public view returns (address) {... */\n      tag_52\n        /* \"#utility.yul\":1525:1728   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      revert(0x00, 0x00)\n    tag_71:\n      pop\n      tag_55\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n        /* \"CYBCC.sol\":2097:2195  function decimals() public view virtual override returns (uint8) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      revert(0x00, 0x00)\n    tag_77:\n      pop\n        /* \"CYBCC.sol\":2179:2188  _decimals */\n      sload(0x0b)\n        /* \"CYBCC.sol\":2097:2195  function decimals() public view virtual override returns (uint8) {... */\n      mload(0x40)\n        /* \"CYBCC.sol\":2179:2188  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2254:2290   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2242:2244   */\n      0x20\n        /* \"#utility.yul\":2227:2245   */\n      add\n        /* \"CYBCC.sol\":2097:2195  function decimals() public view virtual override returns (uint8) {... */\n      tag_52\n        /* \"#utility.yul\":2112:2296   */\n      jump\n        /* \"CYBCC.sol\":3230:3328  function totalFeesRedistributed() public view returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      revert(0x00, 0x00)\n    tag_82:\n      pop\n        /* \"CYBCC.sol\":3311:3321  _tFeeTotal */\n      sload(0x0e)\n        /* \"CYBCC.sol\":3230:3328  function totalFeesRedistributed() public view returns (uint256) {... */\n      jump(tag_62)\n        /* \"CYBCC.sol\":313:358  mapping(address => bool) public isWhitelisted */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      revert(0x00, 0x00)\n    tag_86:\n      pop\n      tag_55\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"CYBCC.sol\":3334:3443  function excludeFromFee(address account) public onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      revert(0x00, 0x00)\n    tag_92:\n      pop\n      tag_45\n      tag_94\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"CYBCC.sol\":4478:4952  function reflectionFromToken(uint256 tAmount, bool deductTransferFee)... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      revert(0x00, 0x00)\n    tag_96:\n      pop\n      tag_62\n      tag_98\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n        /* \"CYBCC.sol\":2715:2837  function isExcludedFromFee(address account) public view returns (bool) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      revert(0x00, 0x00)\n    tag_102:\n      pop\n      tag_55\n      tag_104\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":2803:2830  _isExcludedFromFee[account] */\n      and\n        /* \"CYBCC.sol\":2780:2784  bool */\n      0x00\n        /* \"CYBCC.sol\":2803:2830  _isExcludedFromFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":2803:2821  _isExcludedFromFee */\n      0x07\n        /* \"CYBCC.sol\":2803:2830  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"CYBCC.sol\":2715:2837  function isExcludedFromFee(address account) public view returns (bool) {... */\n      jump\n        /* \"CYBCC.sol\":6088:6208  function isWhitelistedAddress(address account) public view returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      revert(0x00, 0x00)\n    tag_107:\n      pop\n      tag_55\n      tag_109\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":6179:6201  isWhitelisted[account] */\n      and\n        /* \"CYBCC.sol\":6156:6160  bool */\n      0x00\n        /* \"CYBCC.sol\":6179:6201  isWhitelisted[account] */\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":6179:6192  isWhitelisted */\n      0x08\n        /* \"CYBCC.sol\":6179:6201  isWhitelisted[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"CYBCC.sol\":6088:6208  function isWhitelistedAddress(address account) public view returns (bool) {... */\n      jump\n        /* \"CYBCC.sol\":5273:5605  function excludeAccountFromReward(address account) public onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      revert(0x00, 0x00)\n    tag_112:\n      pop\n      tag_45\n      tag_114\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n        /* \"CYBCC.sol\":3699:3947  function changeDevelopmentAccount(address newFeeAccount) public onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      revert(0x00, 0x00)\n    tag_116:\n      pop\n      tag_45\n      tag_118\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n        /* \"CYBCC.sol\":2843:3110  function balanceOf(address sender)... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      revert(0x00, 0x00)\n    tag_120:\n      pop\n      tag_62\n      tag_122\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n        /* \"CYBCC.sol\":2495:2597  function getMarketingAccount() public view returns (address) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      revert(0x00, 0x00)\n    tag_125:\n      pop\n        /* \"CYBCC.sol\":2573:2590  _marketingAccount */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x13))\n        /* \"CYBCC.sol\":2495:2597  function getMarketingAccount() public view returns (address) {... */\n      jump(tag_67)\n        /* \"CYBCC.sol\":2308:2401  function reflectionFee() public view returns (uint256) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      revert(0x00, 0x00)\n    tag_129:\n      pop\n        /* \"CYBCC.sol\":2380:2394  _reflectionFee */\n      sload(0x0f)\n        /* \"CYBCC.sol\":2308:2401  function reflectionFee() public view returns (uint256) {... */\n      jump(tag_62)\n        /* \"CYBCC.sol\":3953:4062  function changePairAddress(address _pairAddress) public onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      revert(0x00, 0x00)\n    tag_133:\n      pop\n      tag_45\n      tag_135\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n        /* \"CYBCC.sol\":1934:2019  function owner() public view virtual returns (address) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      revert(0x00, 0x00)\n    tag_137:\n      pop\n        /* \"CYBCC.sol\":2006:2012  _owner */\n      sload(0x0b)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CYBCC.sol\":1934:2019  function owner() public view virtual returns (address) {... */\n      jump(tag_67)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      revert(0x00, 0x00)\n    tag_141:\n      pop\n      tag_50\n      tag_143\n      jump\t// in\n        /* \"CYBCC.sol\":891:917  address public pairAddress */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      revert(0x00, 0x00)\n    tag_145:\n      pop\n      sload(0x15)\n      tag_67\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      revert(0x00, 0x00)\n    tag_149:\n      pop\n      tag_55\n      tag_151\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_151:\n      tag_152\n      jump\t// in\n        /* \"CYBCC.sol\":6214:6398  function whitelistedAddress(address account) public onlyOwner {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      revert(0x00, 0x00)\n    tag_154:\n      pop\n      tag_45\n      tag_156\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n        /* \"CYBCC.sol\":3449:3693  function changeMarketingAccount(address newFeeAccount) public onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      revert(0x00, 0x00)\n    tag_158:\n      pop\n      tag_45\n      tag_160\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_160:\n      tag_161\n      jump\t// in\n        /* \"CYBCC.sol\":6404:6517  function openTrading() external onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_162\n      jumpi\n      revert(0x00, 0x00)\n    tag_162:\n      pop\n      tag_45\n      tag_164\n      jump\t// in\n        /* \"CYBCC.sol\":3116:3224  function isExcluded(address account) public view returns (bool) {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      revert(0x00, 0x00)\n    tag_165:\n      pop\n      tag_55\n      tag_167\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":3197:3217  _isExcluded[account] */\n      and\n        /* \"CYBCC.sol\":3174:3178  bool */\n      0x00\n        /* \"CYBCC.sol\":3197:3217  _isExcluded[account] */\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":3197:3208  _isExcluded */\n      0x09\n        /* \"CYBCC.sol\":3197:3217  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"CYBCC.sol\":3116:3224  function isExcluded(address account) public view returns (bool) {... */\n      jump\n        /* \"CYBCC.sol\":998:1024  uint256 public launchBlock */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_170\n      jumpi\n      revert(0x00, 0x00)\n    tag_170:\n      pop\n      tag_62\n      sload(0x17)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_174\n      jumpi\n      revert(0x00, 0x00)\n    tag_174:\n      pop\n      tag_62\n      tag_176\n      calldatasize\n      0x04\n      tag_177\n      jump\t// in\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"CYBCC.sol\":2407:2489  function getTaxFee() public view returns (uint256) {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_180\n      jumpi\n      revert(0x00, 0x00)\n    tag_180:\n      pop\n        /* \"CYBCC.sol\":2475:2482  _taxFee */\n      sload(0x11)\n        /* \"CYBCC.sol\":2407:2489  function getTaxFee() public view returns (uint256) {... */\n      jump(tag_62)\n        /* \"CYBCC.sol\":5611:6082  function includeAccountinReward(address account) public onlyOwner {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_184\n      jumpi\n      revert(0x00, 0x00)\n    tag_184:\n      pop\n      tag_45\n      tag_186\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_186:\n      tag_187\n      jump\t// in\n        /* \"CYBCC.sol\":1030:1061  bool public tradingOpen = false */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_188\n      jumpi\n      revert(0x00, 0x00)\n    tag_188:\n      pop\n      sload(0x18)\n      tag_55\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"CYBCC.sol\":4068:4472  function reflect(uint256 tAmount) public {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"CYBCC.sol\":4119:4133  address sender */\n      0x00\n        /* \"CYBCC.sol\":4180:4199  _isExcluded[sender] */\n      dup2\n      dup2\n      mstore\n        /* \"CYBCC.sol\":4180:4191  _isExcluded */\n      0x09\n        /* \"CYBCC.sol\":4180:4199  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":4179:4199  !_isExcluded[sender] */\n      iszero\n        /* \"CYBCC.sol\":4158:4269  require(... */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3359:3361   */\n      0x20\n        /* \"CYBCC.sol\":4158:4269  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3341:3362   */\n      mstore\n        /* \"#utility.yul\":3398:3400   */\n      0x2c\n        /* \"#utility.yul\":3378:3396   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3371:3401   */\n      mstore\n        /* \"#utility.yul\":3437:3471   */\n      0x4578636c75646564206164647265737365732063616e6e6f742063616c6c2074\n        /* \"#utility.yul\":3417:3435   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3410:3472   */\n      mstore\n      shl(0xa1, 0x3434b990333ab731ba34b7b7)\n        /* \"#utility.yul\":3488:3506   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3481:3523   */\n      mstore\n        /* \"#utility.yul\":3540:3559   */\n      0x84\n      add\n        /* \"CYBCC.sol\":4158:4269  require(... */\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"CYBCC.sol\":4280:4295  uint256 rAmount */\n      0x00\n        /* \"CYBCC.sol\":4305:4332  _getTransferValues(tAmount) */\n      tag_198\n        /* \"CYBCC.sol\":4324:4331  tAmount */\n      dup4\n        /* \"CYBCC.sol\":4305:4323  _getTransferValues */\n      tag_199\n        /* \"CYBCC.sol\":4305:4332  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_198:\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":4360:4375  _rOwned[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":4360:4367  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":4360:4375  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":4279:4332  (uint256 rAmount, , , ) = _getTransferValues(tAmount) */\n      swap1\n      swap2\n      pop\n        /* \"CYBCC.sol\":4360:4385  _rOwned[sender] - rAmount */\n      tag_200\n      swap1\n        /* \"CYBCC.sol\":4279:4332  (uint256 rAmount, , , ) = _getTransferValues(tAmount) */\n      dup3\n      swap1\n        /* \"CYBCC.sol\":4360:4385  _rOwned[sender] - rAmount */\n      tag_201\n      jump\t// in\n    tag_200:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":4342:4357  _rOwned[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":4342:4349  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":4342:4357  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CYBCC.sol\":4342:4385  _rOwned[sender] = _rOwned[sender] - rAmount */\n      sstore\n        /* \"CYBCC.sol\":4405:4412  _rTotal */\n      sload(0x0d)\n        /* \"CYBCC.sol\":4405:4422  _rTotal - rAmount */\n      tag_202\n      swap1\n        /* \"CYBCC.sol\":4415:4422  rAmount */\n      dup3\n      swap1\n        /* \"CYBCC.sol\":4405:4422  _rTotal - rAmount */\n      tag_201\n      jump\t// in\n    tag_202:\n        /* \"CYBCC.sol\":4395:4402  _rTotal */\n      0x0d\n        /* \"CYBCC.sol\":4395:4422  _rTotal = _rTotal - rAmount */\n      sstore\n        /* \"CYBCC.sol\":4445:4455  _tFeeTotal */\n      sload(0x0e)\n        /* \"CYBCC.sol\":4445:4465  _tFeeTotal + tAmount */\n      tag_203\n      swap1\n        /* \"CYBCC.sol\":4458:4465  tAmount */\n      dup5\n      swap1\n        /* \"CYBCC.sol\":4445:4465  _tFeeTotal + tAmount */\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"CYBCC.sol\":4432:4442  _tFeeTotal */\n      0x0e\n        /* \"CYBCC.sol\":4432:4465  _tFeeTotal = _tFeeTotal + tAmount */\n      sstore\n      pop\n      pop\n      pop\n        /* \"CYBCC.sol\":4068:4472  function reflect(uint256 tAmount) public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_208\n      swap1\n      tag_207\n      jump\t// in\n    tag_208:\n      dup1\n      iszero\n      tag_209\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_210\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_209)\n    tag_210:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_211:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_211\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_209:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_214\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_212:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_222:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":3334:3443  function excludeFromFee(address account) public onlyOwner {... */\n    tag_95:\n        /* \"CYBCC.sol\":2006:2012  _owner */\n      sload(0x0b)\n        /* \"CYBCC.sol\":2071:2081  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":2006:2012  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":2060:2081  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":2056:2084  if (owner() == msg.sender) _ */\n      tag_228\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":3402:3429  _isExcludedFromFee[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":3402:3420  _isExcludedFromFee */\n      0x07\n        /* \"CYBCC.sol\":3402:3429  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CYBCC.sol\":3402:3436  _isExcludedFromFee[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"CYBCC.sol\":3432:3436  true */\n      0x01\n        /* \"CYBCC.sol\":3402:3436  _isExcludedFromFee[account] = true */\n      or\n      swap1\n      sstore\n        /* \"CYBCC.sol\":2056:2084  if (owner() == msg.sender) _ */\n    tag_228:\n        /* \"CYBCC.sol\":3334:3443  function excludeFromFee(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":4478:4952  function reflectionFromToken(uint256 tAmount, bool deductTransferFee)... */\n    tag_100:\n        /* \"CYBCC.sol\":4593:4600  uint256 */\n      0x00\n        /* \"CYBCC.sol\":4635:4642  _tTotal */\n      sload(0x0c)\n        /* \"CYBCC.sol\":4624:4631  tAmount */\n      dup4\n        /* \"CYBCC.sol\":4624:4642  tAmount <= _tTotal */\n      gt\n      iszero\n        /* \"CYBCC.sol\":4616:4678  require(tAmount <= _tTotal, \"Amount must be less than supply\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4552:4554   */\n      0x20\n        /* \"CYBCC.sol\":4616:4678  require(tAmount <= _tTotal, \"Amount must be less than supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4534:4555   */\n      mstore\n        /* \"#utility.yul\":4591:4593   */\n      0x1f\n        /* \"#utility.yul\":4571:4589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4564:4594   */\n      mstore\n        /* \"#utility.yul\":4630:4663   */\n      0x416d6f756e74206d757374206265206c657373207468616e20737570706c7900\n        /* \"#utility.yul\":4610:4628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4603:4664   */\n      mstore\n        /* \"#utility.yul\":4681:4699   */\n      0x64\n      add\n        /* \"CYBCC.sol\":4616:4678  require(tAmount <= _tTotal, \"Amount must be less than supply\") */\n      tag_196\n        /* \"#utility.yul\":4350:4705   */\n      jump\n        /* \"CYBCC.sol\":4616:4678  require(tAmount <= _tTotal, \"Amount must be less than supply\") */\n    tag_231:\n        /* \"CYBCC.sol\":4693:4710  deductTransferFee */\n      dup2\n        /* \"CYBCC.sol\":4688:4946  if (!deductTransferFee) {... */\n      tag_234\n      jumpi\n        /* \"CYBCC.sol\":4727:4742  uint256 rAmount */\n      0x00\n        /* \"CYBCC.sol\":4752:4779  _getTransferValues(tAmount) */\n      tag_235\n        /* \"CYBCC.sol\":4771:4778  tAmount */\n      dup5\n        /* \"CYBCC.sol\":4752:4770  _getTransferValues */\n      tag_199\n        /* \"CYBCC.sol\":4752:4779  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_235:\n      pop\n        /* \"CYBCC.sol\":4726:4779  (uint256 rAmount, , , ) = _getTransferValues(tAmount) */\n      swap2\n      swap4\n      pop\n        /* \"CYBCC.sol\":4793:4807  return rAmount */\n      tag_212\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"CYBCC.sol\":4688:4946  if (!deductTransferFee) {... */\n    tag_234:\n        /* \"CYBCC.sol\":4841:4864  uint256 rTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":4872:4899  _getTransferValues(tAmount) */\n      tag_237\n        /* \"CYBCC.sol\":4891:4898  tAmount */\n      dup5\n        /* \"CYBCC.sol\":4872:4890  _getTransferValues */\n      tag_199\n        /* \"CYBCC.sol\":4872:4899  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_237:\n      pop\n        /* \"CYBCC.sol\":4838:4899  (, uint256 rTransferAmount, , ) = _getTransferValues(tAmount) */\n      swap1\n      swap4\n      pop\n        /* \"CYBCC.sol\":4913:4935  return rTransferAmount */\n      tag_212\n      swap3\n      pop\n      pop\n      pop\n      jump\n        /* \"CYBCC.sol\":5273:5605  function excludeAccountFromReward(address account) public onlyOwner {... */\n    tag_115:\n        /* \"CYBCC.sol\":2006:2012  _owner */\n      sload(0x0b)\n        /* \"CYBCC.sol\":2071:2081  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":2006:2012  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":2060:2081  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":2056:2084  if (owner() == msg.sender) _ */\n      tag_228\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":5360:5380  _isExcluded[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":5360:5371  _isExcluded */\n      0x09\n        /* \"CYBCC.sol\":5360:5380  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":5359:5380  !_isExcluded[account] */\n      iszero\n        /* \"CYBCC.sol\":5351:5412  require(!_isExcluded[account], \"Account is already excluded\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4912:4914   */\n      0x20\n        /* \"CYBCC.sol\":5351:5412  require(!_isExcluded[account], \"Account is already excluded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4894:4915   */\n      mstore\n        /* \"#utility.yul\":4951:4953   */\n      0x1b\n        /* \"#utility.yul\":4931:4949   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4924:4954   */\n      mstore\n        /* \"#utility.yul\":4990:5019   */\n      0x4163636f756e7420697320616c7265616479206578636c756465640000000000\n        /* \"#utility.yul\":4970:4988   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4963:5020   */\n      mstore\n        /* \"#utility.yul\":5037:5055   */\n      0x64\n      add\n        /* \"CYBCC.sol\":5351:5412  require(!_isExcluded[account], \"Account is already excluded\") */\n      tag_196\n        /* \"#utility.yul\":4710:5061   */\n      jump\n        /* \"CYBCC.sol\":5351:5412  require(!_isExcluded[account], \"Account is already excluded\") */\n    tag_244:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":5426:5442  _rOwned[account] */\n      dup2\n      and\n        /* \"CYBCC.sol\":5445:5446  0 */\n      0x00\n        /* \"CYBCC.sol\":5426:5442  _rOwned[account] */\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":5426:5433  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":5426:5442  _rOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":5426:5446  _rOwned[account] > 0 */\n      iszero\n        /* \"CYBCC.sol\":5422:5529  if (_rOwned[account] > 0) {... */\n      tag_247\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":5501:5517  _rOwned[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":5501:5508  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":5501:5517  _rOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":5481:5518  tokenFromReflection(_rOwned[account]) */\n      tag_248\n      swap1\n        /* \"CYBCC.sol\":5481:5500  tokenFromReflection */\n      tag_249\n        /* \"CYBCC.sol\":5481:5518  tokenFromReflection(_rOwned[account]) */\n      jump\t// in\n    tag_248:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":5462:5478  _tOwned[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":5462:5469  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":5462:5478  _tOwned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CYBCC.sol\":5462:5518  _tOwned[account] = tokenFromReflection(_rOwned[account]) */\n      sstore\n        /* \"CYBCC.sol\":5422:5529  if (_rOwned[account] > 0) {... */\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":5538:5558  _isExcluded[account] */\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"CYBCC.sol\":5538:5549  _isExcluded */\n      0x09\n        /* \"CYBCC.sol\":5538:5558  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"CYBCC.sol\":5538:5565  _isExcluded[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"CYBCC.sol\":5561:5565  true */\n      0x01\n        /* \"CYBCC.sol\":5538:5565  _isExcluded[account] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"CYBCC.sol\":5575:5584  _excluded */\n      0x0a\n        /* \"CYBCC.sol\":5575:5598  _excluded.push(account) */\n      dup1\n      sload\n      swap2\n      dup3\n      add\n      dup2\n      sstore\n      swap1\n      swap2\n      mstore\n      0xc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"CYBCC.sol\":5273:5605  function excludeAccountFromReward(address account) public onlyOwner {... */\n      jump\t// out\n        /* \"CYBCC.sol\":3699:3947  function changeDevelopmentAccount(address newFeeAccount) public onlyOwner {... */\n    tag_119:\n        /* \"CYBCC.sol\":2006:2012  _owner */\n      sload(0x0b)\n        /* \"CYBCC.sol\":2071:2081  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":2006:2012  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":2060:2081  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":2056:2084  if (owner() == msg.sender) _ */\n      tag_228\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":3804:3831  newFeeAccount != address(0) */\n      dup2\n      and\n        /* \"CYBCC.sol\":3783:3895  require(... */\n      tag_255\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_257\n      jump\t// in\n    tag_255:\n        /* \"CYBCC.sol\":3905:3924  _developmentAccount */\n      0x14\n        /* \"CYBCC.sol\":3905:3940  _developmentAccount = newFeeAccount */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"CYBCC.sol\":3699:3947  function changeDevelopmentAccount(address newFeeAccount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":2843:3110  function balanceOf(address sender)... */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":2983:3002  _isExcluded[sender] */\n      dup2\n      and\n        /* \"CYBCC.sol\":2956:2963  uint256 */\n      0x00\n        /* \"CYBCC.sol\":2983:3002  _isExcluded[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":2983:2994  _isExcluded */\n      0x09\n        /* \"CYBCC.sol\":2983:3002  _isExcluded[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":2979:3051  if (_isExcluded[sender]) {... */\n      iszero\n      tag_259\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":3025:3040  _tOwned[sender] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":3025:3032  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":3025:3040  _tOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"CYBCC.sol\":2843:3110  function balanceOf(address sender)... */\n      jump\t// out\n        /* \"CYBCC.sol\":2979:3051  if (_isExcluded[sender]) {... */\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":3087:3102  _rOwned[sender] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":3087:3094  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":3087:3102  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":3067:3103  tokenFromReflection(_rOwned[sender]) */\n      tag_212\n      swap1\n        /* \"CYBCC.sol\":3067:3086  tokenFromReflection */\n      tag_249\n        /* \"CYBCC.sol\":3067:3103  tokenFromReflection(_rOwned[sender]) */\n      jump\t// in\n        /* \"CYBCC.sol\":3953:4062  function changePairAddress(address _pairAddress) public onlyOwner {... */\n    tag_136:\n        /* \"CYBCC.sol\":2006:2012  _owner */\n      sload(0x0b)\n        /* \"CYBCC.sol\":2071:2081  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":2006:2012  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":2060:2081  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":2056:2084  if (owner() == msg.sender) _ */\n      tag_228\n      jumpi\n        /* \"CYBCC.sol\":4029:4040  pairAddress */\n      0x15\n        /* \"CYBCC.sol\":4029:4055  pairAddress = _pairAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"CYBCC.sol\":3953:4062  function changePairAddress(address _pairAddress) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_214\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"CYBCC.sol\":6214:6398  function whitelistedAddress(address account) public onlyOwner {... */\n    tag_157:\n        /* \"CYBCC.sol\":2006:2012  _owner */\n      sload(0x0b)\n        /* \"CYBCC.sol\":2071:2081  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":2006:2012  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":2060:2081  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":2056:2084  if (owner() == msg.sender) _ */\n      tag_228\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":6295:6317  isWhitelisted[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":6295:6308  isWhitelisted */\n      0x08\n        /* \"CYBCC.sol\":6295:6317  isWhitelisted[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":6294:6317  !isWhitelisted[account] */\n      iszero\n        /* \"CYBCC.sol\":6286:6352  require(!isWhitelisted[account], \"Address is already whitelisted\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5675:5677   */\n      0x20\n        /* \"CYBCC.sol\":6286:6352  require(!isWhitelisted[account], \"Address is already whitelisted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5657:5678   */\n      mstore\n        /* \"#utility.yul\":5714:5716   */\n      0x1e\n        /* \"#utility.yul\":5694:5712   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5687:5717   */\n      mstore\n        /* \"#utility.yul\":5753:5785   */\n      0x4164647265737320697320616c72656164792077686974656c69737465640000\n        /* \"#utility.yul\":5733:5751   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5726:5786   */\n      mstore\n        /* \"#utility.yul\":5803:5821   */\n      0x64\n      add\n        /* \"CYBCC.sol\":6286:6352  require(!isWhitelisted[account], \"Address is already whitelisted\") */\n      tag_196\n        /* \"#utility.yul\":5473:5827   */\n      jump\n        /* \"CYBCC.sol\":6286:6352  require(!isWhitelisted[account], \"Address is already whitelisted\") */\n    tag_281:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":6362:6384  isWhitelisted[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":6362:6375  isWhitelisted */\n      0x08\n        /* \"CYBCC.sol\":6362:6384  isWhitelisted[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CYBCC.sol\":6362:6391  isWhitelisted[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"CYBCC.sol\":6387:6391  true */\n      0x01\n        /* \"CYBCC.sol\":6362:6391  isWhitelisted[account] = true */\n      or\n      swap1\n      sstore\n        /* \"CYBCC.sol\":6214:6398  function whitelistedAddress(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":3449:3693  function changeMarketingAccount(address newFeeAccount) public onlyOwner {... */\n    tag_161:\n        /* \"CYBCC.sol\":2006:2012  _owner */\n      sload(0x0b)\n        /* \"CYBCC.sol\":2071:2081  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":2006:2012  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":2060:2081  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":2056:2084  if (owner() == msg.sender) _ */\n      tag_228\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":3552:3579  newFeeAccount != address(0) */\n      dup2\n      and\n        /* \"CYBCC.sol\":3531:3643  require(... */\n      tag_288\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_257\n      jump\t// in\n    tag_288:\n        /* \"CYBCC.sol\":3653:3670  _marketingAccount */\n      0x13\n        /* \"CYBCC.sol\":3653:3686  _marketingAccount = newFeeAccount */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"CYBCC.sol\":3449:3693  function changeMarketingAccount(address newFeeAccount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":6404:6517  function openTrading() external onlyOwner {... */\n    tag_164:\n        /* \"CYBCC.sol\":2006:2012  _owner */\n      sload(0x0b)\n        /* \"CYBCC.sol\":2071:2081  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":2006:2012  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":2060:2081  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":2056:2084  if (owner() == msg.sender) _ */\n      tag_292\n      jumpi\n        /* \"CYBCC.sol\":6456:6467  tradingOpen */\n      0x18\n        /* \"CYBCC.sol\":6456:6474  tradingOpen = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"CYBCC.sol\":6470:6474  true */\n      0x01\n        /* \"CYBCC.sol\":6456:6474  tradingOpen = true */\n      or\n      swap1\n      sstore\n        /* \"CYBCC.sol\":6498:6510  block.number */\n      number\n        /* \"CYBCC.sol\":6484:6495  launchBlock */\n      0x17\n        /* \"CYBCC.sol\":6484:6510  launchBlock = block.number */\n      sstore\n        /* \"CYBCC.sol\":2056:2084  if (owner() == msg.sender) _ */\n    tag_292:\n        /* \"CYBCC.sol\":6404:6517  function openTrading() external onlyOwner {... */\n      jump\t// out\n        /* \"CYBCC.sol\":5611:6082  function includeAccountinReward(address account) public onlyOwner {... */\n    tag_187:\n        /* \"CYBCC.sol\":2006:2012  _owner */\n      sload(0x0b)\n        /* \"CYBCC.sol\":2071:2081  msg.sender */\n      caller\n      swap1\n        /* \"CYBCC.sol\":2006:2012  _owner */\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":2060:2081  owner() == msg.sender */\n      and\n      sub\n        /* \"CYBCC.sol\":2056:2084  if (owner() == msg.sender) _ */\n      tag_228\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":5695:5715  _isExcluded[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":5695:5706  _isExcluded */\n      0x09\n        /* \"CYBCC.sol\":5695:5715  _isExcluded[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":5687:5747  require(_isExcluded[account], \"Account is already included\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6034:6036   */\n      0x20\n        /* \"CYBCC.sol\":5687:5747  require(_isExcluded[account], \"Account is already included\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6016:6037   */\n      mstore\n        /* \"#utility.yul\":6073:6075   */\n      0x1b\n        /* \"#utility.yul\":6053:6071   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6046:6076   */\n      mstore\n        /* \"#utility.yul\":6112:6141   */\n      0x4163636f756e7420697320616c726561647920696e636c756465640000000000\n        /* \"#utility.yul\":6092:6110   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6085:6142   */\n      mstore\n        /* \"#utility.yul\":6159:6177   */\n      0x64\n      add\n        /* \"CYBCC.sol\":5687:5747  require(_isExcluded[account], \"Account is already included\") */\n      tag_196\n        /* \"#utility.yul\":5832:6183   */\n      jump\n        /* \"CYBCC.sol\":5687:5747  require(_isExcluded[account], \"Account is already included\") */\n    tag_301:\n        /* \"CYBCC.sol\":5762:5771  uint256 i */\n      0x00\n        /* \"CYBCC.sol\":5757:6076  for (uint256 i = 0; i < _excluded.length; i++) {... */\n    tag_304:\n        /* \"CYBCC.sol\":5781:5790  _excluded */\n      0x0a\n        /* \"CYBCC.sol\":5781:5797  _excluded.length */\n      sload\n        /* \"CYBCC.sol\":5777:5797  i < _excluded.length */\n      dup2\n      lt\n        /* \"CYBCC.sol\":5757:6076  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      iszero\n      tag_305\n      jumpi\n        /* \"CYBCC.sol\":5838:5845  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":5822:5845  _excluded[i] == account */\n      and\n        /* \"CYBCC.sol\":5822:5831  _excluded */\n      0x0a\n        /* \"CYBCC.sol\":5832:5833  i */\n      dup3\n        /* \"CYBCC.sol\":5822:5834  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_308\n      jumpi\n      tag_308\n      tag_309\n      jump\t// in\n    tag_308:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CYBCC.sol\":5822:5845  _excluded[i] == account */\n      sub\n        /* \"CYBCC.sol\":5818:6066  if (_excluded[i] == account) {... */\n      tag_311\n      jumpi\n        /* \"CYBCC.sol\":5880:5889  _excluded */\n      0x0a\n        /* \"CYBCC.sol\":5890:5906  _excluded.length */\n      dup1\n      sload\n        /* \"CYBCC.sol\":5890:5910  _excluded.length - 1 */\n      tag_312\n      swap1\n        /* \"CYBCC.sol\":5909:5910  1 */\n      0x01\n      swap1\n        /* \"CYBCC.sol\":5890:5910  _excluded.length - 1 */\n      tag_201\n      jump\t// in\n    tag_312:\n        /* \"CYBCC.sol\":5880:5911  _excluded[_excluded.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_314\n      jumpi\n      tag_314\n      tag_309\n      jump\t// in\n    tag_314:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"CYBCC.sol\":5865:5874  _excluded */\n      0x0a\n        /* \"CYBCC.sol\":5865:5877  _excluded[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":5880:5911  _excluded[_excluded.length - 1] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"CYBCC.sol\":5875:5876  i */\n      dup4\n      swap1\n        /* \"CYBCC.sol\":5865:5877  _excluded[i] */\n      dup2\n      lt\n      tag_317\n      jumpi\n      tag_317\n      tag_309\n      jump\t// in\n    tag_317:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap2\n      swap1\n      swap2\n      add\n        /* \"CYBCC.sol\":5865:5911  _excluded[i] = _excluded[_excluded.length - 1] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      or\n      swap1\n      sstore\n        /* \"CYBCC.sol\":5929:5945  _tOwned[account] */\n      swap2\n      dup5\n      and\n      dup2\n      mstore\n        /* \"CYBCC.sol\":5929:5936  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":5929:5945  _tOwned[account] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"CYBCC.sol\":5929:5949  _tOwned[account] = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"CYBCC.sol\":5967:5978  _isExcluded */\n      0x09\n        /* \"CYBCC.sol\":5967:5987  _isExcluded[account] */\n      swap1\n      swap3\n      mstore\n      keccak256\n        /* \"CYBCC.sol\":5967:5995  _isExcluded[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"CYBCC.sol\":6013:6022  _excluded */\n      0x0a\n        /* \"CYBCC.sol\":6013:6028  _excluded.pop() */\n      dup1\n      sload\n      dup1\n      tag_320\n      jumpi\n      tag_320\n      tag_321\n      jump\t// in\n    tag_320:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n        /* \"CYBCC.sol\":5757:6076  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      pop\n        /* \"CYBCC.sol\":5611:6082  function includeAccountinReward(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":5818:6066  if (_excluded[i] == account) {... */\n    tag_311:\n        /* \"CYBCC.sol\":5799:5802  i++ */\n      0x01\n      add\n        /* \"CYBCC.sol\":5757:6076  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      jump(tag_304)\n    tag_305:\n      pop\n        /* \"CYBCC.sol\":5611:6082  function includeAccountinReward(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":11803:12340  function _getTransferValues(uint256 tAmount)... */\n    tag_199:\n        /* \"CYBCC.sol\":11907:11914  uint256 */\n      0x00\n        /* \"CYBCC.sol\":11928:11935  uint256 */\n      0x00\n        /* \"CYBCC.sol\":11949:11956  uint256 */\n      0x00\n        /* \"CYBCC.sol\":11970:11977  uint256 */\n      0x00\n        /* \"CYBCC.sol\":12002:12018  uint256 taxValue */\n      0x00\n        /* \"CYBCC.sol\":12021:12050  _getCompleteTaxValue(tAmount) */\n      tag_325\n        /* \"CYBCC.sol\":12042:12049  tAmount */\n      dup7\n        /* \"CYBCC.sol\":12021:12041  _getCompleteTaxValue */\n      tag_326\n        /* \"CYBCC.sol\":12021:12050  _getCompleteTaxValue(tAmount) */\n      jump\t// in\n    tag_325:\n        /* \"CYBCC.sol\":12002:12050  uint256 taxValue = _getCompleteTaxValue(tAmount) */\n      swap1\n      pop\n        /* \"CYBCC.sol\":12060:12083  uint256 tTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":12086:12104  tAmount - taxValue */\n      tag_327\n        /* \"CYBCC.sol\":12002:12050  uint256 taxValue = _getCompleteTaxValue(tAmount) */\n      dup3\n        /* \"CYBCC.sol\":12086:12093  tAmount */\n      dup9\n        /* \"CYBCC.sol\":12086:12104  tAmount - taxValue */\n      tag_201\n      jump\t// in\n    tag_327:\n        /* \"CYBCC.sol\":12060:12104  uint256 tTransferAmount = tAmount - taxValue */\n      swap1\n      pop\n        /* \"CYBCC.sol\":12114:12133  uint256 currentRate */\n      0x00\n        /* \"CYBCC.sol\":12136:12146  _getRate() */\n      tag_328\n        /* \"CYBCC.sol\":12136:12144  _getRate */\n      tag_329\n        /* \"CYBCC.sol\":12136:12146  _getRate() */\n      jump\t// in\n    tag_328:\n        /* \"CYBCC.sol\":12114:12146  uint256 currentRate = _getRate() */\n      swap1\n      pop\n        /* \"CYBCC.sol\":12156:12179  uint256 rTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":12182:12211  tTransferAmount * currentRate */\n      tag_330\n        /* \"CYBCC.sol\":12114:12146  uint256 currentRate = _getRate() */\n      dup3\n        /* \"CYBCC.sol\":12182:12197  tTransferAmount */\n      dup5\n        /* \"CYBCC.sol\":12182:12211  tTransferAmount * currentRate */\n      tag_331\n      jump\t// in\n    tag_330:\n        /* \"CYBCC.sol\":12156:12211  uint256 rTransferAmount = tTransferAmount * currentRate */\n      swap1\n      pop\n        /* \"CYBCC.sol\":12221:12236  uint256 rAmount */\n      0x00\n        /* \"CYBCC.sol\":12239:12260  tAmount * currentRate */\n      tag_332\n        /* \"CYBCC.sol\":12249:12260  currentRate */\n      dup4\n        /* \"CYBCC.sol\":12239:12246  tAmount */\n      dup12\n        /* \"CYBCC.sol\":12239:12260  tAmount * currentRate */\n      tag_331\n      jump\t// in\n    tag_332:\n        /* \"CYBCC.sol\":12221:12260  uint256 rAmount = tAmount * currentRate */\n      swap11\n        /* \"CYBCC.sol\":12287:12302  rTransferAmount */\n      swap2\n      swap10\n      pop\n        /* \"CYBCC.sol\":12304:12319  tTransferAmount */\n      swap3\n      swap8\n      pop\n        /* \"CYBCC.sol\":12321:12332  currentRate */\n      swap1\n      swap6\n      pop\n        /* \"CYBCC.sol\":11803:12340  function _getTransferValues(uint256 tAmount)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8715:8843  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8799:8836  _approve(owner, spender, value, true) */\n      tag_334\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8808:8813  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8815:8822  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8824:8829  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8831:8835  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8799:8807  _approve */\n      tag_335\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8799:8836  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_334:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8715:8843  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10404:10880  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_221:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10503:10527  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10569:10605  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10565:10874  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_342\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10644:10649  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10625:10641  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10625:10649  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10621:10751  if (currentAllowance < value) {... */\n      iszero\n      tag_339\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10676:10736  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6845:6877   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10676:10736  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6827:6878   */\n      mstore\n        /* \"#utility.yul\":6894:6912   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6887:6921   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6937:6955   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6930:6964   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6800:6818   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10676:10736  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_196\n        /* \"#utility.yul\":6625:6970   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10621:10751  if (currentAllowance < value) {... */\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10792:10849  _approve(owner, spender, currentAllowance - value, false) */\n      tag_342\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10801:10806  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10808:10815  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10836:10841  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10817:10833  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10817:10841  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10843:10848  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10792:10800  _approve */\n      tag_335\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10792:10849  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_342:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10493:10880  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10404:10880  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":6897:7776  function _transfer(... */\n    tag_223:\n        /* \"CYBCC.sol\":6590:6601  tradingOpen */\n      sload(0x18)\n        /* \"CYBCC.sol\":7040:7046  sender */\n      dup4\n      swap1\n        /* \"CYBCC.sol\":7048:7057  recipient */\n      dup4\n      swap1\n        /* \"CYBCC.sol\":6590:6601  tradingOpen */\n      0xff\n      and\n        /* \"CYBCC.sol\":6585:6874  if (!tradingOpen) {... */\n      tag_344\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":6625:6642  isWhitelisted[to] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":6625:6638  isWhitelisted */\n      0x08\n        /* \"CYBCC.sol\":6625:6642  isWhitelisted[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":6617:6670  require(isWhitelisted[to], \"Trading not yet enabled\") */\n      tag_345\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7177:7179   */\n      0x20\n        /* \"CYBCC.sol\":6617:6670  require(isWhitelisted[to], \"Trading not yet enabled\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7159:7180   */\n      mstore\n        /* \"#utility.yul\":7216:7218   */\n      0x17\n        /* \"#utility.yul\":7196:7214   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7189:7219   */\n      mstore\n        /* \"#utility.yul\":7255:7280   */\n      0x54726164696e67206e6f742079657420656e61626c6564000000000000000000\n        /* \"#utility.yul\":7235:7253   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7228:7281   */\n      mstore\n        /* \"#utility.yul\":7298:7316   */\n      0x64\n      add\n        /* \"CYBCC.sol\":6617:6670  require(isWhitelisted[to], \"Trading not yet enabled\") */\n      tag_196\n        /* \"#utility.yul\":6975:7322   */\n      jump\n        /* \"CYBCC.sol\":6617:6670  require(isWhitelisted[to], \"Trading not yet enabled\") */\n    tag_345:\n        /* \"CYBCC.sol\":6585:6874  if (!tradingOpen) {... */\n      jump(tag_351)\n    tag_344:\n        /* \"CYBCC.sol\":6707:6718  launchBlock */\n      sload(0x17)\n        /* \"CYBCC.sol\":6707:6722  launchBlock + 3 */\n      tag_349\n      swap1\n        /* \"CYBCC.sol\":6721:6722  3 */\n      0x03\n        /* \"CYBCC.sol\":6707:6722  launchBlock + 3 */\n      tag_204\n      jump\t// in\n    tag_349:\n        /* \"CYBCC.sol\":6691:6703  block.number */\n      number\n        /* \"CYBCC.sol\":6691:6722  block.number <= launchBlock + 3 */\n      gt\n        /* \"CYBCC.sol\":6687:6874  if (block.number <= launchBlock + 3) {... */\n      tag_351\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":6807:6824  isWhitelisted[to] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":6807:6820  isWhitelisted */\n      0x08\n        /* \"CYBCC.sol\":6807:6824  isWhitelisted[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":6799:6863  require(isWhitelisted[to], \"Launch protection: not whitelisted\") */\n      tag_351\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7529:7531   */\n      0x20\n        /* \"CYBCC.sol\":6799:6863  require(isWhitelisted[to], \"Launch protection: not whitelisted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7511:7532   */\n      mstore\n        /* \"#utility.yul\":7568:7570   */\n      0x22\n        /* \"#utility.yul\":7548:7566   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7541:7571   */\n      mstore\n        /* \"#utility.yul\":7607:7641   */\n      0x4c61756e63682070726f74656374696f6e3a206e6f742077686974656c697374\n        /* \"#utility.yul\":7587:7605   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7580:7642   */\n      mstore\n      shl(0xf2, 0x1959)\n        /* \"#utility.yul\":7658:7676   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7651:7683   */\n      mstore\n        /* \"#utility.yul\":7700:7719   */\n      0x84\n      add\n        /* \"CYBCC.sol\":6799:6863  require(isWhitelisted[to], \"Launch protection: not whitelisted\") */\n      tag_196\n        /* \"#utility.yul\":7327:7725   */\n      jump\n        /* \"CYBCC.sol\":6799:6863  require(isWhitelisted[to], \"Launch protection: not whitelisted\") */\n    tag_351:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":7077:7097  sender != address(0) */\n      dup6\n      and\n        /* \"CYBCC.sol\":7069:7139  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_355\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7932:7934   */\n      0x20\n        /* \"CYBCC.sol\":7069:7139  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7914:7935   */\n      mstore\n        /* \"#utility.yul\":7971:7973   */\n      0x25\n        /* \"#utility.yul\":7951:7969   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7944:7974   */\n      mstore\n        /* \"#utility.yul\":8010:8044   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":7990:8008   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7983:8045   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":8061:8079   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8054:8089   */\n      mstore\n        /* \"#utility.yul\":8106:8125   */\n      0x84\n      add\n        /* \"CYBCC.sol\":7069:7139  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_196\n        /* \"#utility.yul\":7730:8131   */\n      jump\n        /* \"CYBCC.sol\":7069:7139  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_355:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":7157:7180  recipient != address(0) */\n      dup5\n      and\n        /* \"CYBCC.sol\":7149:7220  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_358\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8338:8340   */\n      0x20\n        /* \"CYBCC.sol\":7149:7220  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8320:8341   */\n      mstore\n        /* \"#utility.yul\":8377:8379   */\n      0x23\n        /* \"#utility.yul\":8357:8375   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8350:8380   */\n      mstore\n        /* \"#utility.yul\":8416:8450   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":8396:8414   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8389:8451   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":8467:8485   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8460:8493   */\n      mstore\n        /* \"#utility.yul\":8510:8529   */\n      0x84\n      add\n        /* \"CYBCC.sol\":7149:7220  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_196\n        /* \"#utility.yul\":8136:8535   */\n      jump\n        /* \"CYBCC.sol\":7149:7220  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_358:\n        /* \"CYBCC.sol\":7230:7251  uint256 senderBalance */\n      0x00\n        /* \"CYBCC.sol\":7254:7271  balanceOf(sender) */\n      tag_361\n        /* \"CYBCC.sol\":7264:7270  sender */\n      dup7\n        /* \"CYBCC.sol\":7254:7263  balanceOf */\n      tag_123\n        /* \"CYBCC.sol\":7254:7271  balanceOf(sender) */\n      jump\t// in\n    tag_361:\n        /* \"CYBCC.sol\":7230:7271  uint256 senderBalance = balanceOf(sender) */\n      swap1\n      pop\n        /* \"CYBCC.sol\":7319:7325  amount */\n      dup4\n        /* \"CYBCC.sol\":7302:7315  senderBalance */\n      dup2\n        /* \"CYBCC.sol\":7302:7325  senderBalance >= amount */\n      lt\n      iszero\n        /* \"CYBCC.sol\":7281:7389  require(... */\n      tag_362\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8742:8744   */\n      0x20\n        /* \"CYBCC.sol\":7281:7389  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8724:8745   */\n      mstore\n        /* \"#utility.yul\":8781:8783   */\n      0x26\n        /* \"#utility.yul\":8761:8779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8754:8784   */\n      mstore\n        /* \"#utility.yul\":8820:8854   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":8800:8818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8793:8855   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":8871:8889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8864:8900   */\n      mstore\n        /* \"#utility.yul\":8917:8936   */\n      0x84\n      add\n        /* \"CYBCC.sol\":7281:7389  require(... */\n      tag_196\n        /* \"#utility.yul\":8540:8942   */\n      jump\n        /* \"CYBCC.sol\":7281:7389  require(... */\n    tag_362:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":2803:2830  _isExcludedFromFee[account] */\n      dup6\n      and\n        /* \"CYBCC.sol\":2780:2784  bool */\n      0x00\n        /* \"CYBCC.sol\":2803:2830  _isExcludedFromFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":2803:2821  _isExcludedFromFee */\n      0x07\n        /* \"CYBCC.sol\":2803:2830  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":7400:7583  if (!isExcludedFromFee(recipient)) {... */\n      tag_369\n      jumpi\n        /* \"CYBCC.sol\":7507:7522  maxWalletAmount */\n      sload(0x16)\n        /* \"CYBCC.sol\":7497:7503  amount */\n      dup5\n        /* \"CYBCC.sol\":7474:7494  balanceOf(recipient) */\n      tag_367\n        /* \"CYBCC.sol\":7484:7493  recipient */\n      dup8\n        /* \"CYBCC.sol\":7474:7483  balanceOf */\n      tag_123\n        /* \"CYBCC.sol\":7474:7494  balanceOf(recipient) */\n      jump\t// in\n    tag_367:\n        /* \"CYBCC.sol\":7474:7503  balanceOf(recipient) + amount */\n      tag_368\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_368:\n        /* \"CYBCC.sol\":7474:7522  balanceOf(recipient) + amount <= maxWalletAmount */\n      gt\n      iszero\n        /* \"CYBCC.sol\":7449:7572  require(... */\n      tag_369\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9149:9151   */\n      0x20\n        /* \"CYBCC.sol\":7449:7572  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9131:9152   */\n      mstore\n        /* \"#utility.yul\":9188:9190   */\n      0x10\n        /* \"#utility.yul\":9168:9186   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9161:9191   */\n      mstore\n      shl(0x80, 0x5768616c652064657465637465642121)\n        /* \"#utility.yul\":9207:9225   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9200:9246   */\n      mstore\n        /* \"#utility.yul\":9263:9281   */\n      0x64\n      add\n        /* \"CYBCC.sol\":7449:7572  require(... */\n      tag_196\n        /* \"#utility.yul\":8947:9287   */\n      jump\n        /* \"CYBCC.sol\":7449:7572  require(... */\n    tag_369:\n        /* \"CYBCC.sol\":7629:7640  pairAddress */\n      sload(0x15)\n        /* \"CYBCC.sol\":7592:7604  bool takeFee */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":7619:7640  sender == pairAddress */\n      dup9\n      dup2\n      and\n        /* \"CYBCC.sol\":7629:7640  pairAddress */\n      swap2\n      and\n        /* \"CYBCC.sol\":7619:7640  sender == pairAddress */\n      eq\n      dup1\n        /* \"CYBCC.sol\":7619:7668  sender == pairAddress || recipient == pairAddress */\n      tag_372\n      jumpi\n      pop\n        /* \"CYBCC.sol\":7657:7668  pairAddress */\n      sload(0x15)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":7644:7668  recipient == pairAddress */\n      dup8\n      dup2\n      and\n        /* \"CYBCC.sol\":7657:7668  pairAddress */\n      swap2\n      and\n        /* \"CYBCC.sol\":7644:7668  recipient == pairAddress */\n      eq\n        /* \"CYBCC.sol\":7619:7668  sender == pairAddress || recipient == pairAddress */\n    tag_372:\n        /* \"CYBCC.sol\":7615:7709  if (sender == pairAddress || recipient == pairAddress) {... */\n      iszero\n      tag_373\n      jumpi\n      pop\n        /* \"CYBCC.sol\":7694:7698  true */\n      0x01\n        /* \"CYBCC.sol\":7615:7709  if (sender == pairAddress || recipient == pairAddress) {... */\n    tag_373:\n        /* \"CYBCC.sol\":7719:7769  _tokenTransfer(sender, recipient, amount, takeFee) */\n      tag_374\n        /* \"CYBCC.sol\":7734:7740  sender */\n      dup8\n        /* \"CYBCC.sol\":7742:7751  recipient */\n      dup8\n        /* \"CYBCC.sol\":7753:7759  amount */\n      dup8\n        /* \"CYBCC.sol\":7761:7768  takeFee */\n      dup5\n        /* \"CYBCC.sol\":7719:7733  _tokenTransfer */\n      tag_375\n        /* \"CYBCC.sol\":7719:7769  _tokenTransfer(sender, recipient, amount, takeFee) */\n      jump\t// in\n    tag_374:\n        /* \"CYBCC.sol\":7059:7776  {... */\n      pop\n      pop\n        /* \"CYBCC.sol\":6897:7776  function _transfer(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":4958:5267  function tokenFromReflection(uint256 rAmount)... */\n    tag_249:\n        /* \"CYBCC.sol\":5050:5057  uint256 */\n      0x00\n        /* \"CYBCC.sol\":5105:5112  _rTotal */\n      sload(0x0d)\n        /* \"CYBCC.sol\":5094:5101  rAmount */\n      dup3\n        /* \"CYBCC.sol\":5094:5112  rAmount <= _rTotal */\n      gt\n      iszero\n        /* \"CYBCC.sol\":5073:5180  require(... */\n      tag_377\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9494:9496   */\n      0x20\n        /* \"CYBCC.sol\":5073:5180  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9476:9497   */\n      mstore\n        /* \"#utility.yul\":9533:9535   */\n      0x2a\n        /* \"#utility.yul\":9513:9531   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9506:9536   */\n      mstore\n        /* \"#utility.yul\":9572:9606   */\n      0x416d6f756e74206d757374206265206c657373207468616e20746f74616c2072\n        /* \"#utility.yul\":9552:9570   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9545:9607   */\n      mstore\n      shl(0xb0, 0x65666c656374696f6e73)\n        /* \"#utility.yul\":9623:9641   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9616:9656   */\n      mstore\n        /* \"#utility.yul\":9673:9692   */\n      0x84\n      add\n        /* \"CYBCC.sol\":5073:5180  require(... */\n      tag_196\n        /* \"#utility.yul\":9292:9698   */\n      jump\n        /* \"CYBCC.sol\":5073:5180  require(... */\n    tag_377:\n        /* \"CYBCC.sol\":5190:5209  uint256 currentRate */\n      0x00\n        /* \"CYBCC.sol\":5212:5222  _getRate() */\n      tag_380\n        /* \"CYBCC.sol\":5212:5220  _getRate */\n      tag_329\n        /* \"CYBCC.sol\":5212:5222  _getRate() */\n      jump\t// in\n    tag_380:\n        /* \"CYBCC.sol\":5190:5222  uint256 currentRate = _getRate() */\n      swap1\n      pop\n        /* \"CYBCC.sol\":5239:5260  rAmount / currentRate */\n      tag_381\n        /* \"CYBCC.sol\":5190:5222  uint256 currentRate = _getRate() */\n      dup2\n        /* \"CYBCC.sol\":5239:5246  rAmount */\n      dup5\n        /* \"CYBCC.sol\":5239:5260  rAmount / currentRate */\n      tag_382\n      jump\t// in\n    tag_381:\n        /* \"CYBCC.sol\":5232:5260  return rAmount / currentRate */\n      swap4\n        /* \"CYBCC.sol\":4958:5267  function tokenFromReflection(uint256 rAmount)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":11551:11797  function _getCompleteTaxValue(uint256 tAmount)... */\n    tag_326:\n        /* \"CYBCC.sol\":11644:11651  uint256 */\n      0x00\n        /* \"CYBCC.sol\":11667:11683  uint256 allTaxes */\n      0x00\n        /* \"CYBCC.sol\":11703:11710  _taxFee */\n      sload(0x11)\n        /* \"CYBCC.sol\":11686:11700  _reflectionFee */\n      sload(0x0f)\n        /* \"CYBCC.sol\":11686:11710  _reflectionFee + _taxFee */\n      tag_384\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_384:\n        /* \"CYBCC.sol\":11667:11710  uint256 allTaxes = _reflectionFee + _taxFee */\n      swap1\n      pop\n        /* \"CYBCC.sol\":11720:11736  uint256 taxValue */\n      0x00\n        /* \"CYBCC.sol\":11762:11765  100 */\n      0x64\n        /* \"CYBCC.sol\":11740:11758  tAmount * allTaxes */\n      tag_385\n        /* \"CYBCC.sol\":11667:11710  uint256 allTaxes = _reflectionFee + _taxFee */\n      dup4\n        /* \"CYBCC.sol\":11740:11747  tAmount */\n      dup7\n        /* \"CYBCC.sol\":11740:11758  tAmount * allTaxes */\n      tag_331\n      jump\t// in\n    tag_385:\n        /* \"CYBCC.sol\":11739:11765  (tAmount * allTaxes) / 100 */\n      tag_386\n      swap2\n      swap1\n      tag_382\n      jump\t// in\n    tag_386:\n        /* \"CYBCC.sol\":11720:11765  uint256 taxValue = (tAmount * allTaxes) / 100 */\n      swap5\n        /* \"CYBCC.sol\":11551:11797  function _getCompleteTaxValue(uint256 tAmount)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":12601:12759  function _getRate() private view returns (uint256) {... */\n    tag_329:\n        /* \"CYBCC.sol\":12643:12650  uint256 */\n      0x00\n        /* \"CYBCC.sol\":12663:12678  uint256 rSupply */\n      0x00\n        /* \"CYBCC.sol\":12680:12695  uint256 tSupply */\n      0x00\n        /* \"CYBCC.sol\":12699:12718  _getCurrentSupply() */\n      tag_388\n        /* \"CYBCC.sol\":12699:12716  _getCurrentSupply */\n      tag_389\n        /* \"CYBCC.sol\":12699:12718  _getCurrentSupply() */\n      jump\t// in\n    tag_388:\n        /* \"CYBCC.sol\":12662:12718  (uint256 rSupply, uint256 tSupply) = _getCurrentSupply() */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"CYBCC.sol\":12735:12752  rSupply / tSupply */\n      tag_390\n        /* \"CYBCC.sol\":12662:12718  (uint256 rSupply, uint256 tSupply) = _getCurrentSupply() */\n      dup2\n      dup4\n        /* \"CYBCC.sol\":12735:12752  rSupply / tSupply */\n      tag_382\n      jump\t// in\n    tag_390:\n        /* \"CYBCC.sol\":12728:12752  return rSupply / tSupply */\n      swap3\n      pop\n      pop\n      pop\n        /* \"CYBCC.sol\":12601:12759  function _getRate() private view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9690:10122  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_335:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9802:9821  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9798:9887  if (owner == address(0)) {... */\n      tag_392\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9844:9876  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9873:9874  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9844:9876  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1671:1722   */\n      mstore\n        /* \"#utility.yul\":1644:1662   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9844:9876  ERC20InvalidApprover(address(0)) */\n      tag_196\n        /* \"#utility.yul\":1525:1728   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9798:9887  if (owner == address(0)) {... */\n    tag_392:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9900:9921  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9896:9986  if (spender == address(0)) {... */\n      tag_394\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9944:9975  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9972:9973  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9944:9975  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1671:1722   */\n      mstore\n        /* \"#utility.yul\":1644:1662   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9944:9975  ERC20InvalidSpender(address(0)) */\n      tag_196\n        /* \"#utility.yul\":1525:1728   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9896:9986  if (spender == address(0)) {... */\n    tag_394:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9995:10013  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9995:10006  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9995:10013  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9995:10022  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9995:10030  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10040:10116  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_342\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10090:10097  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10074:10105  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10083:10088  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10074:10105  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10099:10104  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10074:10105  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_397\n      swap2\n        /* \"#utility.yul\":1489:1514   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1477:1479   */\n      0x20\n        /* \"#utility.yul\":1462:1480   */\n      add\n      swap1\n        /* \"#utility.yul\":1343:1520   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10074:10105  Approval(owner, spender, value) */\n    tag_397:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9690:10122  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":7782:8551  function _tokenTransfer(... */\n    tag_375:\n        /* \"CYBCC.sol\":7922:7929  takeFee */\n      dup1\n        /* \"CYBCC.sol\":7917:7970  if (!takeFee) {... */\n      tag_400\n      jumpi\n        /* \"CYBCC.sol\":7945:7959  removeAllFee() */\n      tag_400\n        /* \"CYBCC.sol\":7945:7957  removeAllFee */\n      tag_401\n        /* \"CYBCC.sol\":7945:7959  removeAllFee() */\n      jump\t// in\n    tag_400:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":7984:8001  _isExcluded[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":7984:7995  _isExcluded */\n      0x09\n        /* \"CYBCC.sol\":7984:8001  _isExcluded[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":7984:8021  _isExcluded[from] && !_isExcluded[to] */\n      dup1\n      iszero\n      tag_402\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":8006:8021  _isExcluded[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":8006:8017  _isExcluded */\n      0x09\n        /* \"CYBCC.sol\":8006:8021  _isExcluded[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":8005:8021  !_isExcluded[to] */\n      iszero\n        /* \"CYBCC.sol\":7984:8021  _isExcluded[from] && !_isExcluded[to] */\n    tag_402:\n        /* \"CYBCC.sol\":7980:8481  if (_isExcluded[from] && !_isExcluded[to]) {... */\n      iszero\n      tag_403\n      jumpi\n        /* \"CYBCC.sol\":8037:8075  _transferFromExcluded(from, to, value) */\n      tag_404\n        /* \"CYBCC.sol\":8059:8063  from */\n      dup5\n        /* \"CYBCC.sol\":8065:8067  to */\n      dup5\n        /* \"CYBCC.sol\":8069:8074  value */\n      dup5\n        /* \"CYBCC.sol\":8037:8058  _transferFromExcluded */\n      tag_405\n        /* \"CYBCC.sol\":8037:8075  _transferFromExcluded(from, to, value) */\n      jump\t// in\n    tag_404:\n        /* \"CYBCC.sol\":7980:8481  if (_isExcluded[from] && !_isExcluded[to]) {... */\n      jump(tag_422)\n    tag_403:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":8097:8114  _isExcluded[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":8097:8108  _isExcluded */\n      0x09\n        /* \"CYBCC.sol\":8097:8114  _isExcluded[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":8096:8114  !_isExcluded[from] */\n      iszero\n        /* \"CYBCC.sol\":8096:8133  !_isExcluded[from] && _isExcluded[to] */\n      dup1\n      iszero\n      tag_407\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":8118:8133  _isExcluded[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":8118:8129  _isExcluded */\n      0x09\n        /* \"CYBCC.sol\":8118:8133  _isExcluded[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":8096:8133  !_isExcluded[from] && _isExcluded[to] */\n    tag_407:\n        /* \"CYBCC.sol\":8092:8481  if (!_isExcluded[from] && _isExcluded[to]) {... */\n      iszero\n      tag_408\n      jumpi\n        /* \"CYBCC.sol\":8149:8185  _transferToExcluded(from, to, value) */\n      tag_404\n        /* \"CYBCC.sol\":8169:8173  from */\n      dup5\n        /* \"CYBCC.sol\":8175:8177  to */\n      dup5\n        /* \"CYBCC.sol\":8179:8184  value */\n      dup5\n        /* \"CYBCC.sol\":8149:8168  _transferToExcluded */\n      tag_410\n        /* \"CYBCC.sol\":8149:8185  _transferToExcluded(from, to, value) */\n      jump\t// in\n        /* \"CYBCC.sol\":8092:8481  if (!_isExcluded[from] && _isExcluded[to]) {... */\n    tag_408:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":8207:8224  _isExcluded[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":8207:8218  _isExcluded */\n      0x09\n        /* \"CYBCC.sol\":8207:8224  _isExcluded[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":8206:8224  !_isExcluded[from] */\n      iszero\n        /* \"CYBCC.sol\":8206:8244  !_isExcluded[from] && !_isExcluded[to] */\n      dup1\n      iszero\n      tag_412\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":8229:8244  _isExcluded[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":8229:8240  _isExcluded */\n      0x09\n        /* \"CYBCC.sol\":8229:8244  _isExcluded[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":8228:8244  !_isExcluded[to] */\n      iszero\n        /* \"CYBCC.sol\":8206:8244  !_isExcluded[from] && !_isExcluded[to] */\n    tag_412:\n        /* \"CYBCC.sol\":8202:8481  if (!_isExcluded[from] && !_isExcluded[to]) {... */\n      iszero\n      tag_413\n      jumpi\n        /* \"CYBCC.sol\":8260:8294  _transferStandard(from, to, value) */\n      tag_404\n        /* \"CYBCC.sol\":8278:8282  from */\n      dup5\n        /* \"CYBCC.sol\":8284:8286  to */\n      dup5\n        /* \"CYBCC.sol\":8288:8293  value */\n      dup5\n        /* \"CYBCC.sol\":8260:8277  _transferStandard */\n      tag_415\n        /* \"CYBCC.sol\":8260:8294  _transferStandard(from, to, value) */\n      jump\t// in\n        /* \"CYBCC.sol\":8202:8481  if (!_isExcluded[from] && !_isExcluded[to]) {... */\n    tag_413:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":8315:8332  _isExcluded[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":8315:8326  _isExcluded */\n      0x09\n        /* \"CYBCC.sol\":8315:8332  _isExcluded[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":8315:8351  _isExcluded[from] && _isExcluded[to] */\n      dup1\n      iszero\n      tag_417\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":8336:8351  _isExcluded[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":8336:8347  _isExcluded */\n      0x09\n        /* \"CYBCC.sol\":8336:8351  _isExcluded[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CYBCC.sol\":8315:8351  _isExcluded[from] && _isExcluded[to] */\n    tag_417:\n        /* \"CYBCC.sol\":8311:8481  if (_isExcluded[from] && _isExcluded[to]) {... */\n      iszero\n      tag_418\n      jumpi\n        /* \"CYBCC.sol\":8367:8405  _transferBothExcluded(from, to, value) */\n      tag_404\n        /* \"CYBCC.sol\":8389:8393  from */\n      dup5\n        /* \"CYBCC.sol\":8395:8397  to */\n      dup5\n        /* \"CYBCC.sol\":8399:8404  value */\n      dup5\n        /* \"CYBCC.sol\":8367:8388  _transferBothExcluded */\n      tag_420\n        /* \"CYBCC.sol\":8367:8405  _transferBothExcluded(from, to, value) */\n      jump\t// in\n        /* \"CYBCC.sol\":8311:8481  if (_isExcluded[from] && _isExcluded[to]) {... */\n    tag_418:\n        /* \"CYBCC.sol\":8436:8470  _transferStandard(from, to, value) */\n      tag_422\n        /* \"CYBCC.sol\":8454:8458  from */\n      dup5\n        /* \"CYBCC.sol\":8460:8462  to */\n      dup5\n        /* \"CYBCC.sol\":8464:8469  value */\n      dup5\n        /* \"CYBCC.sol\":8436:8453  _transferStandard */\n      tag_415\n        /* \"CYBCC.sol\":8436:8470  _transferStandard(from, to, value) */\n      jump\t// in\n    tag_422:\n        /* \"CYBCC.sol\":8496:8503  takeFee */\n      dup1\n        /* \"CYBCC.sol\":8491:8545  if (!takeFee) {... */\n      tag_342\n      jumpi\n        /* \"CYBCC.sol\":8519:8534  restoreAllFee() */\n      tag_342\n        /* \"CYBCC.sol\":8854:8876  _previousReflectionFee */\n      sload(0x10)\n        /* \"CYBCC.sol\":8837:8851  _reflectionFee */\n      0x0f\n        /* \"CYBCC.sol\":8837:8876  _reflectionFee = _previousReflectionFee */\n      sstore\n        /* \"CYBCC.sol\":8896:8911  _previousTaxFee */\n      sload(0x12)\n        /* \"CYBCC.sol\":8886:8893  _taxFee */\n      0x11\n        /* \"CYBCC.sol\":8886:8911  _taxFee = _previousTaxFee */\n      sstore\n        /* \"CYBCC.sol\":8794:8918  function restoreAllFee() private {... */\n      jump\n        /* \"CYBCC.sol\":12765:13407  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n    tag_389:\n        /* \"CYBCC.sol\":12862:12869  _rTotal */\n      sload(0x0d)\n        /* \"CYBCC.sol\":12897:12904  _tTotal */\n      sload(0x0c)\n        /* \"CYBCC.sol\":12816:12823  uint256 */\n      0x00\n      swap2\n      dup3\n      swap2\n      dup3\n        /* \"CYBCC.sol\":12915:13272  for (uint256 i = 0; i < _excluded.length; i++) {... */\n    tag_427:\n        /* \"CYBCC.sol\":12939:12948  _excluded */\n      0x0a\n        /* \"CYBCC.sol\":12939:12955  _excluded.length */\n      sload\n        /* \"CYBCC.sol\":12935:12955  i < _excluded.length */\n      dup2\n      lt\n        /* \"CYBCC.sol\":12915:13272  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      iszero\n      tag_428\n      jumpi\n        /* \"CYBCC.sol\":13021:13028  rSupply */\n      dup3\n        /* \"CYBCC.sol\":12997:13004  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":12997:13018  _rOwned[_excluded[i]] */\n      0x00\n        /* \"CYBCC.sol\":13005:13014  _excluded */\n      0x0a\n        /* \"CYBCC.sol\":13015:13016  i */\n      dup5\n        /* \"CYBCC.sol\":13005:13017  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_431\n      jumpi\n      tag_431\n      tag_309\n      jump\t// in\n    tag_431:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CYBCC.sol\":12997:13018  _rOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":12997:13028  _rOwned[_excluded[i]] > rSupply */\n      gt\n      dup1\n        /* \"CYBCC.sol\":12997:13079  _rOwned[_excluded[i]] > rSupply ||... */\n      tag_433\n      jumpi\n      pop\n        /* \"CYBCC.sol\":13072:13079  tSupply */\n      dup2\n        /* \"CYBCC.sol\":13048:13055  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":13048:13069  _tOwned[_excluded[i]] */\n      0x00\n        /* \"CYBCC.sol\":13056:13065  _excluded */\n      0x0a\n        /* \"CYBCC.sol\":13066:13067  i */\n      dup5\n        /* \"CYBCC.sol\":13056:13068  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_435\n      jumpi\n      tag_435\n      tag_309\n      jump\t// in\n    tag_435:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CYBCC.sol\":13048:13069  _tOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":13048:13079  _tOwned[_excluded[i]] > tSupply */\n      gt\n        /* \"CYBCC.sol\":12997:13079  _rOwned[_excluded[i]] > rSupply ||... */\n    tag_433:\n        /* \"CYBCC.sol\":12976:13152  if (... */\n      iszero\n      tag_437\n      jumpi\n        /* \"CYBCC.sol\":13120:13127  _rTotal */\n      sload(0x0d)\n        /* \"CYBCC.sol\":13129:13136  _tTotal */\n      sload(0x0c)\n        /* \"CYBCC.sol\":13112:13137  return (_rTotal, _tTotal) */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"CYBCC.sol\":12765:13407  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"CYBCC.sol\":12976:13152  if (... */\n    tag_437:\n        /* \"CYBCC.sol\":13185:13192  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":13185:13206  _rOwned[_excluded[i]] */\n      0x00\n        /* \"CYBCC.sol\":13193:13202  _excluded */\n      0x0a\n        /* \"CYBCC.sol\":13203:13204  i */\n      dup4\n        /* \"CYBCC.sol\":13193:13205  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_439\n      jumpi\n      tag_439\n      tag_309\n      jump\t// in\n    tag_439:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CYBCC.sol\":13185:13206  _rOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":13175:13206  rSupply - _rOwned[_excluded[i]] */\n      tag_441\n      swap1\n        /* \"CYBCC.sol\":13175:13182  rSupply */\n      dup5\n        /* \"CYBCC.sol\":13175:13206  rSupply - _rOwned[_excluded[i]] */\n      tag_201\n      jump\t// in\n    tag_441:\n        /* \"CYBCC.sol\":13165:13206  rSupply = rSupply - _rOwned[_excluded[i]] */\n      swap3\n      pop\n        /* \"CYBCC.sol\":13240:13247  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":13240:13261  _tOwned[_excluded[i]] */\n      0x00\n        /* \"CYBCC.sol\":13248:13257  _excluded */\n      0x0a\n        /* \"CYBCC.sol\":13258:13259  i */\n      dup4\n        /* \"CYBCC.sol\":13248:13260  _excluded[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_443\n      jumpi\n      tag_443\n      tag_309\n      jump\t// in\n    tag_443:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CYBCC.sol\":13240:13261  _tOwned[_excluded[i]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":13230:13261  tSupply - _tOwned[_excluded[i]] */\n      tag_445\n      swap1\n        /* \"CYBCC.sol\":13230:13237  tSupply */\n      dup4\n        /* \"CYBCC.sol\":13230:13261  tSupply - _tOwned[_excluded[i]] */\n      tag_201\n      jump\t// in\n    tag_445:\n        /* \"CYBCC.sol\":13220:13261  tSupply = tSupply - _tOwned[_excluded[i]] */\n      swap2\n      pop\n        /* \"CYBCC.sol\":12957:12960  i++ */\n      0x01\n      add\n        /* \"CYBCC.sol\":12915:13272  for (uint256 i = 0; i < _excluded.length; i++) {... */\n      jump(tag_427)\n    tag_428:\n      pop\n        /* \"CYBCC.sol\":13306:13313  _tTotal */\n      sload(0x0c)\n        /* \"CYBCC.sol\":13296:13303  _rTotal */\n      sload(0x0d)\n        /* \"CYBCC.sol\":13296:13313  _rTotal / _tTotal */\n      tag_446\n      swap2\n      swap1\n      tag_382\n      jump\t// in\n    tag_446:\n        /* \"CYBCC.sol\":13286:13293  rSupply */\n      dup3\n        /* \"CYBCC.sol\":13286:13313  rSupply < _rTotal / _tTotal */\n      lt\n        /* \"CYBCC.sol\":13282:13365  if (rSupply < _rTotal / _tTotal) {... */\n      iszero\n      tag_447\n      jumpi\n        /* \"CYBCC.sol\":13337:13344  _rTotal */\n      sload(0x0d)\n        /* \"CYBCC.sol\":13346:13353  _tTotal */\n      sload(0x0c)\n        /* \"CYBCC.sol\":13329:13354  return (_rTotal, _tTotal) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"CYBCC.sol\":12765:13407  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"CYBCC.sol\":13282:13365  if (rSupply < _rTotal / _tTotal) {... */\n    tag_447:\n        /* \"CYBCC.sol\":13383:13390  rSupply */\n      swap1\n      swap4\n        /* \"CYBCC.sol\":13392:13399  tSupply */\n      swap1\n      swap3\n      pop\n        /* \"CYBCC.sol\":12765:13407  function _getCurrentSupply() private view returns (uint256, uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":8557:8788  function removeAllFee() private {... */\n    tag_401:\n        /* \"CYBCC.sol\":8603:8617  _reflectionFee */\n      sload(0x0f)\n        /* \"CYBCC.sol\":8603:8622  _reflectionFee == 0 */\n      iszero\n        /* \"CYBCC.sol\":8603:8638  _reflectionFee == 0 && _taxFee == 0 */\n      dup1\n      iszero\n      tag_449\n      jumpi\n      pop\n        /* \"CYBCC.sol\":8626:8633  _taxFee */\n      sload(0x11)\n        /* \"CYBCC.sol\":8626:8638  _taxFee == 0 */\n      iszero\n        /* \"CYBCC.sol\":8603:8638  _reflectionFee == 0 && _taxFee == 0 */\n    tag_449:\n        /* \"CYBCC.sol\":8599:8647  if (_reflectionFee == 0 && _taxFee == 0) return; */\n      iszero\n      tag_450\n      jumpi\n        /* \"CYBCC.sol\":8557:8788  function removeAllFee() private {... */\n      jump\t// out\n        /* \"CYBCC.sol\":8599:8647  if (_reflectionFee == 0 && _taxFee == 0) return; */\n    tag_450:\n        /* \"CYBCC.sol\":8682:8696  _reflectionFee */\n      0x0f\n      dup1\n      sload\n        /* \"CYBCC.sol\":8657:8679  _previousReflectionFee */\n      0x10\n        /* \"CYBCC.sol\":8657:8696  _previousReflectionFee = _reflectionFee */\n      sstore\n        /* \"CYBCC.sol\":8724:8731  _taxFee */\n      0x11\n      dup1\n      sload\n        /* \"CYBCC.sol\":8706:8721  _previousTaxFee */\n      0x12\n        /* \"CYBCC.sol\":8706:8731  _previousTaxFee = _taxFee */\n      sstore\n      0x00\n        /* \"CYBCC.sol\":8742:8760  _reflectionFee = 0 */\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"CYBCC.sol\":8770:8781  _taxFee = 0 */\n      sstore\n        /* \"CYBCC.sol\":8557:8788  function removeAllFee() private {... */\n      jump\t// out\n        /* \"CYBCC.sol\":10182:10827  function _transferFromExcluded(... */\n    tag_405:\n        /* \"CYBCC.sol\":10327:10342  uint256 rAmount */\n      0x00\n        /* \"CYBCC.sol\":10356:10379  uint256 rTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":10393:10416  uint256 tTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":10430:10449  uint256 currentRate */\n      0x00\n        /* \"CYBCC.sol\":10462:10489  _getTransferValues(tAmount) */\n      tag_452\n        /* \"CYBCC.sol\":10481:10488  tAmount */\n      dup6\n        /* \"CYBCC.sol\":10462:10480  _getTransferValues */\n      tag_199\n        /* \"CYBCC.sol\":10462:10489  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_452:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":10517:10532  _tOwned[sender] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":10517:10524  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":10517:10532  _tOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":10313:10489  (... */\n      swap4\n      swap8\n      pop\n      swap2\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"CYBCC.sol\":10517:10542  _tOwned[sender] - tAmount */\n      tag_453\n      swap1\n        /* \"CYBCC.sol\":10535:10542  tAmount */\n      dup7\n      swap1\n        /* \"CYBCC.sol\":10517:10542  _tOwned[sender] - tAmount */\n      tag_201\n      jump\t// in\n    tag_453:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":10499:10514  _tOwned[sender] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":10499:10506  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":10499:10514  _tOwned[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CYBCC.sol\":10499:10542  _tOwned[sender] = _tOwned[sender] - tAmount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CYBCC.sol\":10570:10577  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":10570:10585  _rOwned[sender] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"CYBCC.sol\":10570:10595  _rOwned[sender] - rAmount */\n      tag_454\n      swap1\n        /* \"CYBCC.sol\":10588:10595  rAmount */\n      dup6\n      swap1\n        /* \"CYBCC.sol\":10570:10595  _rOwned[sender] - rAmount */\n      tag_201\n      jump\t// in\n    tag_454:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":10552:10567  _rOwned[sender] */\n      dup1\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":10552:10559  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":10552:10567  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"CYBCC.sol\":10552:10595  _rOwned[sender] = _rOwned[sender] - rAmount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CYBCC.sol\":10626:10644  _rOwned[recipient] */\n      swap1\n      dup9\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"CYBCC.sol\":10626:10662  _rOwned[recipient] + rTransferAmount */\n      tag_455\n      swap1\n        /* \"CYBCC.sol\":10647:10662  rTransferAmount */\n      dup5\n      swap1\n        /* \"CYBCC.sol\":10626:10662  _rOwned[recipient] + rTransferAmount */\n      tag_204\n      jump\t// in\n    tag_455:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":10605:10623  _rOwned[recipient] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":10605:10612  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":10605:10623  _rOwned[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CYBCC.sol\":10605:10662  _rOwned[recipient] = _rOwned[recipient] + rTransferAmount */\n      sstore\n        /* \"CYBCC.sol\":10673:10717  taxFeeTransfer(sender, tAmount, currentRate) */\n      tag_456\n        /* \"CYBCC.sol\":10688:10694  sender */\n      dup8\n        /* \"CYBCC.sol\":10696:10703  tAmount */\n      dup7\n        /* \"CYBCC.sol\":10705:10716  currentRate */\n      dup4\n        /* \"CYBCC.sol\":10673:10687  taxFeeTransfer */\n      tag_457\n        /* \"CYBCC.sol\":10673:10717  taxFeeTransfer(sender, tAmount, currentRate) */\n      jump\t// in\n    tag_456:\n        /* \"CYBCC.sol\":10727:10760  _reflectFee(tAmount, currentRate) */\n      tag_458\n        /* \"CYBCC.sol\":10739:10746  tAmount */\n      dup6\n        /* \"CYBCC.sol\":10748:10759  currentRate */\n      dup3\n        /* \"CYBCC.sol\":10727:10738  _reflectFee */\n      tag_459\n        /* \"CYBCC.sol\":10727:10760  _reflectFee(tAmount, currentRate) */\n      jump\t// in\n    tag_458:\n        /* \"CYBCC.sol\":10793:10802  recipient */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":10776:10820  Transfer(sender, recipient, tTransferAmount) */\n      and\n        /* \"CYBCC.sol\":10785:10791  sender */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":10776:10820  Transfer(sender, recipient, tTransferAmount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"CYBCC.sol\":10804:10819  tTransferAmount */\n      dup5\n        /* \"CYBCC.sol\":10776:10820  Transfer(sender, recipient, tTransferAmount) */\n      mload(0x40)\n      tag_460\n      swap2\n        /* \"#utility.yul\":1489:1514   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1477:1479   */\n      0x20\n        /* \"#utility.yul\":1462:1480   */\n      add\n      swap1\n        /* \"#utility.yul\":1343:1520   */\n      jump\n        /* \"CYBCC.sol\":10776:10820  Transfer(sender, recipient, tTransferAmount) */\n    tag_460:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"CYBCC.sol\":10303:10827  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"CYBCC.sol\":10182:10827  function _transferFromExcluded(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":9519:10176  function _transferToExcluded(... */\n    tag_410:\n        /* \"CYBCC.sol\":9662:9677  uint256 rAmount */\n      0x00\n        /* \"CYBCC.sol\":9691:9714  uint256 rTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":9728:9751  uint256 tTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":9765:9784  uint256 currentRate */\n      0x00\n        /* \"CYBCC.sol\":9797:9824  _getTransferValues(tAmount) */\n      tag_462\n        /* \"CYBCC.sol\":9816:9823  tAmount */\n      dup6\n        /* \"CYBCC.sol\":9797:9815  _getTransferValues */\n      tag_199\n        /* \"CYBCC.sol\":9797:9824  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_462:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":9852:9867  _rOwned[sender] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":9852:9859  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":9852:9867  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":9648:9824  (... */\n      swap4\n      swap8\n      pop\n      swap2\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"CYBCC.sol\":9852:9877  _rOwned[sender] - rAmount */\n      tag_463\n      swap1\n        /* \"CYBCC.sol\":9648:9824  (... */\n      dup6\n      swap1\n        /* \"CYBCC.sol\":9852:9877  _rOwned[sender] - rAmount */\n      tag_201\n      jump\t// in\n    tag_463:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":9834:9849  _rOwned[sender] */\n      dup1\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":9834:9841  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":9834:9849  _rOwned[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CYBCC.sol\":9834:9877  _rOwned[sender] = _rOwned[sender] - rAmount */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"CYBCC.sol\":9908:9926  _tOwned[recipient] */\n      swap2\n      dup10\n      and\n      dup2\n      mstore\n        /* \"CYBCC.sol\":9908:9915  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":9908:9926  _tOwned[recipient] */\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n        /* \"CYBCC.sol\":9908:9944  _tOwned[recipient] + tTransferAmount */\n      tag_464\n      swap1\n        /* \"CYBCC.sol\":9929:9944  tTransferAmount */\n      dup4\n      swap1\n        /* \"CYBCC.sol\":9908:9944  _tOwned[recipient] + tTransferAmount */\n      tag_204\n      jump\t// in\n    tag_464:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":9887:9905  _tOwned[recipient] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":9887:9894  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":9887:9905  _tOwned[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CYBCC.sol\":9887:9944  _tOwned[recipient] = _tOwned[recipient] + tTransferAmount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CYBCC.sol\":9975:9982  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":9975:9993  _rOwned[recipient] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"CYBCC.sol\":9975:10011  _rOwned[recipient] + rTransferAmount */\n      tag_455\n      swap1\n        /* \"CYBCC.sol\":9996:10011  rTransferAmount */\n      dup5\n      swap1\n        /* \"CYBCC.sol\":9975:10011  _rOwned[recipient] + rTransferAmount */\n      tag_204\n      jump\t// in\n        /* \"CYBCC.sol\":8924:9513  function _transferStandard(... */\n    tag_415:\n        /* \"CYBCC.sol\":9065:9080  uint256 rAmount */\n      0x00\n        /* \"CYBCC.sol\":9094:9117  uint256 rTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":9131:9154  uint256 tTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":9168:9187  uint256 currentRate */\n      0x00\n        /* \"CYBCC.sol\":9200:9227  _getTransferValues(tAmount) */\n      tag_470\n        /* \"CYBCC.sol\":9219:9226  tAmount */\n      dup6\n        /* \"CYBCC.sol\":9200:9218  _getTransferValues */\n      tag_199\n        /* \"CYBCC.sol\":9200:9227  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_470:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":9256:9271  _rOwned[sender] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":9256:9263  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":9256:9271  _rOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":9051:9227  (... */\n      swap4\n      swap8\n      pop\n      swap2\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"CYBCC.sol\":9256:9281  _rOwned[sender] - rAmount */\n      tag_454\n      swap1\n        /* \"CYBCC.sol\":9051:9227  (... */\n      dup6\n      swap1\n        /* \"CYBCC.sol\":9256:9281  _rOwned[sender] - rAmount */\n      tag_201\n      jump\t// in\n        /* \"CYBCC.sol\":10833:11545  function _transferBothExcluded(... */\n    tag_420:\n        /* \"CYBCC.sol\":10978:10993  uint256 rAmount */\n      0x00\n        /* \"CYBCC.sol\":11007:11030  uint256 rTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":11044:11067  uint256 tTransferAmount */\n      0x00\n        /* \"CYBCC.sol\":11081:11100  uint256 currentRate */\n      0x00\n        /* \"CYBCC.sol\":11113:11140  _getTransferValues(tAmount) */\n      tag_477\n        /* \"CYBCC.sol\":11132:11139  tAmount */\n      dup6\n        /* \"CYBCC.sol\":11113:11131  _getTransferValues */\n      tag_199\n        /* \"CYBCC.sol\":11113:11140  _getTransferValues(tAmount) */\n      jump\t// in\n    tag_477:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":11168:11183  _tOwned[sender] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":11168:11175  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":11168:11183  _tOwned[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":10964:11140  (... */\n      swap4\n      swap8\n      pop\n      swap2\n      swap6\n      pop\n      swap4\n      pop\n      swap2\n      pop\n        /* \"CYBCC.sol\":11168:11193  _tOwned[sender] - tAmount */\n      tag_478\n      swap1\n        /* \"CYBCC.sol\":11186:11193  tAmount */\n      dup7\n      swap1\n        /* \"CYBCC.sol\":11168:11193  _tOwned[sender] - tAmount */\n      tag_201\n      jump\t// in\n    tag_478:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":11150:11165  _tOwned[sender] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":11150:11157  _tOwned */\n      0x06\n        /* \"CYBCC.sol\":11150:11165  _tOwned[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"CYBCC.sol\":11150:11193  _tOwned[sender] = _tOwned[sender] - tAmount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CYBCC.sol\":11221:11228  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":11221:11236  _rOwned[sender] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"CYBCC.sol\":11221:11246  _rOwned[sender] - rAmount */\n      tag_463\n      swap1\n        /* \"CYBCC.sol\":11239:11246  rAmount */\n      dup6\n      swap1\n        /* \"CYBCC.sol\":11221:11246  _rOwned[sender] - rAmount */\n      tag_201\n      jump\t// in\n        /* \"CYBCC.sol\":13413:14007  function taxFeeTransfer(... */\n    tag_457:\n        /* \"CYBCC.sol\":13539:13554  uint256 tTaxFee */\n      0x00\n        /* \"CYBCC.sol\":13579:13582  100 */\n      0x64\n        /* \"CYBCC.sol\":13568:13575  _taxFee */\n      sload(0x11)\n        /* \"CYBCC.sol\":13558:13565  tAmount */\n      dup5\n        /* \"CYBCC.sol\":13558:13575  tAmount * _taxFee */\n      tag_487\n      swap2\n      swap1\n      tag_331\n      jump\t// in\n    tag_487:\n        /* \"CYBCC.sol\":13557:13582  (tAmount * _taxFee) / 100 */\n      tag_488\n      swap2\n      swap1\n      tag_382\n      jump\t// in\n    tag_488:\n        /* \"CYBCC.sol\":13539:13582  uint256 tTaxFee = (tAmount * _taxFee) / 100 */\n      swap1\n      pop\n        /* \"CYBCC.sol\":13596:13607  tTaxFee > 0 */\n      dup1\n      iszero\n        /* \"CYBCC.sol\":13592:14001  if (tTaxFee > 0) {... */\n      tag_342\n      jumpi\n        /* \"CYBCC.sol\":13623:13638  uint256 rTaxFee */\n      0x00\n        /* \"CYBCC.sol\":13667:13668  2 */\n      0x02\n        /* \"CYBCC.sol\":13642:13663  tTaxFee * currentRate */\n      tag_490\n        /* \"CYBCC.sol\":13652:13663  currentRate */\n      dup5\n        /* \"CYBCC.sol\":13642:13649  tTaxFee */\n      dup5\n        /* \"CYBCC.sol\":13642:13663  tTaxFee * currentRate */\n      tag_331\n      jump\t// in\n    tag_490:\n        /* \"CYBCC.sol\":13641:13668  (tTaxFee * currentRate) / 2 */\n      tag_491\n      swap2\n      swap1\n      tag_382\n      jump\t// in\n    tag_491:\n        /* \"CYBCC.sol\":13719:13736  _marketingAccount */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x13))\n        /* \"CYBCC.sol\":13711:13737  _rOwned[_marketingAccount] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":13711:13718  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":13711:13737  _rOwned[_marketingAccount] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"CYBCC.sol\":13623:13668  uint256 rTaxFee = (tTaxFee * currentRate) / 2 */\n      swap1\n      swap2\n      pop\n        /* \"CYBCC.sol\":13711:13747  _rOwned[_marketingAccount] + rTaxFee */\n      tag_492\n      swap1\n        /* \"CYBCC.sol\":13623:13668  uint256 rTaxFee = (tTaxFee * currentRate) / 2 */\n      dup3\n      swap1\n        /* \"CYBCC.sol\":13711:13747  _rOwned[_marketingAccount] + rTaxFee */\n      tag_204\n      jump\t// in\n    tag_492:\n        /* \"CYBCC.sol\":13690:13707  _marketingAccount */\n      sload(0x13)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"CYBCC.sol\":13682:13708  _rOwned[_marketingAccount] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":13682:13689  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":13682:13708  _rOwned[_marketingAccount] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"CYBCC.sol\":13682:13747  _rOwned[_marketingAccount] = _rOwned[_marketingAccount] + rTaxFee */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CYBCC.sol\":13816:13835  _developmentAccount */\n      sload(0x14)\n      swap1\n      swap2\n      and\n        /* \"CYBCC.sol\":13808:13836  _rOwned[_developmentAccount] */\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"CYBCC.sol\":13808:13862  _rOwned[_developmentAccount] +... */\n      tag_493\n      swap1\n        /* \"CYBCC.sol\":13855:13862  rTaxFee */\n      dup3\n      swap1\n        /* \"CYBCC.sol\":13808:13862  _rOwned[_developmentAccount] +... */\n      tag_204\n      jump\t// in\n    tag_493:\n        /* \"CYBCC.sol\":13769:13788  _developmentAccount */\n      sload(0x14)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"CYBCC.sol\":13761:13789  _rOwned[_developmentAccount] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CYBCC.sol\":13761:13768  _rOwned */\n      0x05\n        /* \"CYBCC.sol\":13761:13789  _rOwned[_developmentAccount] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"CYBCC.sol\":13761:13862  _rOwned[_developmentAccount] =... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"CYBCC.sol\":13898:13915  _marketingAccount */\n      sload(0x13)\n        /* \"CYBCC.sol\":13881:13925  Transfer(sender, _marketingAccount, tTaxFee) */\n      swap1\n      mload\n        /* \"#utility.yul\":1489:1514   */\n      dup6\n      dup2\n      mstore\n        /* \"CYBCC.sol\":13898:13915  _marketingAccount */\n      swap1\n      dup3\n      and\n      swap3\n        /* \"CYBCC.sol\":13881:13925  Transfer(sender, _marketingAccount, tTaxFee) */\n      swap2\n      dup9\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1462:1480   */\n      add\n        /* \"CYBCC.sol\":13881:13925  Transfer(sender, _marketingAccount, tTaxFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"CYBCC.sol\":13961:13980  _developmentAccount */\n      sload(0x14)\n        /* \"CYBCC.sol\":13944:13990  Transfer(sender, _developmentAccount, tTaxFee) */\n      mload(0x40)\n        /* \"#utility.yul\":1489:1514   */\n      dup4\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CYBCC.sol\":13961:13980  _developmentAccount */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"CYBCC.sol\":13944:13990  Transfer(sender, _developmentAccount, tTaxFee) */\n      dup8\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1477:1479   */\n      0x20\n        /* \"#utility.yul\":1462:1480   */\n      add\n        /* \"CYBCC.sol\":13944:13990  Transfer(sender, _developmentAccount, tTaxFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"CYBCC.sol\":13609:14001  {... */\n      pop\n        /* \"CYBCC.sol\":13529:14007  {... */\n      pop\n        /* \"CYBCC.sol\":13413:14007  function taxFeeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CYBCC.sol\":12346:12595  function _reflectFee(uint256 tAmount, uint256 currentRate) private {... */\n    tag_459:\n        /* \"CYBCC.sol\":12423:12435  uint256 tFee */\n      0x00\n        /* \"CYBCC.sol\":12467:12470  100 */\n      0x64\n        /* \"CYBCC.sol\":12449:12463  _reflectionFee */\n      sload(0x0f)\n        /* \"CYBCC.sol\":12439:12446  tAmount */\n      dup5\n        /* \"CYBCC.sol\":12439:12463  tAmount * _reflectionFee */\n      tag_497\n      swap2\n      swap1\n      tag_331\n      jump\t// in\n    tag_497:\n        /* \"CYBCC.sol\":12438:12470  (tAmount * _reflectionFee) / 100 */\n      tag_498\n      swap2\n      swap1\n      tag_382\n      jump\t// in\n    tag_498:\n        /* \"CYBCC.sol\":12423:12470  uint256 tFee = (tAmount * _reflectionFee) / 100 */\n      swap1\n      pop\n        /* \"CYBCC.sol\":12480:12492  uint256 rFee */\n      0x00\n        /* \"CYBCC.sol\":12495:12513  tFee * currentRate */\n      tag_499\n        /* \"CYBCC.sol\":12502:12513  currentRate */\n      dup4\n        /* \"CYBCC.sol\":12423:12470  uint256 tFee = (tAmount * _reflectionFee) / 100 */\n      dup4\n        /* \"CYBCC.sol\":12495:12513  tFee * currentRate */\n      tag_331\n      jump\t// in\n    tag_499:\n        /* \"CYBCC.sol\":12480:12513  uint256 rFee = tFee * currentRate */\n      swap1\n      pop\n        /* \"CYBCC.sol\":12544:12548  rFee */\n      dup1\n        /* \"CYBCC.sol\":12534:12541  _rTotal */\n      sload(0x0d)\n        /* \"CYBCC.sol\":12534:12548  _rTotal - rFee */\n      tag_500\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_500:\n        /* \"CYBCC.sol\":12524:12531  _rTotal */\n      0x0d\n        /* \"CYBCC.sol\":12524:12548  _rTotal = _rTotal - rFee */\n      sstore\n        /* \"CYBCC.sol\":12571:12581  _tFeeTotal */\n      sload(0x0e)\n        /* \"CYBCC.sol\":12571:12588  _tFeeTotal + tFee */\n      tag_501\n      swap1\n        /* \"CYBCC.sol\":12584:12588  tFee */\n      dup4\n      swap1\n        /* \"CYBCC.sol\":12571:12588  _tFeeTotal + tFee */\n      tag_204\n      jump\t// in\n    tag_501:\n        /* \"CYBCC.sol\":12558:12568  _tFeeTotal */\n      0x0e\n        /* \"CYBCC.sol\":12558:12588  _tFeeTotal = _tFeeTotal + tFee */\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"CYBCC.sol\":12346:12595  function _reflectFee(uint256 tAmount, uint256 currentRate) private {... */\n      jump\t// out\n        /* \"#utility.yul\":14:240   */\n    tag_47:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_506:\n      pop\n        /* \"#utility.yul\":187:210   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:240   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":245:663   */\n    tag_53:\n        /* \"#utility.yul\":394:396   */\n      0x20\n        /* \"#utility.yul\":383:392   */\n      dup2\n        /* \"#utility.yul\":376:397   */\n      mstore\n        /* \"#utility.yul\":357:361   */\n      0x00\n        /* \"#utility.yul\":426:432   */\n      dup3\n        /* \"#utility.yul\":420:433   */\n      mload\n        /* \"#utility.yul\":469:475   */\n      dup1\n        /* \"#utility.yul\":464:466   */\n      0x20\n        /* \"#utility.yul\":453:462   */\n      dup5\n        /* \"#utility.yul\":449:467   */\n      add\n        /* \"#utility.yul\":442:476   */\n      mstore\n        /* \"#utility.yul\":528:534   */\n      dup1\n        /* \"#utility.yul\":523:525   */\n      0x20\n        /* \"#utility.yul\":515:521   */\n      dup6\n        /* \"#utility.yul\":511:526   */\n      add\n        /* \"#utility.yul\":506:508   */\n      0x40\n        /* \"#utility.yul\":495:504   */\n      dup6\n        /* \"#utility.yul\":491:509   */\n      add\n        /* \"#utility.yul\":485:535   */\n      mcopy\n        /* \"#utility.yul\":584:585   */\n      0x00\n        /* \"#utility.yul\":579:581   */\n      0x40\n        /* \"#utility.yul\":570:576   */\n      dup3\n        /* \"#utility.yul\":559:568   */\n      dup6\n        /* \"#utility.yul\":555:577   */\n      add\n        /* \"#utility.yul\":551:582   */\n      add\n        /* \"#utility.yul\":544:586   */\n      mstore\n        /* \"#utility.yul\":654:656   */\n      0x40\n        /* \"#utility.yul\":647:649   */\n      0x1f\n        /* \"#utility.yul\":643:650   */\n      not\n        /* \"#utility.yul\":638:640   */\n      0x1f\n        /* \"#utility.yul\":630:636   */\n      dup4\n        /* \"#utility.yul\":626:641   */\n      add\n        /* \"#utility.yul\":622:651   */\n      and\n        /* \"#utility.yul\":611:620   */\n      dup5\n        /* \"#utility.yul\":607:652   */\n      add\n        /* \"#utility.yul\":603:657   */\n      add\n        /* \"#utility.yul\":595:657   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":245:663   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":668:841   */\n    tag_502:\n        /* \"#utility.yul\":736:756   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":785:816   */\n      dup2\n      and\n        /* \"#utility.yul\":775:817   */\n      dup2\n      eq\n        /* \"#utility.yul\":765:835   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":831:832   */\n      0x00\n        /* \"#utility.yul\":828:829   */\n      0x00\n        /* \"#utility.yul\":821:833   */\n      revert\n        /* \"#utility.yul\":765:835   */\n    tag_509:\n        /* \"#utility.yul\":668:841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":846:1146   */\n    tag_57:\n        /* \"#utility.yul\":914:920   */\n      0x00\n        /* \"#utility.yul\":922:928   */\n      0x00\n        /* \"#utility.yul\":975:977   */\n      0x40\n        /* \"#utility.yul\":963:972   */\n      dup4\n        /* \"#utility.yul\":954:961   */\n      dup6\n        /* \"#utility.yul\":950:973   */\n      sub\n        /* \"#utility.yul\":946:978   */\n      slt\n        /* \"#utility.yul\":943:995   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":988:989   */\n      0x00\n        /* \"#utility.yul\":981:993   */\n      revert\n        /* \"#utility.yul\":943:995   */\n    tag_511:\n        /* \"#utility.yul\":1014:1043   */\n      tag_512\n        /* \"#utility.yul\":1033:1042   */\n      dup4\n        /* \"#utility.yul\":1014:1043   */\n      tag_502\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":1004:1043   */\n      swap5\n        /* \"#utility.yul\":1112:1114   */\n      0x20\n        /* \"#utility.yul\":1097:1115   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1084:1116   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":846:1146   */\n      jump\t// out\n        /* \"#utility.yul\":1733:2107   */\n    tag_74:\n        /* \"#utility.yul\":1810:1816   */\n      0x00\n        /* \"#utility.yul\":1818:1824   */\n      0x00\n        /* \"#utility.yul\":1826:1832   */\n      0x00\n        /* \"#utility.yul\":1879:1881   */\n      0x60\n        /* \"#utility.yul\":1867:1876   */\n      dup5\n        /* \"#utility.yul\":1858:1865   */\n      dup7\n        /* \"#utility.yul\":1854:1877   */\n      sub\n        /* \"#utility.yul\":1850:1882   */\n      slt\n        /* \"#utility.yul\":1847:1899   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":1895:1896   */\n      0x00\n        /* \"#utility.yul\":1892:1893   */\n      0x00\n        /* \"#utility.yul\":1885:1897   */\n      revert\n        /* \"#utility.yul\":1847:1899   */\n    tag_517:\n        /* \"#utility.yul\":1918:1947   */\n      tag_518\n        /* \"#utility.yul\":1937:1946   */\n      dup5\n        /* \"#utility.yul\":1918:1947   */\n      tag_502\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":1908:1947   */\n      swap3\n      pop\n        /* \"#utility.yul\":1966:2004   */\n      tag_519\n        /* \"#utility.yul\":2000:2002   */\n      0x20\n        /* \"#utility.yul\":1989:1998   */\n      dup6\n        /* \"#utility.yul\":1985:2003   */\n      add\n        /* \"#utility.yul\":1966:2004   */\n      tag_502\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":1733:2107   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1956:2004   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2073:2075   */\n      0x40\n        /* \"#utility.yul\":2058:2076   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2045:2077   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1733:2107   */\n      jump\t// out\n        /* \"#utility.yul\":2301:2487   */\n    tag_89:\n        /* \"#utility.yul\":2360:2366   */\n      0x00\n        /* \"#utility.yul\":2413:2415   */\n      0x20\n        /* \"#utility.yul\":2401:2410   */\n      dup3\n        /* \"#utility.yul\":2392:2399   */\n      dup5\n        /* \"#utility.yul\":2388:2411   */\n      sub\n        /* \"#utility.yul\":2384:2416   */\n      slt\n        /* \"#utility.yul\":2381:2433   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":2429:2430   */\n      0x00\n        /* \"#utility.yul\":2426:2427   */\n      0x00\n        /* \"#utility.yul\":2419:2431   */\n      revert\n        /* \"#utility.yul\":2381:2433   */\n    tag_522:\n        /* \"#utility.yul\":2452:2481   */\n      tag_381\n        /* \"#utility.yul\":2471:2480   */\n      dup3\n        /* \"#utility.yul\":2452:2481   */\n      tag_502\n      jump\t// in\n        /* \"#utility.yul\":2492:2887   */\n    tag_99:\n        /* \"#utility.yul\":2557:2563   */\n      0x00\n        /* \"#utility.yul\":2565:2571   */\n      0x00\n        /* \"#utility.yul\":2618:2620   */\n      0x40\n        /* \"#utility.yul\":2606:2615   */\n      dup4\n        /* \"#utility.yul\":2597:2604   */\n      dup6\n        /* \"#utility.yul\":2593:2616   */\n      sub\n        /* \"#utility.yul\":2589:2621   */\n      slt\n        /* \"#utility.yul\":2586:2638   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":2634:2635   */\n      0x00\n        /* \"#utility.yul\":2631:2632   */\n      0x00\n        /* \"#utility.yul\":2624:2636   */\n      revert\n        /* \"#utility.yul\":2586:2638   */\n    tag_525:\n        /* \"#utility.yul\":2679:2702   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2778:2780   */\n      0x20\n        /* \"#utility.yul\":2763:2781   */\n      dup4\n      add\n        /* \"#utility.yul\":2750:2782   */\n      calldataload\n        /* \"#utility.yul\":2820:2835   */\n      dup1\n      iszero\n        /* \"#utility.yul\":2813:2836   */\n      iszero\n        /* \"#utility.yul\":2801:2837   */\n      dup2\n      eq\n        /* \"#utility.yul\":2791:2855   */\n      tag_526\n      jumpi\n        /* \"#utility.yul\":2851:2852   */\n      0x00\n        /* \"#utility.yul\":2848:2849   */\n      0x00\n        /* \"#utility.yul\":2841:2853   */\n      revert\n        /* \"#utility.yul\":2791:2855   */\n    tag_526:\n        /* \"#utility.yul\":2874:2881   */\n      dup1\n        /* \"#utility.yul\":2864:2881   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2492:2887   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2892:3152   */\n    tag_177:\n        /* \"#utility.yul\":2960:2966   */\n      0x00\n        /* \"#utility.yul\":2968:2974   */\n      0x00\n        /* \"#utility.yul\":3021:3023   */\n      0x40\n        /* \"#utility.yul\":3009:3018   */\n      dup4\n        /* \"#utility.yul\":3000:3007   */\n      dup6\n        /* \"#utility.yul\":2996:3019   */\n      sub\n        /* \"#utility.yul\":2992:3024   */\n      slt\n        /* \"#utility.yul\":2989:3041   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":3037:3038   */\n      0x00\n        /* \"#utility.yul\":3034:3035   */\n      0x00\n        /* \"#utility.yul\":3027:3039   */\n      revert\n        /* \"#utility.yul\":2989:3041   */\n    tag_528:\n        /* \"#utility.yul\":3060:3089   */\n      tag_529\n        /* \"#utility.yul\":3079:3088   */\n      dup4\n        /* \"#utility.yul\":3060:3089   */\n      tag_502\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":3050:3089   */\n      swap2\n      pop\n        /* \"#utility.yul\":3108:3146   */\n      tag_530\n        /* \"#utility.yul\":3142:3144   */\n      0x20\n        /* \"#utility.yul\":3131:3140   */\n      dup5\n        /* \"#utility.yul\":3127:3145   */\n      add\n        /* \"#utility.yul\":3108:3146   */\n      tag_502\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":3098:3146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2892:3152   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3697   */\n    tag_503:\n        /* \"#utility.yul\":3631:3641   */\n      0x4e487b71\n        /* \"#utility.yul\":3626:3629   */\n      0xe0\n        /* \"#utility.yul\":3622:3642   */\n      shl\n        /* \"#utility.yul\":3619:3620   */\n      0x00\n        /* \"#utility.yul\":3612:3643   */\n      mstore\n        /* \"#utility.yul\":3662:3666   */\n      0x11\n        /* \"#utility.yul\":3659:3660   */\n      0x04\n        /* \"#utility.yul\":3652:3667   */\n      mstore\n        /* \"#utility.yul\":3686:3690   */\n      0x24\n        /* \"#utility.yul\":3683:3684   */\n      0x00\n        /* \"#utility.yul\":3676:3691   */\n      revert\n        /* \"#utility.yul\":3702:3830   */\n    tag_201:\n        /* \"#utility.yul\":3769:3778   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3790:3801   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3787:3824   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":3804:3822   */\n      tag_212\n      tag_503\n      jump\t// in\n        /* \"#utility.yul\":3835:3960   */\n    tag_204:\n        /* \"#utility.yul\":3900:3909   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3921:3931   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3918:3954   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":3934:3952   */\n      tag_212\n      tag_503\n      jump\t// in\n        /* \"#utility.yul\":3965:4345   */\n    tag_207:\n        /* \"#utility.yul\":4044:4045   */\n      0x01\n        /* \"#utility.yul\":4040:4052   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4087:4099   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4108:4169   */\n      tag_540\n      jumpi\n        /* \"#utility.yul\":4162:4166   */\n      0x7f\n        /* \"#utility.yul\":4154:4160   */\n      dup3\n        /* \"#utility.yul\":4150:4167   */\n      and\n        /* \"#utility.yul\":4140:4167   */\n      swap2\n      pop\n        /* \"#utility.yul\":4108:4169   */\n    tag_540:\n        /* \"#utility.yul\":4215:4217   */\n      0x20\n        /* \"#utility.yul\":4207:4213   */\n      dup3\n        /* \"#utility.yul\":4204:4218   */\n      lt\n        /* \"#utility.yul\":4184:4202   */\n      dup2\n        /* \"#utility.yul\":4181:4219   */\n      sub\n        /* \"#utility.yul\":4178:4339   */\n      tag_541\n      jumpi\n        /* \"#utility.yul\":4261:4271   */\n      0x4e487b71\n        /* \"#utility.yul\":4256:4259   */\n      0xe0\n        /* \"#utility.yul\":4252:4272   */\n      shl\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4242:4273   */\n      mstore\n        /* \"#utility.yul\":4296:4300   */\n      0x22\n        /* \"#utility.yul\":4293:4294   */\n      0x04\n        /* \"#utility.yul\":4286:4301   */\n      mstore\n        /* \"#utility.yul\":4324:4328   */\n      0x24\n        /* \"#utility.yul\":4321:4322   */\n      0x00\n        /* \"#utility.yul\":4314:4329   */\n      revert\n        /* \"#utility.yul\":4178:4339   */\n    tag_541:\n      pop\n        /* \"#utility.yul\":3965:4345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5066:5468   */\n    tag_257:\n        /* \"#utility.yul\":5268:5270   */\n      0x20\n        /* \"#utility.yul\":5250:5271   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5307:5309   */\n      0x26\n        /* \"#utility.yul\":5287:5305   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5280:5310   */\n      mstore\n        /* \"#utility.yul\":5346:5380   */\n      0x7a65726f20616464726573732063616e206e6f74206265207468652046656541\n        /* \"#utility.yul\":5341:5343   */\n      0x40\n        /* \"#utility.yul\":5326:5344   */\n      dup3\n      add\n        /* \"#utility.yul\":5319:5381   */\n      mstore\n      shl(0xd2, 0x18d8dbdd5b9d)\n        /* \"#utility.yul\":5412:5414   */\n      0x60\n        /* \"#utility.yul\":5397:5415   */\n      dup3\n      add\n        /* \"#utility.yul\":5390:5426   */\n      mstore\n        /* \"#utility.yul\":5458:5461   */\n      0x80\n        /* \"#utility.yul\":5443:5462   */\n      add\n      swap1\n        /* \"#utility.yul\":5066:5468   */\n      jump\t// out\n        /* \"#utility.yul\":6188:6315   */\n    tag_309:\n        /* \"#utility.yul\":6249:6259   */\n      0x4e487b71\n        /* \"#utility.yul\":6244:6247   */\n      0xe0\n        /* \"#utility.yul\":6240:6260   */\n      shl\n        /* \"#utility.yul\":6237:6238   */\n      0x00\n        /* \"#utility.yul\":6230:6261   */\n      mstore\n        /* \"#utility.yul\":6280:6284   */\n      0x32\n        /* \"#utility.yul\":6277:6278   */\n      0x04\n        /* \"#utility.yul\":6270:6285   */\n      mstore\n        /* \"#utility.yul\":6304:6308   */\n      0x24\n        /* \"#utility.yul\":6301:6302   */\n      0x00\n        /* \"#utility.yul\":6294:6309   */\n      revert\n        /* \"#utility.yul\":6320:6447   */\n    tag_321:\n        /* \"#utility.yul\":6381:6391   */\n      0x4e487b71\n        /* \"#utility.yul\":6376:6379   */\n      0xe0\n        /* \"#utility.yul\":6372:6392   */\n      shl\n        /* \"#utility.yul\":6369:6370   */\n      0x00\n        /* \"#utility.yul\":6362:6393   */\n      mstore\n        /* \"#utility.yul\":6412:6416   */\n      0x31\n        /* \"#utility.yul\":6409:6410   */\n      0x04\n        /* \"#utility.yul\":6402:6417   */\n      mstore\n        /* \"#utility.yul\":6436:6440   */\n      0x24\n        /* \"#utility.yul\":6433:6434   */\n      0x00\n        /* \"#utility.yul\":6426:6441   */\n      revert\n        /* \"#utility.yul\":6452:6620   */\n    tag_331:\n        /* \"#utility.yul\":6525:6534   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":6556:6565   */\n      dup2\n      iszero\n        /* \"#utility.yul\":6573:6588   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":6567:6589   */\n      dup5\n      eq\n        /* \"#utility.yul\":6553:6590   */\n      or\n        /* \"#utility.yul\":6543:6614   */\n      tag_212\n      jumpi\n        /* \"#utility.yul\":6594:6612   */\n      tag_212\n      tag_503\n      jump\t// in\n        /* \"#utility.yul\":9703:9920   */\n    tag_382:\n        /* \"#utility.yul\":9743:9744   */\n      0x00\n        /* \"#utility.yul\":9769:9770   */\n      dup3\n        /* \"#utility.yul\":9759:9891   */\n      tag_561\n      jumpi\n        /* \"#utility.yul\":9813:9823   */\n      0x4e487b71\n        /* \"#utility.yul\":9808:9811   */\n      0xe0\n        /* \"#utility.yul\":9804:9824   */\n      shl\n        /* \"#utility.yul\":9801:9802   */\n      0x00\n        /* \"#utility.yul\":9794:9825   */\n      mstore\n        /* \"#utility.yul\":9848:9852   */\n      0x12\n        /* \"#utility.yul\":9845:9846   */\n      0x04\n        /* \"#utility.yul\":9838:9853   */\n      mstore\n        /* \"#utility.yul\":9876:9880   */\n      0x24\n        /* \"#utility.yul\":9873:9874   */\n      0x00\n        /* \"#utility.yul\":9866:9881   */\n      revert\n        /* \"#utility.yul\":9759:9891   */\n    tag_561:\n      pop\n        /* \"#utility.yul\":9905:9914   */\n      div\n      swap1\n        /* \"#utility.yul\":9703:9920   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207bb390c0fe449a171cfc6aba242f295677db9e2a72560f4731b0f5aebd363d1064736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_975": {
									"entryPoint": null,
									"id": 975,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 505,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 566,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@owner_987": {
									"entryPoint": null,
									"id": 987,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1226,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 1488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 860,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1150,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5597:6",
										"nodeType": "YulBlock",
										"src": "0:5597:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:6",
													"nodeType": "YulBlock",
													"src": "46:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:6",
																		"nodeType": "YulLiteral",
																		"src": "63:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:6",
																				"nodeType": "YulLiteral",
																				"src": "70:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:6",
																				"nodeType": "YulLiteral",
																				"src": "75:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:6"
																		},
																		"nativeSrc": "66:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:6"
																},
																"nativeSrc": "56:31:6",
																"nodeType": "YulFunctionCall",
																"src": "56:31:6"
															},
															"nativeSrc": "56:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:6",
																		"nodeType": "YulLiteral",
																		"src": "103:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:6",
																		"nodeType": "YulLiteral",
																		"src": "106:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:6"
																},
																"nativeSrc": "96:15:6",
																"nodeType": "YulFunctionCall",
																"src": "96:15:6"
															},
															"nativeSrc": "96:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:6",
																		"nodeType": "YulLiteral",
																		"src": "127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:6",
																		"nodeType": "YulLiteral",
																		"src": "130:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nativeSrc": "120:15:6",
																"nodeType": "YulFunctionCall",
																"src": "120:15:6"
															},
															"nativeSrc": "120:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:6"
											},
											{
												"body": {
													"nativeSrc": "215:306:6",
													"nodeType": "YulBlock",
													"src": "215:306:6",
													"statements": [
														{
															"nativeSrc": "225:10:6",
															"nodeType": "YulAssignment",
															"src": "225:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "234:1:6",
																"nodeType": "YulLiteral",
																"src": "234:1:6",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "225:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "225:5:6"
																}
															]
														},
														{
															"nativeSrc": "244:13:6",
															"nodeType": "YulAssignment",
															"src": "244:13:6",
															"value": {
																"name": "_base",
																"nativeSrc": "252:5:6",
																"nodeType": "YulIdentifier",
																"src": "252:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "244:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "244:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "302:213:6",
																"nodeType": "YulBlock",
																"src": "302:213:6",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "344:22:6",
																			"nodeType": "YulBlock",
																			"src": "344:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "346:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "346:16:6"
																						},
																						"nativeSrc": "346:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "346:18:6"
																					},
																					"nativeSrc": "346:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "346:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "322:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "322:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "332:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "332:3:6"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "337:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "337:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "328:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "328:3:6"
																					},
																					"nativeSrc": "328:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "328:14:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "319:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "319:2:6"
																			},
																			"nativeSrc": "319:24:6",
																			"nodeType": "YulFunctionCall",
																			"src": "319:24:6"
																		},
																		"nativeSrc": "316:50:6",
																		"nodeType": "YulIf",
																		"src": "316:50:6"
																	},
																	{
																		"body": {
																			"nativeSrc": "399:29:6",
																			"nodeType": "YulBlock",
																			"src": "399:29:6",
																			"statements": [
																				{
																					"nativeSrc": "401:25:6",
																					"nodeType": "YulAssignment",
																					"src": "401:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "414:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "414:5:6"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "421:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "421:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "410:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "410:3:6"
																						},
																						"nativeSrc": "410:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "410:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "401:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "401:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "386:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "386:8:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "396:1:6",
																					"nodeType": "YulLiteral",
																					"src": "396:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "382:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "382:3:6"
																			},
																			"nativeSrc": "382:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "382:16:6"
																		},
																		"nativeSrc": "379:49:6",
																		"nodeType": "YulIf",
																		"src": "379:49:6"
																	},
																	{
																		"nativeSrc": "441:23:6",
																		"nodeType": "YulAssignment",
																		"src": "441:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "453:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "453:4:6"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "459:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "459:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "449:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "449:3:6"
																			},
																			"nativeSrc": "449:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "449:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "441:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "441:4:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "477:28:6",
																		"nodeType": "YulAssignment",
																		"src": "477:28:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "493:1:6",
																					"nodeType": "YulLiteral",
																					"src": "493:1:6",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "496:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "496:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "489:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "489:3:6"
																			},
																			"nativeSrc": "489:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "489:16:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "477:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "477:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "277:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "277:8:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "287:1:6",
																		"nodeType": "YulLiteral",
																		"src": "287:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "274:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "274:2:6"
																},
																"nativeSrc": "274:15:6",
																"nodeType": "YulFunctionCall",
																"src": "274:15:6"
															},
															"nativeSrc": "266:249:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "290:3:6",
																"nodeType": "YulBlock",
																"src": "290:3:6",
																"statements": []
															},
															"pre": {
																"nativeSrc": "270:3:6",
																"nodeType": "YulBlock",
																"src": "270:3:6",
																"statements": []
															},
															"src": "266:249:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "146:375:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "174:5:6",
														"nodeType": "YulTypedName",
														"src": "174:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "181:8:6",
														"nodeType": "YulTypedName",
														"src": "181:8:6",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "191:3:6",
														"nodeType": "YulTypedName",
														"src": "191:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "199:5:6",
														"nodeType": "YulTypedName",
														"src": "199:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "206:4:6",
														"nodeType": "YulTypedName",
														"src": "206:4:6",
														"type": ""
													}
												],
												"src": "146:375:6"
											},
											{
												"body": {
													"nativeSrc": "585:843:6",
													"nodeType": "YulBlock",
													"src": "585:843:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "623:52:6",
																"nodeType": "YulBlock",
																"src": "623:52:6",
																"statements": [
																	{
																		"nativeSrc": "637:10:6",
																		"nodeType": "YulAssignment",
																		"src": "637:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "646:1:6",
																			"nodeType": "YulLiteral",
																			"src": "646:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "637:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "637:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "660:5:6",
																		"nodeType": "YulLeave",
																		"src": "660:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "605:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "605:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "598:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "598:6:6"
																},
																"nativeSrc": "598:16:6",
																"nodeType": "YulFunctionCall",
																"src": "598:16:6"
															},
															"nativeSrc": "595:80:6",
															"nodeType": "YulIf",
															"src": "595:80:6"
														},
														{
															"body": {
																"nativeSrc": "708:52:6",
																"nodeType": "YulBlock",
																"src": "708:52:6",
																"statements": [
																	{
																		"nativeSrc": "722:10:6",
																		"nodeType": "YulAssignment",
																		"src": "722:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "731:1:6",
																			"nodeType": "YulLiteral",
																			"src": "731:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "722:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "722:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "745:5:6",
																		"nodeType": "YulLeave",
																		"src": "745:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "694:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "694:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "687:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "687:6:6"
																},
																"nativeSrc": "687:12:6",
																"nodeType": "YulFunctionCall",
																"src": "687:12:6"
															},
															"nativeSrc": "684:76:6",
															"nodeType": "YulIf",
															"src": "684:76:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "796:52:6",
																		"nodeType": "YulBlock",
																		"src": "796:52:6",
																		"statements": [
																			{
																				"nativeSrc": "810:10:6",
																				"nodeType": "YulAssignment",
																				"src": "810:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "819:1:6",
																					"nodeType": "YulLiteral",
																					"src": "819:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "810:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "810:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "833:5:6",
																				"nodeType": "YulLeave",
																				"src": "833:5:6"
																			}
																		]
																	},
																	"nativeSrc": "789:59:6",
																	"nodeType": "YulCase",
																	"src": "789:59:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "794:1:6",
																		"nodeType": "YulLiteral",
																		"src": "794:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "864:167:6",
																		"nodeType": "YulBlock",
																		"src": "864:167:6",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "899:22:6",
																					"nodeType": "YulBlock",
																					"src": "899:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "901:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "901:16:6"
																								},
																								"nativeSrc": "901:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "901:18:6"
																							},
																							"nativeSrc": "901:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "901:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "884:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "884:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "894:3:6",
																							"nodeType": "YulLiteral",
																							"src": "894:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "881:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "881:2:6"
																					},
																					"nativeSrc": "881:17:6",
																					"nodeType": "YulFunctionCall",
																					"src": "881:17:6"
																				},
																				"nativeSrc": "878:43:6",
																				"nodeType": "YulIf",
																				"src": "878:43:6"
																			},
																			{
																				"nativeSrc": "934:25:6",
																				"nodeType": "YulAssignment",
																				"src": "934:25:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "947:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "947:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "957:1:6",
																							"nodeType": "YulLiteral",
																							"src": "957:1:6",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "943:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "943:3:6"
																					},
																					"nativeSrc": "943:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "943:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "934:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "934:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "972:11:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "972:11:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "982:1:6",
																					"nodeType": "YulLiteral",
																					"src": "982:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "976:2:6",
																						"nodeType": "YulTypedName",
																						"src": "976:2:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "996:7:6",
																				"nodeType": "YulAssignment",
																				"src": "996:7:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1002:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1002:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "996:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "996:2:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "1016:5:6",
																				"nodeType": "YulLeave",
																				"src": "1016:5:6"
																			}
																		]
																	},
																	"nativeSrc": "857:174:6",
																	"nodeType": "YulCase",
																	"src": "857:174:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "862:1:6",
																		"nodeType": "YulLiteral",
																		"src": "862:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "776:4:6",
																"nodeType": "YulIdentifier",
																"src": "776:4:6"
															},
															"nativeSrc": "769:262:6",
															"nodeType": "YulSwitch",
															"src": "769:262:6"
														},
														{
															"body": {
																"nativeSrc": "1129:114:6",
																"nodeType": "YulBlock",
																"src": "1129:114:6",
																"statements": [
																	{
																		"nativeSrc": "1143:28:6",
																		"nodeType": "YulAssignment",
																		"src": "1143:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "1156:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "1156:4:6"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "1162:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "1162:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "1152:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1152:3:6"
																			},
																			"nativeSrc": "1152:19:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1152:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1143:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1143:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1184:11:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1184:11:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1194:1:6",
																			"nodeType": "YulLiteral",
																			"src": "1194:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "1188:2:6",
																				"nodeType": "YulTypedName",
																				"src": "1188:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1208:7:6",
																		"nodeType": "YulAssignment",
																		"src": "1208:7:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1214:1:6",
																			"nodeType": "YulLiteral",
																			"src": "1214:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "1208:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1208:2:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1228:5:6",
																		"nodeType": "YulLeave",
																		"src": "1228:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "1053:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "1053:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1059:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1059:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1050:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1050:2:6"
																				},
																				"nativeSrc": "1050:12:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1050:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "1067:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "1067:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1077:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1077:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1064:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1064:2:6"
																				},
																				"nativeSrc": "1064:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1064:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1046:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1046:3:6"
																		},
																		"nativeSrc": "1046:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1046:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "1090:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "1090:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1096:3:6",
																						"nodeType": "YulLiteral",
																						"src": "1096:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1087:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1087:2:6"
																				},
																				"nativeSrc": "1087:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1087:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "1105:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "1105:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1115:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1115:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1102:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1102:2:6"
																				},
																				"nativeSrc": "1102:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1102:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1083:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1083:3:6"
																		},
																		"nativeSrc": "1083:36:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1083:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1043:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1043:2:6"
																},
																"nativeSrc": "1043:77:6",
																"nodeType": "YulFunctionCall",
																"src": "1043:77:6"
															},
															"nativeSrc": "1040:203:6",
															"nodeType": "YulIf",
															"src": "1040:203:6"
														},
														{
															"nativeSrc": "1252:65:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1252:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "1294:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1294:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "1300:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1300:8:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1314:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1314:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1310:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1310:3:6"
																		},
																		"nativeSrc": "1310:6:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1310:6:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "1275:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1275:18:6"
																},
																"nativeSrc": "1275:42:6",
																"nodeType": "YulFunctionCall",
																"src": "1275:42:6"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "1256:7:6",
																	"nodeType": "YulTypedName",
																	"src": "1256:7:6",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "1265:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1265:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1362:22:6",
																"nodeType": "YulBlock",
																"src": "1362:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1364:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1364:16:6"
																			},
																			"nativeSrc": "1364:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:18:6"
																		},
																		"nativeSrc": "1364:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "1332:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1332:7:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1349:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1349:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1345:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1345:3:6"
																				},
																				"nativeSrc": "1345:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1345:6:6"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "1353:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "1341:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1341:3:6"
																		},
																		"nativeSrc": "1341:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1341:19:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1329:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1329:2:6"
																},
																"nativeSrc": "1329:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:6"
															},
															"nativeSrc": "1326:58:6",
															"nodeType": "YulIf",
															"src": "1326:58:6"
														},
														{
															"nativeSrc": "1393:29:6",
															"nodeType": "YulAssignment",
															"src": "1393:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "1406:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1406:7:6"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "1415:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1415:6:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1402:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1402:3:6"
																},
																"nativeSrc": "1402:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1402:20:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "1393:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1393:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "526:902:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "556:4:6",
														"nodeType": "YulTypedName",
														"src": "556:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "562:8:6",
														"nodeType": "YulTypedName",
														"src": "562:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "575:5:6",
														"nodeType": "YulTypedName",
														"src": "575:5:6",
														"type": ""
													}
												],
												"src": "526:902:6"
											},
											{
												"body": {
													"nativeSrc": "1503:61:6",
													"nodeType": "YulBlock",
													"src": "1503:61:6",
													"statements": [
														{
															"nativeSrc": "1513:45:6",
															"nodeType": "YulAssignment",
															"src": "1513:45:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "1543:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1543:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "1549:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1549:8:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "1522:20:6",
																	"nodeType": "YulIdentifier",
																	"src": "1522:20:6"
																},
																"nativeSrc": "1522:36:6",
																"nodeType": "YulFunctionCall",
																"src": "1522:36:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "1513:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1513:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "1433:131:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "1474:4:6",
														"nodeType": "YulTypedName",
														"src": "1474:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "1480:8:6",
														"nodeType": "YulTypedName",
														"src": "1480:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "1493:5:6",
														"nodeType": "YulTypedName",
														"src": "1493:5:6",
														"type": ""
													}
												],
												"src": "1433:131:6"
											},
											{
												"body": {
													"nativeSrc": "1621:116:6",
													"nodeType": "YulBlock",
													"src": "1621:116:6",
													"statements": [
														{
															"nativeSrc": "1631:20:6",
															"nodeType": "YulAssignment",
															"src": "1631:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1646:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1646:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1649:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "1649:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1642:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1642:3:6"
																},
																"nativeSrc": "1642:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1642:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "1631:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1631:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1709:22:6",
																"nodeType": "YulBlock",
																"src": "1709:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1711:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1711:16:6"
																			},
																			"nativeSrc": "1711:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1711:18:6"
																		},
																		"nativeSrc": "1711:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1711:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "1680:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "1680:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1673:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1673:6:6"
																				},
																				"nativeSrc": "1673:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1673:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "1687:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "1687:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "1694:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "1694:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "1703:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "1703:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "1690:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1690:3:6"
																						},
																						"nativeSrc": "1690:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1690:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "1684:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1684:2:6"
																				},
																				"nativeSrc": "1684:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "1670:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1670:2:6"
																		},
																		"nativeSrc": "1670:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1670:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1663:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1663:6:6"
																},
																"nativeSrc": "1663:45:6",
																"nodeType": "YulFunctionCall",
																"src": "1663:45:6"
															},
															"nativeSrc": "1660:71:6",
															"nodeType": "YulIf",
															"src": "1660:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "1569:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1600:1:6",
														"nodeType": "YulTypedName",
														"src": "1600:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1603:1:6",
														"nodeType": "YulTypedName",
														"src": "1603:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "1609:7:6",
														"nodeType": "YulTypedName",
														"src": "1609:7:6",
														"type": ""
													}
												],
												"src": "1569:168:6"
											},
											{
												"body": {
													"nativeSrc": "1774:95:6",
													"nodeType": "YulBlock",
													"src": "1774:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1791:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1791:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1798:3:6",
																				"nodeType": "YulLiteral",
																				"src": "1798:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1803:10:6",
																				"nodeType": "YulLiteral",
																				"src": "1803:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1794:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1794:3:6"
																		},
																		"nativeSrc": "1794:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1794:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1784:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:6"
																},
																"nativeSrc": "1784:31:6",
																"nodeType": "YulFunctionCall",
																"src": "1784:31:6"
															},
															"nativeSrc": "1784:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "1784:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1831:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1831:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1834:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1834:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1824:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1824:6:6"
																},
																"nativeSrc": "1824:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1824:15:6"
															},
															"nativeSrc": "1824:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1824:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1855:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1858:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1858:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1848:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1848:6:6"
																},
																"nativeSrc": "1848:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1848:15:6"
															},
															"nativeSrc": "1848:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1848:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1742:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1742:127:6"
											},
											{
												"body": {
													"nativeSrc": "1929:325:6",
													"nodeType": "YulBlock",
													"src": "1929:325:6",
													"statements": [
														{
															"nativeSrc": "1939:22:6",
															"nodeType": "YulAssignment",
															"src": "1939:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1953:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1953:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1956:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1956:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1949:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1949:3:6"
																},
																"nativeSrc": "1949:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1949:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1939:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1939:6:6"
																}
															]
														},
														{
															"nativeSrc": "1970:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1970:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2000:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2000:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2006:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2006:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1996:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1996:3:6"
																},
																"nativeSrc": "1996:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1996:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1974:18:6",
																	"nodeType": "YulTypedName",
																	"src": "1974:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2047:31:6",
																"nodeType": "YulBlock",
																"src": "2047:31:6",
																"statements": [
																	{
																		"nativeSrc": "2049:27:6",
																		"nodeType": "YulAssignment",
																		"src": "2049:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2063:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2063:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2071:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2071:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2059:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2059:3:6"
																			},
																			"nativeSrc": "2059:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2059:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2049:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2049:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2027:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2027:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2020:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2020:6:6"
																},
																"nativeSrc": "2020:26:6",
																"nodeType": "YulFunctionCall",
																"src": "2020:26:6"
															},
															"nativeSrc": "2017:61:6",
															"nodeType": "YulIf",
															"src": "2017:61:6"
														},
														{
															"body": {
																"nativeSrc": "2137:111:6",
																"nodeType": "YulBlock",
																"src": "2137:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2158:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2158:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2165:3:6",
																							"nodeType": "YulLiteral",
																							"src": "2165:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2170:10:6",
																							"nodeType": "YulLiteral",
																							"src": "2170:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2161:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2161:3:6"
																					},
																					"nativeSrc": "2161:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2161:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2151:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2151:6:6"
																			},
																			"nativeSrc": "2151:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2151:31:6"
																		},
																		"nativeSrc": "2151:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2151:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2202:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2202:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2205:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2205:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2195:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2195:6:6"
																			},
																			"nativeSrc": "2195:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2195:15:6"
																		},
																		"nativeSrc": "2195:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2195:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2230:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2230:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2233:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2233:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2223:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2223:6:6"
																			},
																			"nativeSrc": "2223:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2223:15:6"
																		},
																		"nativeSrc": "2223:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2223:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2093:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2093:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2116:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2116:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2124:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2124:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2113:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2113:2:6"
																		},
																		"nativeSrc": "2113:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2113:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2090:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2090:2:6"
																},
																"nativeSrc": "2090:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2090:38:6"
															},
															"nativeSrc": "2087:161:6",
															"nodeType": "YulIf",
															"src": "2087:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1874:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1909:4:6",
														"nodeType": "YulTypedName",
														"src": "1909:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1918:6:6",
														"nodeType": "YulTypedName",
														"src": "1918:6:6",
														"type": ""
													}
												],
												"src": "1874:380:6"
											},
											{
												"body": {
													"nativeSrc": "2315:65:6",
													"nodeType": "YulBlock",
													"src": "2315:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2332:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2332:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2335:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2335:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2325:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2325:6:6"
																},
																"nativeSrc": "2325:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2325:14:6"
															},
															"nativeSrc": "2325:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "2325:14:6"
														},
														{
															"nativeSrc": "2348:26:6",
															"nodeType": "YulAssignment",
															"src": "2348:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2366:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2366:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2369:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2369:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2356:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2356:9:6"
																},
																"nativeSrc": "2356:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2356:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2348:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2348:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "2259:121:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2298:3:6",
														"nodeType": "YulTypedName",
														"src": "2298:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2306:4:6",
														"nodeType": "YulTypedName",
														"src": "2306:4:6",
														"type": ""
													}
												],
												"src": "2259:121:6"
											},
											{
												"body": {
													"nativeSrc": "2466:437:6",
													"nodeType": "YulBlock",
													"src": "2466:437:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2499:398:6",
																"nodeType": "YulBlock",
																"src": "2499:398:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2520:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2520:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2523:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2523:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2513:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2513:6:6"
																			},
																			"nativeSrc": "2513:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2513:16:6"
																		},
																		"nativeSrc": "2513:16:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2513:16:6"
																	},
																	{
																		"nativeSrc": "2542:30:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2542:30:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2564:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2564:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2567:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2567:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2554:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2554:9:6"
																			},
																			"nativeSrc": "2554:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2554:18:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2546:4:6",
																				"nodeType": "YulTypedName",
																				"src": "2546:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2585:57:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2585:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2608:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "2608:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2618:1:6",
																							"nodeType": "YulLiteral",
																							"src": "2618:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2625:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "2625:10:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2637:2:6",
																									"nodeType": "YulLiteral",
																									"src": "2637:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2621:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2621:3:6"
																							},
																							"nativeSrc": "2621:19:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2621:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2614:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2614:3:6"
																					},
																					"nativeSrc": "2614:27:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2614:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2604:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2604:3:6"
																			},
																			"nativeSrc": "2604:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2604:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2589:11:6",
																				"nodeType": "YulTypedName",
																				"src": "2589:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2679:23:6",
																			"nodeType": "YulBlock",
																			"src": "2679:23:6",
																			"statements": [
																				{
																					"nativeSrc": "2681:19:6",
																					"nodeType": "YulAssignment",
																					"src": "2681:19:6",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2696:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "2696:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2681:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "2681:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2661:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "2661:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2673:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2673:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2658:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "2658:2:6"
																			},
																			"nativeSrc": "2658:20:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2658:20:6"
																		},
																		"nativeSrc": "2655:47:6",
																		"nodeType": "YulIf",
																		"src": "2655:47:6"
																	},
																	{
																		"nativeSrc": "2715:41:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2715:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2729:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "2729:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2739:1:6",
																							"nodeType": "YulLiteral",
																							"src": "2739:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2746:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2746:3:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2751:2:6",
																									"nodeType": "YulLiteral",
																									"src": "2751:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2742:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2742:3:6"
																							},
																							"nativeSrc": "2742:12:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2742:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2735:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2735:3:6"
																					},
																					"nativeSrc": "2735:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2735:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2725:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2725:3:6"
																			},
																			"nativeSrc": "2725:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2725:31:6"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2719:2:6",
																				"nodeType": "YulTypedName",
																				"src": "2719:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2769:24:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2769:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2782:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "2782:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2773:5:6",
																				"nodeType": "YulTypedName",
																				"src": "2773:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2867:20:6",
																			"nodeType": "YulBlock",
																			"src": "2867:20:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2876:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "2876:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2883:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2883:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2869:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2869:6:6"
																						},
																						"nativeSrc": "2869:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2869:16:6"
																					},
																					"nativeSrc": "2869:16:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "2869:16:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2817:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2817:5:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2824:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "2824:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2814:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "2814:2:6"
																			},
																			"nativeSrc": "2814:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2814:13:6"
																		},
																		"nativeSrc": "2806:81:6",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2828:26:6",
																			"nodeType": "YulBlock",
																			"src": "2828:26:6",
																			"statements": [
																				{
																					"nativeSrc": "2830:22:6",
																					"nodeType": "YulAssignment",
																					"src": "2830:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2843:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "2843:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2850:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2850:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2839:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2839:3:6"
																						},
																						"nativeSrc": "2839:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2839:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2830:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "2830:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2810:3:6",
																			"nodeType": "YulBlock",
																			"src": "2810:3:6",
																			"statements": []
																		},
																		"src": "2806:81:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2482:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2482:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2487:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2487:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2479:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2479:2:6"
																},
																"nativeSrc": "2479:11:6",
																"nodeType": "YulFunctionCall",
																"src": "2479:11:6"
															},
															"nativeSrc": "2476:421:6",
															"nodeType": "YulIf",
															"src": "2476:421:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2385:518:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2438:5:6",
														"nodeType": "YulTypedName",
														"src": "2438:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2445:3:6",
														"nodeType": "YulTypedName",
														"src": "2445:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2450:10:6",
														"nodeType": "YulTypedName",
														"src": "2450:10:6",
														"type": ""
													}
												],
												"src": "2385:518:6"
											},
											{
												"body": {
													"nativeSrc": "2993:81:6",
													"nodeType": "YulBlock",
													"src": "2993:81:6",
													"statements": [
														{
															"nativeSrc": "3003:65:6",
															"nodeType": "YulAssignment",
															"src": "3003:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "3018:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3018:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3036:1:6",
																										"nodeType": "YulLiteral",
																										"src": "3036:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "3039:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "3039:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "3032:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3032:3:6"
																								},
																								"nativeSrc": "3032:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3032:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3049:1:6",
																										"nodeType": "YulLiteral",
																										"src": "3049:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "3045:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3045:3:6"
																								},
																								"nativeSrc": "3045:6:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3045:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "3028:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3028:3:6"
																						},
																						"nativeSrc": "3028:24:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3028:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3024:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3024:3:6"
																				},
																				"nativeSrc": "3024:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3024:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3014:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3014:3:6"
																		},
																		"nativeSrc": "3014:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3014:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3060:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3060:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3063:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3063:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3056:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3056:3:6"
																		},
																		"nativeSrc": "3056:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3056:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3011:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3011:2:6"
																},
																"nativeSrc": "3011:57:6",
																"nodeType": "YulFunctionCall",
																"src": "3011:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3003:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3003:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2908:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2970:4:6",
														"nodeType": "YulTypedName",
														"src": "2970:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2976:3:6",
														"nodeType": "YulTypedName",
														"src": "2976:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2984:4:6",
														"nodeType": "YulTypedName",
														"src": "2984:4:6",
														"type": ""
													}
												],
												"src": "2908:166:6"
											},
											{
												"body": {
													"nativeSrc": "3175:1203:6",
													"nodeType": "YulBlock",
													"src": "3175:1203:6",
													"statements": [
														{
															"nativeSrc": "3185:24:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3185:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3205:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3205:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3199:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3199:5:6"
																},
																"nativeSrc": "3199:10:6",
																"nodeType": "YulFunctionCall",
																"src": "3199:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3189:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3189:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3252:22:6",
																"nodeType": "YulBlock",
																"src": "3252:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3254:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3254:16:6"
																			},
																			"nativeSrc": "3254:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3254:18:6"
																		},
																		"nativeSrc": "3254:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3254:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3224:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3224:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3240:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3240:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3244:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3244:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3236:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3236:3:6"
																				},
																				"nativeSrc": "3236:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3236:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3248:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3248:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3232:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3232:3:6"
																		},
																		"nativeSrc": "3232:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3232:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3221:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3221:2:6"
																},
																"nativeSrc": "3221:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3221:30:6"
															},
															"nativeSrc": "3218:56:6",
															"nodeType": "YulIf",
															"src": "3218:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3327:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3327:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3365:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "3365:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3359:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3359:5:6"
																				},
																				"nativeSrc": "3359:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3359:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3333:25:6",
																			"nodeType": "YulIdentifier",
																			"src": "3333:25:6"
																		},
																		"nativeSrc": "3333:38:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3333:38:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3373:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3373:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "3283:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3283:43:6"
																},
																"nativeSrc": "3283:97:6",
																"nodeType": "YulFunctionCall",
																"src": "3283:97:6"
															},
															"nativeSrc": "3283:97:6",
															"nodeType": "YulExpressionStatement",
															"src": "3283:97:6"
														},
														{
															"nativeSrc": "3389:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3389:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3406:1:6",
																"nodeType": "YulLiteral",
																"src": "3406:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3393:9:6",
																	"nodeType": "YulTypedName",
																	"src": "3393:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3416:17:6",
															"nodeType": "YulAssignment",
															"src": "3416:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3429:4:6",
																"nodeType": "YulLiteral",
																"src": "3429:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3416:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3416:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3479:642:6",
																		"nodeType": "YulBlock",
																		"src": "3479:642:6",
																		"statements": [
																			{
																				"nativeSrc": "3493:35:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3493:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3512:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "3512:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3524:2:6",
																									"nodeType": "YulLiteral",
																									"src": "3524:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3520:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "3520:3:6"
																							},
																							"nativeSrc": "3520:7:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3520:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3508:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3508:3:6"
																					},
																					"nativeSrc": "3508:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3508:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3497:7:6",
																						"nodeType": "YulTypedName",
																						"src": "3497:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3541:49:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3541:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3585:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "3585:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3555:29:6",
																						"nodeType": "YulIdentifier",
																						"src": "3555:29:6"
																					},
																					"nativeSrc": "3555:35:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3555:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3545:6:6",
																						"nodeType": "YulTypedName",
																						"src": "3545:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3603:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3603:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3612:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3612:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3607:1:6",
																						"nodeType": "YulTypedName",
																						"src": "3607:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3683:165:6",
																					"nodeType": "YulBlock",
																					"src": "3683:165:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3708:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3708:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3726:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "3726:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3731:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "3731:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3722:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "3722:3:6"
																												},
																												"nativeSrc": "3722:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "3722:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3716:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "3716:5:6"
																										},
																										"nativeSrc": "3716:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3716:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3701:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3701:6:6"
																								},
																								"nativeSrc": "3701:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3701:42:6"
																							},
																							"nativeSrc": "3701:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "3701:42:6"
																						},
																						{
																							"nativeSrc": "3760:24:6",
																							"nodeType": "YulAssignment",
																							"src": "3760:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3774:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3774:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3782:1:6",
																										"nodeType": "YulLiteral",
																										"src": "3782:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3770:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3770:3:6"
																								},
																								"nativeSrc": "3770:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3770:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3760:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3760:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3801:33:6",
																							"nodeType": "YulAssignment",
																							"src": "3801:33:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3818:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "3818:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3829:4:6",
																										"nodeType": "YulLiteral",
																										"src": "3829:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3814:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3814:3:6"
																								},
																								"nativeSrc": "3814:20:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3814:20:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3801:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "3801:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3637:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "3637:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3640:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "3640:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3634:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "3634:2:6"
																					},
																					"nativeSrc": "3634:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3634:14:6"
																				},
																				"nativeSrc": "3626:222:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3649:21:6",
																					"nodeType": "YulBlock",
																					"src": "3649:21:6",
																					"statements": [
																						{
																							"nativeSrc": "3651:17:6",
																							"nodeType": "YulAssignment",
																							"src": "3651:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3660:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "3660:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3663:4:6",
																										"nodeType": "YulLiteral",
																										"src": "3663:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3656:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3656:3:6"
																								},
																								"nativeSrc": "3656:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3656:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3651:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "3651:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3630:3:6",
																					"nodeType": "YulBlock",
																					"src": "3630:3:6",
																					"statements": []
																				},
																				"src": "3626:222:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "3896:166:6",
																					"nodeType": "YulBlock",
																					"src": "3896:166:6",
																					"statements": [
																						{
																							"nativeSrc": "3914:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3914:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3941:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "3941:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3946:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3946:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3937:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3937:3:6"
																										},
																										"nativeSrc": "3937:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3937:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3931:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3931:5:6"
																								},
																								"nativeSrc": "3931:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3931:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3918:9:6",
																									"nodeType": "YulTypedName",
																									"src": "3918:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3981:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "3981:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3993:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3993:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "4020:1:6",
																																				"nodeType": "YulLiteral",
																																				"src": "4020:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "4023:6:6",
																																				"nodeType": "YulIdentifier",
																																				"src": "4023:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "4016:3:6",
																																			"nodeType": "YulIdentifier",
																																			"src": "4016:3:6"
																																		},
																																		"nativeSrc": "4016:14:6",
																																		"nodeType": "YulFunctionCall",
																																		"src": "4016:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4032:3:6",
																																		"nodeType": "YulLiteral",
																																		"src": "4032:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "4012:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "4012:3:6"
																																},
																																"nativeSrc": "4012:24:6",
																																"nodeType": "YulFunctionCall",
																																"src": "4012:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4042:1:6",
																																		"nodeType": "YulLiteral",
																																		"src": "4042:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "4038:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "4038:3:6"
																																},
																																"nativeSrc": "4038:6:6",
																																"nodeType": "YulFunctionCall",
																																"src": "4038:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "4008:3:6",
																															"nodeType": "YulIdentifier",
																															"src": "4008:3:6"
																														},
																														"nativeSrc": "4008:37:6",
																														"nodeType": "YulFunctionCall",
																														"src": "4008:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "4004:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "4004:3:6"
																												},
																												"nativeSrc": "4004:42:6",
																												"nodeType": "YulFunctionCall",
																												"src": "4004:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3989:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3989:3:6"
																										},
																										"nativeSrc": "3989:58:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3989:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3974:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3974:6:6"
																								},
																								"nativeSrc": "3974:74:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3974:74:6"
																							},
																							"nativeSrc": "3974:74:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "3974:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3867:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "3867:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3876:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "3876:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3864:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "3864:2:6"
																					},
																					"nativeSrc": "3864:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3864:19:6"
																				},
																				"nativeSrc": "3861:201:6",
																				"nodeType": "YulIf",
																				"src": "3861:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4082:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "4082:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "4096:1:6",
																											"nodeType": "YulLiteral",
																											"src": "4096:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "4099:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "4099:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "4092:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "4092:3:6"
																									},
																									"nativeSrc": "4092:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "4092:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4108:1:6",
																									"nodeType": "YulLiteral",
																									"src": "4108:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4088:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "4088:3:6"
																							},
																							"nativeSrc": "4088:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4088:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4075:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4075:6:6"
																					},
																					"nativeSrc": "4075:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4075:36:6"
																				},
																				"nativeSrc": "4075:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4075:36:6"
																			}
																		]
																	},
																	"nativeSrc": "3472:649:6",
																	"nodeType": "YulCase",
																	"src": "3472:649:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3477:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3477:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4138:234:6",
																		"nodeType": "YulBlock",
																		"src": "4138:234:6",
																		"statements": [
																			{
																				"nativeSrc": "4152:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4152:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4165:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4165:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "4156:5:6",
																						"nodeType": "YulTypedName",
																						"src": "4156:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4201:67:6",
																					"nodeType": "YulBlock",
																					"src": "4201:67:6",
																					"statements": [
																						{
																							"nativeSrc": "4219:35:6",
																							"nodeType": "YulAssignment",
																							"src": "4219:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4238:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "4238:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4243:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "4243:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4234:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "4234:3:6"
																										},
																										"nativeSrc": "4234:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "4234:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4228:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "4228:5:6"
																								},
																								"nativeSrc": "4228:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4228:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "4219:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "4219:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "4182:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4182:6:6"
																				},
																				"nativeSrc": "4179:89:6",
																				"nodeType": "YulIf",
																				"src": "4179:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4288:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "4288:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4347:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "4347:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4354:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4354:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4294:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "4294:52:6"
																							},
																							"nativeSrc": "4294:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4294:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4281:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4281:6:6"
																					},
																					"nativeSrc": "4281:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4281:81:6"
																				},
																				"nativeSrc": "4281:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4281:81:6"
																			}
																		]
																	},
																	"nativeSrc": "4130:242:6",
																	"nodeType": "YulCase",
																	"src": "4130:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3452:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3452:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3460:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3460:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3449:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3449:2:6"
																},
																"nativeSrc": "3449:14:6",
																"nodeType": "YulFunctionCall",
																"src": "3449:14:6"
															},
															"nativeSrc": "3442:930:6",
															"nodeType": "YulSwitch",
															"src": "3442:930:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3079:1299:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3160:4:6",
														"nodeType": "YulTypedName",
														"src": "3160:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3166:3:6",
														"nodeType": "YulTypedName",
														"src": "3166:3:6",
														"type": ""
													}
												],
												"src": "3079:1299:6"
											},
											{
												"body": {
													"nativeSrc": "4421:171:6",
													"nodeType": "YulBlock",
													"src": "4421:171:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4452:111:6",
																"nodeType": "YulBlock",
																"src": "4452:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4473:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4473:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4480:3:6",
																							"nodeType": "YulLiteral",
																							"src": "4480:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4485:10:6",
																							"nodeType": "YulLiteral",
																							"src": "4485:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4476:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4476:3:6"
																					},
																					"nativeSrc": "4476:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4476:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4466:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4466:6:6"
																			},
																			"nativeSrc": "4466:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4466:31:6"
																		},
																		"nativeSrc": "4466:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4466:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4517:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4517:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4520:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4520:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4510:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4510:6:6"
																			},
																			"nativeSrc": "4510:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4510:15:6"
																		},
																		"nativeSrc": "4510:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4510:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4545:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4545:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4548:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4548:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4538:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4538:6:6"
																			},
																			"nativeSrc": "4538:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4538:15:6"
																		},
																		"nativeSrc": "4538:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4538:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4441:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4441:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4434:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4434:6:6"
																},
																"nativeSrc": "4434:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4434:9:6"
															},
															"nativeSrc": "4431:132:6",
															"nodeType": "YulIf",
															"src": "4431:132:6"
														},
														{
															"nativeSrc": "4572:14:6",
															"nodeType": "YulAssignment",
															"src": "4572:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4581:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4581:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4584:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4584:1:6"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "4577:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4577:3:6"
																},
																"nativeSrc": "4577:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4577:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4572:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4572:1:6"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "4383:209:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4406:1:6",
														"nodeType": "YulTypedName",
														"src": "4406:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4409:1:6",
														"nodeType": "YulTypedName",
														"src": "4409:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4415:1:6",
														"nodeType": "YulTypedName",
														"src": "4415:1:6",
														"type": ""
													}
												],
												"src": "4383:209:6"
											},
											{
												"body": {
													"nativeSrc": "4646:79:6",
													"nodeType": "YulBlock",
													"src": "4646:79:6",
													"statements": [
														{
															"nativeSrc": "4656:17:6",
															"nodeType": "YulAssignment",
															"src": "4656:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4668:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4668:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4671:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4671:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4664:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4664:3:6"
																},
																"nativeSrc": "4664:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4664:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4656:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4656:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4697:22:6",
																"nodeType": "YulBlock",
																"src": "4697:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4699:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4699:16:6"
																			},
																			"nativeSrc": "4699:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4699:18:6"
																		},
																		"nativeSrc": "4699:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4699:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4688:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4688:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4694:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4694:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4685:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4685:2:6"
																},
																"nativeSrc": "4685:11:6",
																"nodeType": "YulFunctionCall",
																"src": "4685:11:6"
															},
															"nativeSrc": "4682:37:6",
															"nodeType": "YulIf",
															"src": "4682:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4597:128:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4628:1:6",
														"nodeType": "YulTypedName",
														"src": "4628:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4631:1:6",
														"nodeType": "YulTypedName",
														"src": "4631:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4637:4:6",
														"nodeType": "YulTypedName",
														"src": "4637:4:6",
														"type": ""
													}
												],
												"src": "4597:128:6"
											},
											{
												"body": {
													"nativeSrc": "4831:102:6",
													"nodeType": "YulBlock",
													"src": "4831:102:6",
													"statements": [
														{
															"nativeSrc": "4841:26:6",
															"nodeType": "YulAssignment",
															"src": "4841:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4853:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4853:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4864:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4864:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4849:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4849:3:6"
																},
																"nativeSrc": "4849:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4849:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4841:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4841:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4883:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4883:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4898:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4898:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4914:3:6",
																								"nodeType": "YulLiteral",
																								"src": "4914:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4919:1:6",
																								"nodeType": "YulLiteral",
																								"src": "4919:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4910:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4910:3:6"
																						},
																						"nativeSrc": "4910:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4910:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4923:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4923:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4906:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4906:3:6"
																				},
																				"nativeSrc": "4906:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4906:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4894:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4894:3:6"
																		},
																		"nativeSrc": "4894:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4894:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4876:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4876:6:6"
																},
																"nativeSrc": "4876:51:6",
																"nodeType": "YulFunctionCall",
																"src": "4876:51:6"
															},
															"nativeSrc": "4876:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "4876:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4730:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4800:9:6",
														"nodeType": "YulTypedName",
														"src": "4800:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4811:6:6",
														"nodeType": "YulTypedName",
														"src": "4811:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4822:4:6",
														"nodeType": "YulTypedName",
														"src": "4822:4:6",
														"type": ""
													}
												],
												"src": "4730:203:6"
											},
											{
												"body": {
													"nativeSrc": "4986:77:6",
													"nodeType": "YulBlock",
													"src": "4986:77:6",
													"statements": [
														{
															"nativeSrc": "4996:16:6",
															"nodeType": "YulAssignment",
															"src": "4996:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5007:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5007:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5010:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5010:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5003:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:6"
																},
																"nativeSrc": "5003:9:6",
																"nodeType": "YulFunctionCall",
																"src": "5003:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4996:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4996:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5035:22:6",
																"nodeType": "YulBlock",
																"src": "5035:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5037:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5037:16:6"
																			},
																			"nativeSrc": "5037:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5037:18:6"
																		},
																		"nativeSrc": "5037:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5037:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5027:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5027:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5030:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5030:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5024:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5024:2:6"
																},
																"nativeSrc": "5024:10:6",
																"nodeType": "YulFunctionCall",
																"src": "5024:10:6"
															},
															"nativeSrc": "5021:36:6",
															"nodeType": "YulIf",
															"src": "5021:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4938:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4969:1:6",
														"nodeType": "YulTypedName",
														"src": "4969:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4972:1:6",
														"nodeType": "YulTypedName",
														"src": "4972:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4978:3:6",
														"nodeType": "YulTypedName",
														"src": "4978:3:6",
														"type": ""
													}
												],
												"src": "4938:125:6"
											},
											{
												"body": {
													"nativeSrc": "5225:188:6",
													"nodeType": "YulBlock",
													"src": "5225:188:6",
													"statements": [
														{
															"nativeSrc": "5235:26:6",
															"nodeType": "YulAssignment",
															"src": "5235:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5247:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5247:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5258:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5258:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5243:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5243:3:6"
																},
																"nativeSrc": "5243:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5243:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5235:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5235:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5277:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5277:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5292:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5292:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5308:3:6",
																								"nodeType": "YulLiteral",
																								"src": "5308:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5313:1:6",
																								"nodeType": "YulLiteral",
																								"src": "5313:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5304:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "5304:3:6"
																						},
																						"nativeSrc": "5304:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "5304:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5317:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5317:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5300:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5300:3:6"
																				},
																				"nativeSrc": "5300:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5300:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5288:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:6"
																		},
																		"nativeSrc": "5288:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5288:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5270:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:6"
																},
																"nativeSrc": "5270:51:6",
																"nodeType": "YulFunctionCall",
																"src": "5270:51:6"
															},
															"nativeSrc": "5270:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "5270:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5341:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5341:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5352:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5352:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5337:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5337:3:6"
																		},
																		"nativeSrc": "5337:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5337:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5357:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5357:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5330:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5330:6:6"
																},
																"nativeSrc": "5330:34:6",
																"nodeType": "YulFunctionCall",
																"src": "5330:34:6"
															},
															"nativeSrc": "5330:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "5330:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5384:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5384:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5395:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5395:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5380:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5380:3:6"
																		},
																		"nativeSrc": "5380:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5380:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5400:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5400:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5373:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5373:6:6"
																},
																"nativeSrc": "5373:34:6",
																"nodeType": "YulFunctionCall",
																"src": "5373:34:6"
															},
															"nativeSrc": "5373:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "5373:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5068:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5178:9:6",
														"nodeType": "YulTypedName",
														"src": "5178:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5189:6:6",
														"nodeType": "YulTypedName",
														"src": "5189:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5197:6:6",
														"nodeType": "YulTypedName",
														"src": "5197:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5205:6:6",
														"nodeType": "YulTypedName",
														"src": "5205:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5216:4:6",
														"nodeType": "YulTypedName",
														"src": "5216:4:6",
														"type": ""
													}
												],
												"src": "5068:345:6"
											},
											{
												"body": {
													"nativeSrc": "5519:76:6",
													"nodeType": "YulBlock",
													"src": "5519:76:6",
													"statements": [
														{
															"nativeSrc": "5529:26:6",
															"nodeType": "YulAssignment",
															"src": "5529:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5541:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5552:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5537:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5537:3:6"
																},
																"nativeSrc": "5537:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5537:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5529:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5529:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5571:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5571:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5582:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5582:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5564:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:6"
																},
																"nativeSrc": "5564:25:6",
																"nodeType": "YulFunctionCall",
																"src": "5564:25:6"
															},
															"nativeSrc": "5564:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "5564:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5418:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5488:9:6",
														"nodeType": "YulTypedName",
														"src": "5488:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5499:6:6",
														"nodeType": "YulTypedName",
														"src": "5499:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5510:4:6",
														"nodeType": "YulTypedName",
														"src": "5510:4:6",
														"type": ""
													}
												],
												"src": "5418:177:6"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600b80546101003302610100600160a81b0319821681179092555f600e556100359160ff908116911617600a610455565b6100429062989680610467565b6016556018805460ff1916905534801561005a575f5ffd5b506040518060400160405280600d81526020016c21aca122a921a0aa29a1a7a4a760991b81525060405180604001604052806005815260200164435942434360d81b81525081600390816100ae9190610516565b5060046100bb8282610516565b5050600b805460ff191660129081179091556100d99150600a610455565b6100e790633b9aca00610467565b600c8190556100f7905f196105d0565b610102905f196105ef565b600d9081556002600f81905560108190556011819055601255600b8054601380546001600160a01b0319166001600160a01b0361010093849004811691821783555f918252600760209081526040808420805460ff19908116600190811790925586548516865282862080548216831790556014805486168752838720805483168417905530875283872080548316841790558954899004861687526008855283872080548316841790559654851686528286208054821683179055955484168552818520805490961617909455955494549390930490921682526005909352919091208190556101f49033906101f9565b610615565b6001600160a01b0382166102275760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b6102325f8383610236565b5050565b6001600160a01b038316610260578060025f8282546102559190610602565b909155506102d09050565b6001600160a01b0383165f90815260208190526040902054818110156102b25760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161021e565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166102ec5760028054829003905561030a565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161034f91815260200190565b60405180910390a3505050565b634e487b7160e01b5f52601160045260245ffd5b6001815b60018411156103ab5780850481111561038f5761038f61035c565b600184161561039d57908102905b60019390931c928002610374565b935093915050565b5f826103c15750600161044f565b816103cd57505f61044f565b81600181146103e357600281146103ed57610409565b600191505061044f565b60ff8411156103fe576103fe61035c565b50506001821b61044f565b5060208310610133831016604e8410600b841016171561042c575081810a61044f565b6104385f198484610370565b805f190482111561044b5761044b61035c565b0290505b92915050565b5f61046083836103b3565b9392505050565b808202811582820484141761044f5761044f61035c565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806104a657607f821691505b6020821081036104c457634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561051157805f5260205f20601f840160051c810160208510156104ef5750805b601f840160051c820191505b8181101561050e575f81556001016104fb565b50505b505050565b81516001600160401b0381111561052f5761052f61047e565b6105438161053d8454610492565b846104ca565b6020601f821160018114610575575f831561055e5750848201515b5f19600385901b1c1916600184901b17845561050e565b5f84815260208120601f198516915b828110156105a45787850151825560209485019460019092019101610584565b50848210156105c157868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f826105ea57634e487b7160e01b5f52601260045260245ffd5b500690565b8181038181111561044f5761044f61035c565b8082018082111561044f5761044f61035c565b611d03806106225f395ff3fe6080604052600436106101de575f3560e01c8063838fcc90116100fd578063c486377011610092578063dd62ed3e11610062578063dd62ed3e1461059f578063f66608fe146105e3578063fdeb889f146105f7578063ffb54a9914610616575f5ffd5b8063c486377014610520578063c9567bf91461053f578063cba0e99614610553578063d00efb2f1461058a575f5ffd5b806395d89b41116100cd57806395d89b41146104af578063a8b08982146104c3578063a9059cbb146104e2578063c30796ab14610501575f5ffd5b8063838fcc901461043d57806383ad79941461045a5780638873b15f1461046e5780638da5cb5b1461048d575f5ffd5b80633af32abf116101735780635fae0576116101435780635fae0576146103a95780636049876e146103e0578063706407fd146103ff57806370a082311461041e575f5ffd5b80633af32abf14610306578063437823ec146103345780634549b039146103535780635342acb414610372575f5ffd5b80631cf8fef5116101ae5780631cf8fef51461028157806323b872dd146102b2578063313ce567146102d157806332035504146102f2575f5ffd5b8063053ab182146101e957806306fdde031461020a578063095ea7b31461023457806318160ddd14610263575f5ffd5b366101e557005b5f5ffd5b3480156101f4575f5ffd5b50610208610203366004611a72565b61062f565b005b348015610215575f5ffd5b5061021e61071a565b60405161022b9190611a89565b60405180910390f35b34801561023f575f5ffd5b5061025361024e366004611ad9565b6107aa565b604051901515815260200161022b565b34801561026e575f5ffd5b50600c545b60405190815260200161022b565b34801561028c575f5ffd5b506014546001600160a01b03165b6040516001600160a01b03909116815260200161022b565b3480156102bd575f5ffd5b506102536102cc366004611b01565b6107c3565b3480156102dc575f5ffd5b50600b5460405160ff909116815260200161022b565b3480156102fd575f5ffd5b50600e54610273565b348015610311575f5ffd5b50610253610320366004611b3b565b60086020525f908152604090205460ff1681565b34801561033f575f5ffd5b5061020861034e366004611b3b565b6107e6565b34801561035e575f5ffd5b5061027361036d366004611b54565b61082d565b34801561037d575f5ffd5b5061025361038c366004611b3b565b6001600160a01b03165f9081526007602052604090205460ff1690565b3480156103b4575f5ffd5b506102536103c3366004611b3b565b6001600160a01b03165f9081526008602052604090205460ff1690565b3480156103eb575f5ffd5b506102086103fa366004611b3b565b6108b3565b34801561040a575f5ffd5b50610208610419366004611b3b565b6109f8565b348015610429575f5ffd5b50610273610438366004611b3b565b610a5f565b348015610448575f5ffd5b506013546001600160a01b031661029a565b348015610465575f5ffd5b50600f54610273565b348015610479575f5ffd5b50610208610488366004611b3b565b610abb565b348015610498575f5ffd5b50600b5461010090046001600160a01b031661029a565b3480156104ba575f5ffd5b5061021e610afc565b3480156104ce575f5ffd5b5060155461029a906001600160a01b031681565b3480156104ed575f5ffd5b506102536104fc366004611ad9565b610b0b565b34801561050c575f5ffd5b5061020861051b366004611b3b565b610b18565b34801561052b575f5ffd5b5061020861053a366004611b3b565b610bc6565b34801561054a575f5ffd5b50610208610c2d565b34801561055e575f5ffd5b5061025361056d366004611b3b565b6001600160a01b03165f9081526009602052604090205460ff1690565b348015610595575f5ffd5b5061027360175481565b3480156105aa575f5ffd5b506102736105b9366004611b86565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b3480156105ee575f5ffd5b50601154610273565b348015610602575f5ffd5b50610208610611366004611b3b565b610c62565b348015610621575f5ffd5b506018546102539060ff1681565b335f8181526009602052604090205460ff16156106a85760405162461bcd60e51b815260206004820152602c60248201527f4578636c75646564206164647265737365732063616e6e6f742063616c6c207460448201526b3434b990333ab731ba34b7b760a11b60648201526084015b60405180910390fd5b5f6106b283610dfe565b5050506001600160a01b0383165f908152600560205260409020549091506106db908290611bcb565b6001600160a01b0383165f90815260056020526040902055600d54610701908290611bcb565b600d55600e54610712908490611bde565b600e55505050565b60606003805461072990611bf1565b80601f016020809104026020016040519081016040528092919081815260200182805461075590611bf1565b80156107a05780601f10610777576101008083540402835291602001916107a0565b820191905f5260205f20905b81548152906001019060200180831161078357829003601f168201915b5050505050905090565b5f336107b7818585610e4f565b60019150505b92915050565b5f336107d0858285610e61565b6107db858585610edd565b506001949350505050565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b0381165f908152600760205260409020805460ff191660011790555b50565b5f600c548311156108805760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e74206d757374206265206c657373207468616e20737570706c7900604482015260640161069f565b8161089c575f61088f84610dfe565b509193506107bd92505050565b5f6108a684610dfe565b509093506107bd92505050565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b0381165f9081526009602052604090205460ff161561093c5760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c756465640000000000604482015260640161069f565b6001600160a01b0381165f9081526005602052604090205415610993576001600160a01b0381165f9081526005602052604090205461097a906111ce565b6001600160a01b0382165f908152600660205260409020555b6001600160a01b03165f818152600960205260408120805460ff19166001908117909155600a805491820181559091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b0319169091179055565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b038116610a3f5760405162461bcd60e51b815260040161069f90611c29565b601480546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b0381165f9081526009602052604081205460ff1615610a9a57506001600160a01b03165f9081526006602052604090205490565b6001600160a01b0382165f908152600560205260409020546107bd906111ce565b600b54339061010090046001600160a01b03166001600160a01b03160361082a57601580546001600160a01b0383166001600160a01b031990911617905550565b60606004805461072990611bf1565b5f336107b7818585610edd565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b0381165f9081526008602052604090205460ff1615610ba15760405162461bcd60e51b815260206004820152601e60248201527f4164647265737320697320616c72656164792077686974656c69737465640000604482015260640161069f565b6001600160a01b0381165f908152600860205260409020805460ff1916600117905550565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b038116610c0d5760405162461bcd60e51b815260040161069f90611c29565b601380546001600160a01b0383166001600160a01b031990911617905550565b600b54339061010090046001600160a01b03166001600160a01b031603610c60576018805460ff19166001179055436017555b565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b0381165f9081526009602052604090205460ff16610cea5760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c726561647920696e636c756465640000000000604482015260640161069f565b5f5b600a54811015610dfa57816001600160a01b0316600a8281548110610d1357610d13611c6f565b5f918252602090912001546001600160a01b031603610df257600a8054610d3c90600190611bcb565b81548110610d4c57610d4c611c6f565b5f91825260209091200154600a80546001600160a01b039092169183908110610d7757610d77611c6f565b5f91825260208083209190910180546001600160a01b0319166001600160a01b039485161790559184168152600682526040808220829055600990925220805460ff19169055600a805480610dce57610dce611c83565b5f8281526020902081015f1990810180546001600160a01b03191690550190555050565b600101610cec565b5050565b5f5f5f5f5f610e0c86611250565b90505f610e198288611bcb565b90505f610e24611283565b90505f610e318284611c97565b90505f610e3e838b611c97565b9a9199509297509095509350505050565b610e5c83838360016112a4565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610ed75781811015610ec957604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161069f565b610ed784848484035f6112a4565b50505050565b6018548390839060ff16610f57576001600160a01b0381165f9081526008602052604090205460ff16610f525760405162461bcd60e51b815260206004820152601760248201527f54726164696e67206e6f742079657420656e61626c6564000000000000000000604482015260640161069f565b610fdd565b601754610f65906003611bde565b4311610fdd576001600160a01b0381165f9081526008602052604090205460ff16610fdd5760405162461bcd60e51b815260206004820152602260248201527f4c61756e63682070726f74656374696f6e3a206e6f742077686974656c697374604482015261195960f21b606482015260840161069f565b6001600160a01b0385166110415760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161069f565b6001600160a01b0384166110a35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161069f565b5f6110ad86610a5f565b90508381101561110e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161069f565b6001600160a01b0385165f9081526007602052604090205460ff16611185576016548461113a87610a5f565b6111449190611bde565b11156111855760405162461bcd60e51b815260206004820152601060248201526f5768616c65206465746563746564212160801b604482015260640161069f565b6015545f906001600160a01b03888116911614806111b057506015546001600160a01b038781169116145b156111b9575060015b6111c587878784611376565b50505050505050565b5f600d548211156112345760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b606482015260840161069f565b5f61123d611283565b90506112498184611cae565b9392505050565b5f5f601154600f546112629190611bde565b90505f60646112718386611c97565b61127b9190611cae565b949350505050565b5f5f5f61128e6114e5565b909250905061129d8183611cae565b9250505090565b6001600160a01b0384166112cd5760405163e602df0560e01b81525f600482015260240161069f565b6001600160a01b0383166112f657604051634a1406b160e11b81525f600482015260240161069f565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610ed757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161136891815260200190565b60405180910390a350505050565b8061138357611383611655565b6001600160a01b0384165f9081526009602052604090205460ff1680156113c257506001600160a01b0383165f9081526009602052604090205460ff16155b156113d7576113d2848484611682565b6114cf565b6001600160a01b0384165f9081526009602052604090205460ff1615801561141657506001600160a01b0383165f9081526009602052604090205460ff165b15611426576113d284848461179d565b6001600160a01b0384165f9081526009602052604090205460ff1615801561146657506001600160a01b0383165f9081526009602052604090205460ff16155b15611476576113d284848461183c565b6001600160a01b0384165f9081526009602052604090205460ff1680156114b457506001600160a01b0383165f9081526009602052604090205460ff165b156114c4576113d2848484611876565b6114cf84848461183c565b80610ed757610ed7601054600f55601254601155565b600d54600c545f918291825b600a54811015611624578260055f600a848154811061151257611512611c6f565b5f9182526020808320909101546001600160a01b03168352820192909252604001902054118061157a57508160065f600a848154811061155457611554611c6f565b5f9182526020808320909101546001600160a01b03168352820192909252604001902054115b1561159057600d54600c54945094505050509091565b60055f600a83815481106115a6576115a6611c6f565b5f9182526020808320909101546001600160a01b031683528201929092526040019020546115d49084611bcb565b925060065f600a83815481106115ec576115ec611c6f565b5f9182526020808320909101546001600160a01b0316835282019290925260400190205461161a9083611bcb565b91506001016114f1565b50600c54600d546116359190611cae565b82101561164c57600d54600c549350935050509091565b90939092509050565b600f541580156116655750601154155b1561166c57565b600f8054601055601180546012555f9182905555565b5f5f5f5f61168f85610dfe565b6001600160a01b038b165f90815260066020526040902054939750919550935091506116bc908690611bcb565b6001600160a01b0388165f908152600660209081526040808320939093556005905220546116eb908590611bcb565b6001600160a01b038089165f90815260056020526040808220939093559088168152205461171a908490611bde565b6001600160a01b0387165f9081526005602052604090205561173d8786836118df565b6117478582611a20565b856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161178c91815260200190565b60405180910390a350505050505050565b5f5f5f5f6117aa85610dfe565b6001600160a01b038b165f90815260056020526040902054939750919550935091506117d7908590611bcb565b6001600160a01b038089165f9081526005602090815260408083209490945591891681526006909152205461180d908390611bde565b6001600160a01b0387165f9081526006602090815260408083209390935560059052205461171a908490611bde565b5f5f5f5f61184985610dfe565b6001600160a01b038b165f90815260056020526040902054939750919550935091506116eb908590611bcb565b5f5f5f5f61188385610dfe565b6001600160a01b038b165f90815260066020526040902054939750919550935091506118b0908690611bcb565b6001600160a01b0388165f908152600660209081526040808320939093556005905220546117d7908590611bcb565b5f6064601154846118f09190611c97565b6118fa9190611cae565b90508015610ed7575f600261190f8484611c97565b6119199190611cae565b6013546001600160a01b03165f90815260056020526040902054909150611941908290611bde565b6013546001600160a01b039081165f908152600560205260408082209390935560145490911681522054611976908290611bde565b6014546001600160a01b039081165f9081526005602090815260409182902093909355601354905185815290821692918816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36014546040518381526001600160a01b03918216918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050505050565b5f6064600f5484611a319190611c97565b611a3b9190611cae565b90505f611a488383611c97565b905080600d54611a589190611bcb565b600d55600e54611a69908390611bde565b600e5550505050565b5f60208284031215611a82575f5ffd5b5035919050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114611ad4575f5ffd5b919050565b5f5f60408385031215611aea575f5ffd5b611af383611abe565b946020939093013593505050565b5f5f5f60608486031215611b13575f5ffd5b611b1c84611abe565b9250611b2a60208501611abe565b929592945050506040919091013590565b5f60208284031215611b4b575f5ffd5b61124982611abe565b5f5f60408385031215611b65575f5ffd5b8235915060208301358015158114611b7b575f5ffd5b809150509250929050565b5f5f60408385031215611b97575f5ffd5b611ba083611abe565b9150611bae60208401611abe565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156107bd576107bd611bb7565b808201808211156107bd576107bd611bb7565b600181811c90821680611c0557607f821691505b602082108103611c2357634e487b7160e01b5f52602260045260245ffd5b50919050565b60208082526026908201527f7a65726f20616464726573732063616e206e6f7420626520746865204665654160408201526518d8dbdd5b9d60d21b606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52603160045260245ffd5b80820281158282048414176107bd576107bd611bb7565b5f82611cc857634e487b7160e01b5f52601260045260245ffd5b50049056fea26469706673582212207bb390c0fe449a171cfc6aba242f295677db9e2a72560f4731b0f5aebd363d1064736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xB DUP1 SLOAD PUSH2 0x100 CALLER MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH0 PUSH1 0xE SSTORE PUSH2 0x35 SWAP2 PUSH1 0xFF SWAP1 DUP2 AND SWAP2 AND OR PUSH1 0xA PUSH2 0x455 JUMP JUMPDEST PUSH2 0x42 SWAP1 PUSH3 0x989680 PUSH2 0x467 JUMP JUMPDEST PUSH1 0x16 SSTORE PUSH1 0x18 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x5A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x21ACA122A921A0AA29A1A7A4A7 PUSH1 0x99 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x4359424343 PUSH1 0xD8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0x516 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0xBB DUP3 DUP3 PUSH2 0x516 JUMP JUMPDEST POP POP PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH2 0xD9 SWAP2 POP PUSH1 0xA PUSH2 0x455 JUMP JUMPDEST PUSH2 0xE7 SWAP1 PUSH4 0x3B9ACA00 PUSH2 0x467 JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE PUSH2 0xF7 SWAP1 PUSH0 NOT PUSH2 0x5D0 JUMP JUMPDEST PUSH2 0x102 SWAP1 PUSH0 NOT PUSH2 0x5EF JUMP JUMPDEST PUSH1 0xD SWAP1 DUP2 SSTORE PUSH1 0x2 PUSH1 0xF DUP2 SWAP1 SSTORE PUSH1 0x10 DUP2 SWAP1 SSTORE PUSH1 0x11 DUP2 SWAP1 SSTORE PUSH1 0x12 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP4 DUP5 SWAP1 DIV DUP2 AND SWAP2 DUP3 OR DUP4 SSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE DUP7 SLOAD DUP6 AND DUP7 MSTORE DUP3 DUP7 KECCAK256 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH1 0x14 DUP1 SLOAD DUP7 AND DUP8 MSTORE DUP4 DUP8 KECCAK256 DUP1 SLOAD DUP4 AND DUP5 OR SWAP1 SSTORE ADDRESS DUP8 MSTORE DUP4 DUP8 KECCAK256 DUP1 SLOAD DUP4 AND DUP5 OR SWAP1 SSTORE DUP10 SLOAD DUP10 SWAP1 DIV DUP7 AND DUP8 MSTORE PUSH1 0x8 DUP6 MSTORE DUP4 DUP8 KECCAK256 DUP1 SLOAD DUP4 AND DUP5 OR SWAP1 SSTORE SWAP7 SLOAD DUP6 AND DUP7 MSTORE DUP3 DUP7 KECCAK256 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE SWAP6 SLOAD DUP5 AND DUP6 MSTORE DUP2 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP7 AND OR SWAP1 SWAP5 SSTORE SWAP6 SLOAD SWAP5 SLOAD SWAP4 SWAP1 SWAP4 DIV SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x1F4 SWAP1 CALLER SWAP1 PUSH2 0x1F9 JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x232 PUSH0 DUP4 DUP4 PUSH2 0x236 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x260 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x602 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2D0 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2EC JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x30A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x3AB JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x38F JUMPI PUSH2 0x38F PUSH2 0x35C JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x39D JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x374 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x3C1 JUMPI POP PUSH1 0x1 PUSH2 0x44F JUMP JUMPDEST DUP2 PUSH2 0x3CD JUMPI POP PUSH0 PUSH2 0x44F JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x3E3 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3ED JUMPI PUSH2 0x409 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x44F JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3FE JUMPI PUSH2 0x3FE PUSH2 0x35C JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x44F JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x42C JUMPI POP DUP2 DUP2 EXP PUSH2 0x44F JUMP JUMPDEST PUSH2 0x438 PUSH0 NOT DUP5 DUP5 PUSH2 0x370 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x44B JUMPI PUSH2 0x44B PUSH2 0x35C JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x460 DUP4 DUP4 PUSH2 0x3B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x44F JUMPI PUSH2 0x44F PUSH2 0x35C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4A6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x4C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x511 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4EF JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x50E JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4FB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x52F JUMPI PUSH2 0x52F PUSH2 0x47E JUMP JUMPDEST PUSH2 0x543 DUP2 PUSH2 0x53D DUP5 SLOAD PUSH2 0x492 JUMP JUMPDEST DUP5 PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x575 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x55E JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x50E JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5A4 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x584 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x5C1 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x5EA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x44F JUMPI PUSH2 0x44F PUSH2 0x35C JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x44F JUMPI PUSH2 0x44F PUSH2 0x35C JUMP JUMPDEST PUSH2 0x1D03 DUP1 PUSH2 0x622 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x838FCC90 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0xC4863770 GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x59F JUMPI DUP1 PUSH4 0xF66608FE EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0xFDEB889F EQ PUSH2 0x5F7 JUMPI DUP1 PUSH4 0xFFB54A99 EQ PUSH2 0x616 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xC4863770 EQ PUSH2 0x520 JUMPI DUP1 PUSH4 0xC9567BF9 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0xCBA0E996 EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0xD00EFB2F EQ PUSH2 0x58A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xA8B08982 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0xC30796AB EQ PUSH2 0x501 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x838FCC90 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0x83AD7994 EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x8873B15F EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x48D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x3AF32ABF GT PUSH2 0x173 JUMPI DUP1 PUSH4 0x5FAE0576 GT PUSH2 0x143 JUMPI DUP1 PUSH4 0x5FAE0576 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x6049876E EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x706407FD EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x41E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x4549B039 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x5342ACB4 EQ PUSH2 0x372 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1CF8FEF5 GT PUSH2 0x1AE JUMPI DUP1 PUSH4 0x1CF8FEF5 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x32035504 EQ PUSH2 0x2F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x53AB182 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x263 JUMPI PUSH0 PUSH0 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1E5 JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A72 JUMP JUMPDEST PUSH2 0x62F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD9 JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xC SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1B01 JUMP JUMPDEST PUSH2 0x7C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x273 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x320 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x34E CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x273 PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B54 JUMP JUMPDEST PUSH2 0x82D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x3C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x273 PUSH2 0x438 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0xA5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x465 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x273 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0xABB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0xAFC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x15 SLOAD PUSH2 0x29A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x4FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD9 JUMP JUMPDEST PUSH2 0xB0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x51B CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x53A CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0xC2D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x56D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x273 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x273 PUSH2 0x5B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x273 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x602 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x611 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0xC62 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x18 SLOAD PUSH2 0x253 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636C75646564206164647265737365732063616E6E6F742063616C6C2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x3434B990333AB731BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x6B2 DUP4 PUSH2 0xDFE JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x6DB SWAP1 DUP3 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xD SLOAD PUSH2 0x701 SWAP1 DUP3 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0xE SLOAD PUSH2 0x712 SWAP1 DUP5 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0xE SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x729 SWAP1 PUSH2 0x1BF1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x755 SWAP1 PUSH2 0x1BF1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7A0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x777 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7A0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x783 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7B7 DUP2 DUP6 DUP6 PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7D0 DUP6 DUP3 DUP6 PUSH2 0xE61 JUMP JUMPDEST PUSH2 0x7DB DUP6 DUP6 DUP6 PUSH2 0xEDD JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0xC SLOAD DUP4 GT ISZERO PUSH2 0x880 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20737570706C7900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST DUP2 PUSH2 0x89C JUMPI PUSH0 PUSH2 0x88F DUP5 PUSH2 0xDFE JUMP JUMPDEST POP SWAP2 SWAP4 POP PUSH2 0x7BD SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8A6 DUP5 PUSH2 0xDFE JUMP JUMPDEST POP SWAP1 SWAP4 POP PUSH2 0x7BD SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x93C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x993 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x97A SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA9A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7BD SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x15 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x729 SWAP1 PUSH2 0x1BF1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7B7 DUP2 DUP6 DUP6 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320697320616C72656164792077686974656C69737465640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC60 JUMPI PUSH1 0x18 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE NUMBER PUSH1 0x17 SSTORE JUMPDEST JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C726561647920696E636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0xDFA JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD13 JUMPI PUSH2 0xD13 PUSH2 0x1C6F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xDF2 JUMPI PUSH1 0xA DUP1 SLOAD PUSH2 0xD3C SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD4C JUMPI PUSH2 0xD4C PUSH2 0x1C6F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xD77 JUMPI PUSH2 0xD77 PUSH2 0x1C6F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP5 AND DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD DUP1 PUSH2 0xDCE JUMPI PUSH2 0xDCE PUSH2 0x1C83 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xCEC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0xE0C DUP7 PUSH2 0x1250 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE19 DUP3 DUP9 PUSH2 0x1BCB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE24 PUSH2 0x1283 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE31 DUP3 DUP5 PUSH2 0x1C97 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE3E DUP4 DUP12 PUSH2 0x1C97 JUMP JUMPDEST SWAP11 SWAP2 SWAP10 POP SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xE5C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12A4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xED7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xEC9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH2 0xED7 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x12A4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x18 SLOAD DUP4 SWAP1 DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0xF57 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xF52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696E67206E6F742079657420656E61626C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH2 0xF65 SWAP1 PUSH1 0x3 PUSH2 0x1BDE JUMP JUMPDEST NUMBER GT PUSH2 0xFDD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xFDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C61756E63682070726F74656374696F6E3A206E6F742077686974656C697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1041 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x10A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH0 PUSH2 0x10AD DUP7 PUSH2 0xA5F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x110E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1185 JUMPI PUSH1 0x16 SLOAD DUP5 PUSH2 0x113A DUP8 PUSH2 0xA5F JUMP JUMPDEST PUSH2 0x1144 SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST GT ISZERO PUSH2 0x1185 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x5768616C652064657465637465642121 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x11B0 JUMPI POP PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x11B9 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x11C5 DUP8 DUP8 DUP8 DUP5 PUSH2 0x1376 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xD SLOAD DUP3 GT ISZERO PUSH2 0x1234 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666C656374696F6E73 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH0 PUSH2 0x123D PUSH2 0x1283 JUMP JUMPDEST SWAP1 POP PUSH2 0x1249 DUP2 DUP5 PUSH2 0x1CAE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x11 SLOAD PUSH1 0xF SLOAD PUSH2 0x1262 SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH2 0x1271 DUP4 DUP7 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x127B SWAP2 SWAP1 PUSH2 0x1CAE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0x128E PUSH2 0x14E5 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x129D DUP2 DUP4 PUSH2 0x1CAE JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x12CD JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12F6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xED7 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1368 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x1383 JUMPI PUSH2 0x1383 PUSH2 0x1655 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x13C2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x13D7 JUMPI PUSH2 0x13D2 DUP5 DUP5 DUP5 PUSH2 0x1682 JUMP JUMPDEST PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1416 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1426 JUMPI PUSH2 0x13D2 DUP5 DUP5 DUP5 PUSH2 0x179D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1466 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1476 JUMPI PUSH2 0x13D2 DUP5 DUP5 DUP5 PUSH2 0x183C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x14B4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x14C4 JUMPI PUSH2 0x13D2 DUP5 DUP5 DUP5 PUSH2 0x1876 JUMP JUMPDEST PUSH2 0x14CF DUP5 DUP5 DUP5 PUSH2 0x183C JUMP JUMPDEST DUP1 PUSH2 0xED7 JUMPI PUSH2 0xED7 PUSH1 0x10 SLOAD PUSH1 0xF SSTORE PUSH1 0x12 SLOAD PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xC SLOAD PUSH0 SWAP2 DUP3 SWAP2 DUP3 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x1624 JUMPI DUP3 PUSH1 0x5 PUSH0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1512 JUMPI PUSH2 0x1512 PUSH2 0x1C6F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT DUP1 PUSH2 0x157A JUMPI POP DUP2 PUSH1 0x6 PUSH0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1554 JUMPI PUSH2 0x1554 PUSH2 0x1C6F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT JUMPDEST ISZERO PUSH2 0x1590 JUMPI PUSH1 0xD SLOAD PUSH1 0xC SLOAD SWAP5 POP SWAP5 POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x15A6 JUMPI PUSH2 0x15A6 PUSH2 0x1C6F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x15D4 SWAP1 DUP5 PUSH2 0x1BCB JUMP JUMPDEST SWAP3 POP PUSH1 0x6 PUSH0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x15EC JUMPI PUSH2 0x15EC PUSH2 0x1C6F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x161A SWAP1 DUP4 PUSH2 0x1BCB JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x14F1 JUMP JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH2 0x1635 SWAP2 SWAP1 PUSH2 0x1CAE JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x164C JUMPI PUSH1 0xD SLOAD PUSH1 0xC SLOAD SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0xF SLOAD ISZERO DUP1 ISZERO PUSH2 0x1665 JUMPI POP PUSH1 0x11 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x166C JUMPI JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x10 SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0x12 SSTORE PUSH0 SWAP2 DUP3 SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x168F DUP6 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x16BC SWAP1 DUP7 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x16EB SWAP1 DUP6 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x171A SWAP1 DUP5 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x173D DUP8 DUP7 DUP4 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x1747 DUP6 DUP3 PUSH2 0x1A20 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x178C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x17AA DUP6 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x17D7 SWAP1 DUP6 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP10 AND DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x180D SWAP1 DUP4 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x171A SWAP1 DUP5 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x1849 DUP6 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x16EB SWAP1 DUP6 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x1883 DUP6 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x18B0 SWAP1 DUP7 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x17D7 SWAP1 DUP6 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x11 SLOAD DUP5 PUSH2 0x18F0 SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x18FA SWAP2 SWAP1 PUSH2 0x1CAE JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xED7 JUMPI PUSH0 PUSH1 0x2 PUSH2 0x190F DUP5 DUP5 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x1919 SWAP2 SWAP1 PUSH2 0x1CAE JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x1941 SWAP1 DUP3 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x14 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1976 SWAP1 DUP3 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x13 SLOAD SWAP1 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP8 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0xF SLOAD DUP5 PUSH2 0x1A31 SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x1A3B SWAP2 SWAP1 PUSH2 0x1CAE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1A48 DUP4 DUP4 PUSH2 0x1C97 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD SLOAD PUSH2 0x1A58 SWAP2 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0xE SLOAD PUSH2 0x1A69 SWAP1 DUP4 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0xE SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A82 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1AD4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AEA JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1AF3 DUP4 PUSH2 0x1ABE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B13 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1B1C DUP5 PUSH2 0x1ABE JUMP JUMPDEST SWAP3 POP PUSH2 0x1B2A PUSH1 0x20 DUP6 ADD PUSH2 0x1ABE JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B4B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1249 DUP3 PUSH2 0x1ABE JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B65 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B7B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B97 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1BA0 DUP4 PUSH2 0x1ABE JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAE PUSH1 0x20 DUP5 ADD PUSH2 0x1ABE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7BD JUMPI PUSH2 0x7BD PUSH2 0x1BB7 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7BD JUMPI PUSH2 0x7BD PUSH2 0x1BB7 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1C05 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C23 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x7A65726F20616464726573732063616E206E6F74206265207468652046656541 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x18D8DBDD5B9D PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7BD JUMPI PUSH2 0x7BD PUSH2 0x1BB7 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1CC8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xB390C0FE449A171CFC6ABA242F295677DB9E2A72560F4731B0F5AEBD CALLDATASIZE RETURNDATASIZE LT PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "128:13881:5:-:0;;;478:35;;;;503:10;478:35;-1:-1:-1;;;;;;478:35:5;;;;;;;-1:-1:-1;625:30:5;;969:22;;981:9;;;;;;;969:2;:22;:::i;:::-;958:33;;:8;:33;:::i;:::-;924:67;;1030:31;;;-1:-1:-1;;1030:31:5;;;1068:825;;;;;;;;;;1582:113:1;;;;;;;;;;;;;-1:-1:-1;;;1582:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:1;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:1;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;1124:9:5::1;:14:::0;;-1:-1:-1;;1124:14:5::1;1136:2;1124:14:::0;;::::1;::::0;;;1171:22:::1;::::0;-1:-1:-1;1171:2:5::1;:22;:::i;:::-;1158:35;::::0;:10:::1;:35;:::i;:::-;1148:7;:45:::0;;;1221:13:::1;::::0;-1:-1:-1;;1221:13:5::1;:::i;:::-;1214:21;::::0;-1:-1:-1;;1214:21:5::1;:::i;:::-;1203:7;:33:::0;;;1264:1:::1;1247:14;:18:::0;;;1275:22:::1;:39:::0;;;1325:7:::1;:11:::0;;;1346:15:::1;:25:::0;1402:6:::1;::::0;;1382:17:::1;:26:::0;;-1:-1:-1;;;;;;1382:26:5::1;-1:-1:-1::0;;;;;1402:6:5::1;::::0;;;::::1;::::0;::::1;1382:26:::0;;::::1;::::0;;-1:-1:-1;1482:27:5;;;:18:::1;:27;::::0;;;;;;;:34;;-1:-1:-1;;1482:34:5;;::::1;-1:-1:-1::0;1482:34:5;;::::1;::::0;;;1545:17;;;::::1;1526:37:::0;;;;;:44;;;::::1;::::0;::::1;::::0;;1599:19:::1;::::0;;;::::1;1580:39:::0;;;;;:46;;;::::1;::::0;::::1;::::0;;1663:4:::1;1636:33:::0;;;;;:40;;;::::1;::::0;::::1;::::0;;2006:6;;;;;;;1686:22;;:13:::1;:22:::0;;;;;:29;;;::::1;::::0;::::1;::::0;;1739:17;;;::::1;1725:32:::0;;;;;:39;;;::::1;::::0;::::1;::::0;;1788:19;;;::::1;1774:34:::0;;;;;:41;;;;::::1;;::::0;;;1843:7;;1833:6;;;;;::::1;::::0;;::::1;1825:15:::0;;:7:::1;:15:::0;;;;;;;:25;;;1860:26:::1;::::0;1866:10:::1;::::0;1860:5:::1;:26::i;:::-;128:13881:::0;;7447:208:1;-1:-1:-1;;;;;7517:21:1;;7513:91;;7561:32;;-1:-1:-1;;;7561:32:1;;7590:1;7561:32;;;4876:51:6;4849:18;;7561:32:1;;;;;;;;7513:91;7613:35;7629:1;7633:7;7642:5;7613:7;:35::i;:::-;7447:208;;:::o;5997:1107::-;-1:-1:-1;;;;;6086:18:1;;6082:540;;6238:5;6222:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6082:540:1;;-1:-1:-1;6082:540:1;;-1:-1:-1;;;;;6296:15:1;;6274:19;6296:15;;;;;;;;;;;6329:19;;;6325:115;;;6375:50;;-1:-1:-1;;;6375:50:1;;-1:-1:-1;;;;;5288:32:6;;6375:50:1;;;5270:51:6;5337:18;;;5330:34;;;5380:18;;;5373:34;;;5243:18;;6375:50:1;5068:345:6;6325:115:1;-1:-1:-1;;;;;6560:15:1;;:9;:15;;;;;;;;;;6578:19;;;;6560:37;;6082:540;-1:-1:-1;;;;;6636:16:1;;6632:425;;6799:12;:21;;;;;;;6632:425;;;-1:-1:-1;;;;;7010:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6632:425;7087:2;-1:-1:-1;;;;;7072:25:1;7081:4;-1:-1:-1;;;;;7072:25:1;;7091:5;7072:25;;;;5564::6;;5552:2;5537:18;;5418:177;7072:25:1;;;;;;;;5997:1107;;;:::o;14:127:6:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:375;234:1;252:5;266:249;287:1;277:8;274:15;266:249;;;337:4;332:3;328:14;322:4;319:24;316:50;;;346:18;;:::i;:::-;396:1;386:8;382:16;379:49;;;410:16;;;;379:49;493:1;489:16;;;;;449:15;;266:249;;;146:375;;;;;;:::o;526:902::-;575:5;605:8;595:80;;-1:-1:-1;646:1:6;660:5;;595:80;694:4;684:76;;-1:-1:-1;731:1:6;745:5;;684:76;776:4;794:1;789:59;;;;862:1;857:174;;;;769:262;;789:59;819:1;810:10;;833:5;;;857:174;894:3;884:8;881:17;878:43;;;901:18;;:::i;:::-;-1:-1:-1;;957:1:6;943:16;;1016:5;;769:262;;1115:2;1105:8;1102:16;1096:3;1090:4;1087:13;1083:36;1077:2;1067:8;1064:16;1059:2;1053:4;1050:12;1046:35;1043:77;1040:203;;;-1:-1:-1;1152:19:6;;;1228:5;;1040:203;1275:42;-1:-1:-1;;1300:8:6;1294:4;1275:42;:::i;:::-;1353:6;1349:1;1345:6;1341:19;1332:7;1329:32;1326:58;;;1364:18;;:::i;:::-;1402:20;;-1:-1:-1;526:902:6;;;;;:::o;1433:131::-;1493:5;1522:36;1549:8;1543:4;1522:36;:::i;:::-;1513:45;1433:131;-1:-1:-1;;;1433:131:6:o;1569:168::-;1642:9;;;1673;;1690:15;;;1684:22;;1670:37;1660:71;;1711:18;;:::i;1742:127::-;1803:10;1798:3;1794:20;1791:1;1784:31;1834:4;1831:1;1824:15;1858:4;1855:1;1848:15;1874:380;1953:1;1949:12;;;;1996;;;2017:61;;2071:4;2063:6;2059:17;2049:27;;2017:61;2124:2;2116:6;2113:14;2093:18;2090:38;2087:161;;2170:10;2165:3;2161:20;2158:1;2151:31;2205:4;2202:1;2195:15;2233:4;2230:1;2223:15;2087:161;;1874:380;;;:::o;2385:518::-;2487:2;2482:3;2479:11;2476:421;;;2523:5;2520:1;2513:16;2567:4;2564:1;2554:18;2637:2;2625:10;2621:19;2618:1;2614:27;2608:4;2604:38;2673:4;2661:10;2658:20;2655:47;;;-1:-1:-1;2696:4:6;2655:47;2751:2;2746:3;2742:12;2739:1;2735:20;2729:4;2725:31;2715:41;;2806:81;2824:2;2817:5;2814:13;2806:81;;;2883:1;2869:16;;2850:1;2839:13;2806:81;;;2810:3;;2476:421;2385:518;;;:::o;3079:1299::-;3199:10;;-1:-1:-1;;;;;3221:30:6;;3218:56;;;3254:18;;:::i;:::-;3283:97;3373:6;3333:38;3365:4;3359:11;3333:38;:::i;:::-;3327:4;3283:97;:::i;:::-;3429:4;3460:2;3449:14;;3477:1;3472:649;;;;4165:1;4182:6;4179:89;;;-1:-1:-1;4234:19:6;;;4228:26;4179:89;-1:-1:-1;;3036:1:6;3032:11;;;3028:24;3024:29;3014:40;3060:1;3056:11;;;3011:57;4281:81;;3442:930;;3472:649;2332:1;2325:14;;;2369:4;2356:18;;-1:-1:-1;;3508:20:6;;;3626:222;3640:7;3637:1;3634:14;3626:222;;;3722:19;;;3716:26;3701:42;;3829:4;3814:20;;;;3782:1;3770:14;;;;3656:12;3626:222;;;3630:3;3876:6;3867:7;3864:19;3861:201;;;3937:19;;;3931:26;-1:-1:-1;;4020:1:6;4016:14;;;4032:3;4012:24;4008:37;4004:42;3989:58;3974:74;;3861:201;-1:-1:-1;;;;4108:1:6;4092:14;;;4088:22;4075:36;;-1:-1:-1;3079:1299:6:o;4383:209::-;4415:1;4441;4431:132;;4485:10;4480:3;4476:20;4473:1;4466:31;4520:4;4517:1;4510:15;4548:4;4545:1;4538:15;4431:132;-1:-1:-1;4577:9:6;;4383:209::o;4597:128::-;4664:9;;;4685:11;;;4682:37;;;4699:18;;:::i;4938:125::-;5003:9;;;5024:10;;;5021:36;;;5037:18;;:::i;5418:177::-;128:13881:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_979": {
									"entryPoint": null,
									"id": 979,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_542": {
									"entryPoint": 3663,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 4772,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getCompleteTaxValue_2001": {
									"entryPoint": 4688,
									"id": 2001,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_getCurrentSupply_2187": {
									"entryPoint": 5349,
									"id": 2187,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@_getRate_2102": {
									"entryPoint": 4739,
									"id": 2102,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getTransferValues_2050": {
									"entryPoint": 3582,
									"id": 2050,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@_msgSender_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_reflectFee_2085": {
									"entryPoint": 6688,
									"id": 2085,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_spendAllowance_650": {
									"entryPoint": 3681,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_tokenTransfer_1659": {
									"entryPoint": 4982,
									"id": 1659,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transferBothExcluded_1976": {
									"entryPoint": 6262,
									"id": 1976,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferFromExcluded_1897": {
									"entryPoint": 5762,
									"id": 1897,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferStandard_1759": {
									"entryPoint": 6204,
									"id": 1759,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferToExcluded_1828": {
									"entryPoint": 6045,
									"id": 1828,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1562": {
									"entryPoint": 3805,
									"id": 1562,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": null,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 1962,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1083": {
									"entryPoint": 2655,
									"id": 1083,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@changeDevelopmentAccount_1161": {
									"entryPoint": 2552,
									"id": 1161,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeMarketingAccount_1139": {
									"entryPoint": 3014,
									"id": 1139,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changePairAddress_1173": {
									"entryPoint": 2747,
									"id": 1173,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_1006": {
									"entryPoint": null,
									"id": 1006,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@excludeAccountFromReward_1327": {
									"entryPoint": 2227,
									"id": 1327,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@excludeFromFee_1117": {
									"entryPoint": 2022,
									"id": 1117,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getDevelopmentAccount_1047": {
									"entryPoint": null,
									"id": 1047,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMarketingAccount_1039": {
									"entryPoint": null,
									"id": 1039,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTaxFee_1031": {
									"entryPoint": null,
									"id": 1031,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@includeAccountinReward_1391": {
									"entryPoint": 3170,
									"id": 1391,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isExcludedFromFee_1059": {
									"entryPoint": null,
									"id": 1059,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isExcluded_1095": {
									"entryPoint": null,
									"id": 1095,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isWhitelistedAddress_1403": {
									"entryPoint": null,
									"id": 1403,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isWhitelisted_807": {
									"entryPoint": null,
									"id": 807,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@launchBlock_860": {
									"entryPoint": null,
									"id": 860,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_197": {
									"entryPoint": 1818,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@openTrading_1440": {
									"entryPoint": 3117,
									"id": 1440,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_987": {
									"entryPoint": null,
									"id": 987,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pairAddress_848": {
									"entryPoint": null,
									"id": 848,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reflect_1220": {
									"entryPoint": 1583,
									"id": 1220,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@reflectionFee_1023": {
									"entryPoint": null,
									"id": 1023,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@reflectionFromToken_1258": {
									"entryPoint": 2093,
									"id": 1258,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@removeAllFee_1688": {
									"entryPoint": 5717,
									"id": 1688,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@restoreAllFee_1700": {
									"entryPoint": null,
									"id": 1700,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_206": {
									"entryPoint": 2812,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taxFeeTransfer_2252": {
									"entryPoint": 6367,
									"id": 2252,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@tokenFromReflection_1282": {
									"entryPoint": 4558,
									"id": 1282,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalFeesRedistributed_1103": {
									"entryPoint": null,
									"id": 1103,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_1015": {
									"entryPoint": null,
									"id": 1015,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tradingOpen_863": {
									"entryPoint": null,
									"id": 863,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_334": {
									"entryPoint": 1987,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 2827,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@whitelistedAddress_1425": {
									"entryPoint": 2840,
									"id": 1425,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 6846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_bool": {
									"entryPoint": 6996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_543833c2a7234931e588d3a22e1a6ee61feec11e0267fb9d55ed0dd8a807ca27__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_576d474a317be5ec9e893ed65484812cc21983357d333143b1b7e67d92963e14__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72cc28bfc68dcd6bff959b08390cdfb73a6c41c525dcd3929d90d896ff51c27d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8aec14595104da5ab7d605fcd41f2ffdd252bbd2899a5204d414bd9202d79ddc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e5bba2366766584da2131202babfffd26ff440a4e29b0b132c9866fb7e5cd5d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f46c49ce218356b2edd982ef62c8e9487aefa42aa99cd4113ff0084c01552854__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7095,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 7299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7279,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9922:6",
										"nodeType": "YulBlock",
										"src": "0:9922:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:156:6",
													"nodeType": "YulBlock",
													"src": "84:156:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:6",
																"nodeType": "YulBlock",
																"src": "130:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:6",
																					"nodeType": "YulLiteral",
																					"src": "139:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:6",
																					"nodeType": "YulLiteral",
																					"src": "142:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:6"
																			},
																			"nativeSrc": "132:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:6"
																		},
																		"nativeSrc": "132:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:6"
																		},
																		"nativeSrc": "101:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:6",
																		"nodeType": "YulLiteral",
																		"src": "126:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:6"
																},
																"nativeSrc": "97:32:6",
																"nodeType": "YulFunctionCall",
																"src": "97:32:6"
															},
															"nativeSrc": "94:52:6",
															"nodeType": "YulIf",
															"src": "94:52:6"
														},
														{
															"nativeSrc": "155:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "155:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "168:1:6",
																"nodeType": "YulLiteral",
																"src": "168:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:6",
																	"nodeType": "YulTypedName",
																	"src": "159:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "178:32:6",
															"nodeType": "YulAssignment",
															"src": "178:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "200:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "200:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "187:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:12:6"
																},
																"nativeSrc": "187:23:6",
																"nodeType": "YulFunctionCall",
																"src": "187:23:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "178:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "178:5:6"
																}
															]
														},
														{
															"nativeSrc": "219:15:6",
															"nodeType": "YulAssignment",
															"src": "219:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "229:5:6",
																"nodeType": "YulIdentifier",
																"src": "229:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "219:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "219:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:226:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:6",
														"nodeType": "YulTypedName",
														"src": "50:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:6",
														"nodeType": "YulTypedName",
														"src": "61:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:6",
														"nodeType": "YulTypedName",
														"src": "73:6:6",
														"type": ""
													}
												],
												"src": "14:226:6"
											},
											{
												"body": {
													"nativeSrc": "366:297:6",
													"nodeType": "YulBlock",
													"src": "366:297:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "383:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "383:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "394:2:6",
																		"nodeType": "YulLiteral",
																		"src": "394:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "376:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "376:6:6"
																},
																"nativeSrc": "376:21:6",
																"nodeType": "YulFunctionCall",
																"src": "376:21:6"
															},
															"nativeSrc": "376:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "376:21:6"
														},
														{
															"nativeSrc": "406:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "406:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "426:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "426:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "420:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "420:5:6"
																},
																"nativeSrc": "420:13:6",
																"nodeType": "YulFunctionCall",
																"src": "420:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "410:6:6",
																	"nodeType": "YulTypedName",
																	"src": "410:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "453:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "453:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "464:2:6",
																				"nodeType": "YulLiteral",
																				"src": "464:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "449:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "449:3:6"
																		},
																		"nativeSrc": "449:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "449:18:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "469:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "469:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "442:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "442:6:6"
																},
																"nativeSrc": "442:34:6",
																"nodeType": "YulFunctionCall",
																"src": "442:34:6"
															},
															"nativeSrc": "442:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "442:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "495:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "495:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "506:2:6",
																				"nodeType": "YulLiteral",
																				"src": "506:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "491:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "491:3:6"
																		},
																		"nativeSrc": "491:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "491:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "515:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "515:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "523:2:6",
																				"nodeType": "YulLiteral",
																				"src": "523:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "511:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "511:3:6"
																		},
																		"nativeSrc": "511:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "511:15:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "528:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "485:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:6"
																},
																"nativeSrc": "485:50:6",
																"nodeType": "YulFunctionCall",
																"src": "485:50:6"
															},
															"nativeSrc": "485:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "485:50:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "559:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "559:9:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "570:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "570:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "555:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "555:3:6"
																				},
																				"nativeSrc": "555:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "555:22:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "579:2:6",
																				"nodeType": "YulLiteral",
																				"src": "579:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "551:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "551:3:6"
																		},
																		"nativeSrc": "551:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "551:31:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "584:1:6",
																		"nodeType": "YulLiteral",
																		"src": "584:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "544:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:6"
																},
																"nativeSrc": "544:42:6",
																"nodeType": "YulFunctionCall",
																"src": "544:42:6"
															},
															"nativeSrc": "544:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "544:42:6"
														},
														{
															"nativeSrc": "595:62:6",
															"nodeType": "YulAssignment",
															"src": "595:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "611:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "611:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "630:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "630:6:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "638:2:6",
																								"nodeType": "YulLiteral",
																								"src": "638:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "626:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "626:3:6"
																						},
																						"nativeSrc": "626:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "626:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "647:2:6",
																								"nodeType": "YulLiteral",
																								"src": "647:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "643:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "643:3:6"
																						},
																						"nativeSrc": "643:7:6",
																						"nodeType": "YulFunctionCall",
																						"src": "643:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "622:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "622:3:6"
																				},
																				"nativeSrc": "622:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "622:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "607:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "607:3:6"
																		},
																		"nativeSrc": "607:45:6",
																		"nodeType": "YulFunctionCall",
																		"src": "607:45:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "654:2:6",
																		"nodeType": "YulLiteral",
																		"src": "654:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "603:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "603:3:6"
																},
																"nativeSrc": "603:54:6",
																"nodeType": "YulFunctionCall",
																"src": "603:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "595:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "595:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "245:418:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "335:9:6",
														"nodeType": "YulTypedName",
														"src": "335:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "346:6:6",
														"nodeType": "YulTypedName",
														"src": "346:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "357:4:6",
														"nodeType": "YulTypedName",
														"src": "357:4:6",
														"type": ""
													}
												],
												"src": "245:418:6"
											},
											{
												"body": {
													"nativeSrc": "717:124:6",
													"nodeType": "YulBlock",
													"src": "717:124:6",
													"statements": [
														{
															"nativeSrc": "727:29:6",
															"nodeType": "YulAssignment",
															"src": "727:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "749:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "749:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "736:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "736:12:6"
																},
																"nativeSrc": "736:20:6",
																"nodeType": "YulFunctionCall",
																"src": "736:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "727:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "727:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "819:16:6",
																"nodeType": "YulBlock",
																"src": "819:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "828:1:6",
																					"nodeType": "YulLiteral",
																					"src": "828:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "831:1:6",
																					"nodeType": "YulLiteral",
																					"src": "831:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "821:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "821:6:6"
																			},
																			"nativeSrc": "821:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "821:12:6"
																		},
																		"nativeSrc": "821:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "821:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "778:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "778:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "789:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "789:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "804:3:6",
																										"nodeType": "YulLiteral",
																										"src": "804:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "809:1:6",
																										"nodeType": "YulLiteral",
																										"src": "809:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "800:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "800:3:6"
																								},
																								"nativeSrc": "800:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "800:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "813:1:6",
																								"nodeType": "YulLiteral",
																								"src": "813:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "796:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "796:3:6"
																						},
																						"nativeSrc": "796:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "796:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "785:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "785:3:6"
																				},
																				"nativeSrc": "785:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "785:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "775:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "775:2:6"
																		},
																		"nativeSrc": "775:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "775:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "768:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "768:6:6"
																},
																"nativeSrc": "768:50:6",
																"nodeType": "YulFunctionCall",
																"src": "768:50:6"
															},
															"nativeSrc": "765:70:6",
															"nodeType": "YulIf",
															"src": "765:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "668:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "696:6:6",
														"nodeType": "YulTypedName",
														"src": "696:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "707:5:6",
														"nodeType": "YulTypedName",
														"src": "707:5:6",
														"type": ""
													}
												],
												"src": "668:173:6"
											},
											{
												"body": {
													"nativeSrc": "933:213:6",
													"nodeType": "YulBlock",
													"src": "933:213:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "979:16:6",
																"nodeType": "YulBlock",
																"src": "979:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "988:1:6",
																					"nodeType": "YulLiteral",
																					"src": "988:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "991:1:6",
																					"nodeType": "YulLiteral",
																					"src": "991:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "981:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "981:6:6"
																			},
																			"nativeSrc": "981:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "981:12:6"
																		},
																		"nativeSrc": "981:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "981:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "954:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "954:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "963:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "963:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "950:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "950:3:6"
																		},
																		"nativeSrc": "950:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "950:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "975:2:6",
																		"nodeType": "YulLiteral",
																		"src": "975:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "946:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "946:3:6"
																},
																"nativeSrc": "946:32:6",
																"nodeType": "YulFunctionCall",
																"src": "946:32:6"
															},
															"nativeSrc": "943:52:6",
															"nodeType": "YulIf",
															"src": "943:52:6"
														},
														{
															"nativeSrc": "1004:39:6",
															"nodeType": "YulAssignment",
															"src": "1004:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1033:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1033:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1014:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1014:18:6"
																},
																"nativeSrc": "1014:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1014:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1004:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:6"
																}
															]
														},
														{
															"nativeSrc": "1052:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1052:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1065:1:6",
																"nodeType": "YulLiteral",
																"src": "1065:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1056:5:6",
																	"nodeType": "YulTypedName",
																	"src": "1056:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1075:41:6",
															"nodeType": "YulAssignment",
															"src": "1075:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1101:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1101:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1112:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1112:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1097:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1097:3:6"
																		},
																		"nativeSrc": "1097:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1097:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1084:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1084:12:6"
																},
																"nativeSrc": "1084:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1084:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1075:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1075:5:6"
																}
															]
														},
														{
															"nativeSrc": "1125:15:6",
															"nodeType": "YulAssignment",
															"src": "1125:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1135:5:6",
																"nodeType": "YulIdentifier",
																"src": "1135:5:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1125:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1125:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "846:300:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "891:9:6",
														"nodeType": "YulTypedName",
														"src": "891:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "902:7:6",
														"nodeType": "YulTypedName",
														"src": "902:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "914:6:6",
														"nodeType": "YulTypedName",
														"src": "914:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "922:6:6",
														"nodeType": "YulTypedName",
														"src": "922:6:6",
														"type": ""
													}
												],
												"src": "846:300:6"
											},
											{
												"body": {
													"nativeSrc": "1246:92:6",
													"nodeType": "YulBlock",
													"src": "1246:92:6",
													"statements": [
														{
															"nativeSrc": "1256:26:6",
															"nodeType": "YulAssignment",
															"src": "1256:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1268:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1268:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1279:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1279:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1264:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1264:3:6"
																},
																"nativeSrc": "1264:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1264:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1256:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1256:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1298:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1298:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1323:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1323:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1316:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1316:6:6"
																				},
																				"nativeSrc": "1316:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1316:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1309:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1309:6:6"
																		},
																		"nativeSrc": "1309:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1309:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1291:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1291:6:6"
																},
																"nativeSrc": "1291:41:6",
																"nodeType": "YulFunctionCall",
																"src": "1291:41:6"
															},
															"nativeSrc": "1291:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "1291:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1151:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1215:9:6",
														"nodeType": "YulTypedName",
														"src": "1215:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1226:6:6",
														"nodeType": "YulTypedName",
														"src": "1226:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1237:4:6",
														"nodeType": "YulTypedName",
														"src": "1237:4:6",
														"type": ""
													}
												],
												"src": "1151:187:6"
											},
											{
												"body": {
													"nativeSrc": "1444:76:6",
													"nodeType": "YulBlock",
													"src": "1444:76:6",
													"statements": [
														{
															"nativeSrc": "1454:26:6",
															"nodeType": "YulAssignment",
															"src": "1454:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1466:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1466:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1477:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1477:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1462:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1462:3:6"
																},
																"nativeSrc": "1462:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1462:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1454:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1454:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1496:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1496:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1507:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1507:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1489:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:6"
																},
																"nativeSrc": "1489:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1489:25:6"
															},
															"nativeSrc": "1489:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "1489:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1343:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1413:9:6",
														"nodeType": "YulTypedName",
														"src": "1413:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1424:6:6",
														"nodeType": "YulTypedName",
														"src": "1424:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1435:4:6",
														"nodeType": "YulTypedName",
														"src": "1435:4:6",
														"type": ""
													}
												],
												"src": "1343:177:6"
											},
											{
												"body": {
													"nativeSrc": "1626:102:6",
													"nodeType": "YulBlock",
													"src": "1626:102:6",
													"statements": [
														{
															"nativeSrc": "1636:26:6",
															"nodeType": "YulAssignment",
															"src": "1636:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1648:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1648:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1659:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1659:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1644:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1644:3:6"
																},
																"nativeSrc": "1644:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1644:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1636:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1636:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1678:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1678:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1693:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1693:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1709:3:6",
																								"nodeType": "YulLiteral",
																								"src": "1709:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1714:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1714:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1705:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1705:3:6"
																						},
																						"nativeSrc": "1705:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1705:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1718:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1718:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1701:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1701:3:6"
																				},
																				"nativeSrc": "1701:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1701:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1689:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1689:3:6"
																		},
																		"nativeSrc": "1689:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1689:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1671:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1671:6:6"
																},
																"nativeSrc": "1671:51:6",
																"nodeType": "YulFunctionCall",
																"src": "1671:51:6"
															},
															"nativeSrc": "1671:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "1671:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1525:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1595:9:6",
														"nodeType": "YulTypedName",
														"src": "1595:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1606:6:6",
														"nodeType": "YulTypedName",
														"src": "1606:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1617:4:6",
														"nodeType": "YulTypedName",
														"src": "1617:4:6",
														"type": ""
													}
												],
												"src": "1525:203:6"
											},
											{
												"body": {
													"nativeSrc": "1837:270:6",
													"nodeType": "YulBlock",
													"src": "1837:270:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1883:16:6",
																"nodeType": "YulBlock",
																"src": "1883:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1892:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1892:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1895:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1895:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1885:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1885:6:6"
																			},
																			"nativeSrc": "1885:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1885:12:6"
																		},
																		"nativeSrc": "1885:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1885:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1858:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1858:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1867:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1867:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1854:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1854:3:6"
																		},
																		"nativeSrc": "1854:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1854:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1879:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1879:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1850:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1850:3:6"
																},
																"nativeSrc": "1850:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1850:32:6"
															},
															"nativeSrc": "1847:52:6",
															"nodeType": "YulIf",
															"src": "1847:52:6"
														},
														{
															"nativeSrc": "1908:39:6",
															"nodeType": "YulAssignment",
															"src": "1908:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1937:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1937:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1918:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1918:18:6"
																},
																"nativeSrc": "1918:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1918:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1908:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1908:6:6"
																}
															]
														},
														{
															"nativeSrc": "1956:48:6",
															"nodeType": "YulAssignment",
															"src": "1956:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1989:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1989:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2000:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2000:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1985:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1985:3:6"
																		},
																		"nativeSrc": "1985:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1985:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1966:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1966:18:6"
																},
																"nativeSrc": "1966:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1966:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1956:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1956:6:6"
																}
															]
														},
														{
															"nativeSrc": "2013:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2013:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2026:1:6",
																"nodeType": "YulLiteral",
																"src": "2026:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2017:5:6",
																	"nodeType": "YulTypedName",
																	"src": "2017:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2036:41:6",
															"nodeType": "YulAssignment",
															"src": "2036:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2062:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2062:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2073:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2073:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2058:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2058:3:6"
																		},
																		"nativeSrc": "2058:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2058:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2045:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2045:12:6"
																},
																"nativeSrc": "2045:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2045:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2036:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2036:5:6"
																}
															]
														},
														{
															"nativeSrc": "2086:15:6",
															"nodeType": "YulAssignment",
															"src": "2086:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "2096:5:6",
																"nodeType": "YulIdentifier",
																"src": "2096:5:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2086:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2086:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1733:374:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1787:9:6",
														"nodeType": "YulTypedName",
														"src": "1787:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1798:7:6",
														"nodeType": "YulTypedName",
														"src": "1798:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1810:6:6",
														"nodeType": "YulTypedName",
														"src": "1810:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1818:6:6",
														"nodeType": "YulTypedName",
														"src": "1818:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1826:6:6",
														"nodeType": "YulTypedName",
														"src": "1826:6:6",
														"type": ""
													}
												],
												"src": "1733:374:6"
											},
											{
												"body": {
													"nativeSrc": "2209:87:6",
													"nodeType": "YulBlock",
													"src": "2209:87:6",
													"statements": [
														{
															"nativeSrc": "2219:26:6",
															"nodeType": "YulAssignment",
															"src": "2219:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2231:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2231:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2242:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2242:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2227:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2227:3:6"
																},
																"nativeSrc": "2227:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2227:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2219:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2219:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2261:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2261:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2276:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2276:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2284:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2284:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2272:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2272:3:6"
																		},
																		"nativeSrc": "2272:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2272:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2254:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2254:6:6"
																},
																"nativeSrc": "2254:36:6",
																"nodeType": "YulFunctionCall",
																"src": "2254:36:6"
															},
															"nativeSrc": "2254:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "2254:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2112:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2178:9:6",
														"nodeType": "YulTypedName",
														"src": "2178:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2189:6:6",
														"nodeType": "YulTypedName",
														"src": "2189:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2200:4:6",
														"nodeType": "YulTypedName",
														"src": "2200:4:6",
														"type": ""
													}
												],
												"src": "2112:184:6"
											},
											{
												"body": {
													"nativeSrc": "2371:116:6",
													"nodeType": "YulBlock",
													"src": "2371:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2417:16:6",
																"nodeType": "YulBlock",
																"src": "2417:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2426:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2426:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2429:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2429:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2419:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2419:6:6"
																			},
																			"nativeSrc": "2419:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2419:12:6"
																		},
																		"nativeSrc": "2419:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2419:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2392:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2392:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2401:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2401:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2388:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2388:3:6"
																		},
																		"nativeSrc": "2388:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2388:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2413:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2413:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2384:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2384:3:6"
																},
																"nativeSrc": "2384:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2384:32:6"
															},
															"nativeSrc": "2381:52:6",
															"nodeType": "YulIf",
															"src": "2381:52:6"
														},
														{
															"nativeSrc": "2442:39:6",
															"nodeType": "YulAssignment",
															"src": "2442:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2471:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2471:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2452:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2452:18:6"
																},
																"nativeSrc": "2452:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2452:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2442:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2442:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2301:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2337:9:6",
														"nodeType": "YulTypedName",
														"src": "2337:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2348:7:6",
														"nodeType": "YulTypedName",
														"src": "2348:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2360:6:6",
														"nodeType": "YulTypedName",
														"src": "2360:6:6",
														"type": ""
													}
												],
												"src": "2301:186:6"
											},
											{
												"body": {
													"nativeSrc": "2576:311:6",
													"nodeType": "YulBlock",
													"src": "2576:311:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2622:16:6",
																"nodeType": "YulBlock",
																"src": "2622:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2631:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2631:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2634:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2634:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2624:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2624:6:6"
																			},
																			"nativeSrc": "2624:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2624:12:6"
																		},
																		"nativeSrc": "2624:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2624:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2597:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2597:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2606:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2606:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2593:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2593:3:6"
																		},
																		"nativeSrc": "2593:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2593:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2618:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2618:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2589:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2589:3:6"
																},
																"nativeSrc": "2589:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2589:32:6"
															},
															"nativeSrc": "2586:52:6",
															"nodeType": "YulIf",
															"src": "2586:52:6"
														},
														{
															"nativeSrc": "2647:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2647:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2660:1:6",
																"nodeType": "YulLiteral",
																"src": "2660:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2651:5:6",
																	"nodeType": "YulTypedName",
																	"src": "2651:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2670:32:6",
															"nodeType": "YulAssignment",
															"src": "2670:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2692:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2692:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2679:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2679:12:6"
																},
																"nativeSrc": "2679:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2679:23:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2670:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2670:5:6"
																}
															]
														},
														{
															"nativeSrc": "2711:15:6",
															"nodeType": "YulAssignment",
															"src": "2711:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "2721:5:6",
																"nodeType": "YulIdentifier",
																"src": "2721:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2711:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:6"
																}
															]
														},
														{
															"nativeSrc": "2735:47:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2735:47:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2767:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2767:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2778:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2778:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2763:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2763:3:6"
																		},
																		"nativeSrc": "2763:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2763:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2750:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2750:12:6"
																},
																"nativeSrc": "2750:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2750:32:6"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2739:7:6",
																	"nodeType": "YulTypedName",
																	"src": "2739:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2839:16:6",
																"nodeType": "YulBlock",
																"src": "2839:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2848:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2848:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2851:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2851:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2841:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2841:6:6"
																			},
																			"nativeSrc": "2841:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2841:12:6"
																		},
																		"nativeSrc": "2841:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2841:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "2804:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2804:7:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value_1",
																								"nativeSrc": "2827:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "2827:7:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2820:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2820:6:6"
																						},
																						"nativeSrc": "2820:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2820:15:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2813:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2813:6:6"
																				},
																				"nativeSrc": "2813:23:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2813:23:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2801:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2801:2:6"
																		},
																		"nativeSrc": "2801:36:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2801:36:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2794:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2794:6:6"
																},
																"nativeSrc": "2794:44:6",
																"nodeType": "YulFunctionCall",
																"src": "2794:44:6"
															},
															"nativeSrc": "2791:64:6",
															"nodeType": "YulIf",
															"src": "2791:64:6"
														},
														{
															"nativeSrc": "2864:17:6",
															"nodeType": "YulAssignment",
															"src": "2864:17:6",
															"value": {
																"name": "value_1",
																"nativeSrc": "2874:7:6",
																"nodeType": "YulIdentifier",
																"src": "2874:7:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2864:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2864:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bool",
												"nativeSrc": "2492:395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2534:9:6",
														"nodeType": "YulTypedName",
														"src": "2534:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2545:7:6",
														"nodeType": "YulTypedName",
														"src": "2545:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2557:6:6",
														"nodeType": "YulTypedName",
														"src": "2557:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2565:6:6",
														"nodeType": "YulTypedName",
														"src": "2565:6:6",
														"type": ""
													}
												],
												"src": "2492:395:6"
											},
											{
												"body": {
													"nativeSrc": "2979:173:6",
													"nodeType": "YulBlock",
													"src": "2979:173:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3025:16:6",
																"nodeType": "YulBlock",
																"src": "3025:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3034:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3034:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3037:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3037:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3027:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3027:6:6"
																			},
																			"nativeSrc": "3027:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3027:12:6"
																		},
																		"nativeSrc": "3027:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3027:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3000:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3000:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3009:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3009:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2996:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2996:3:6"
																		},
																		"nativeSrc": "2996:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2996:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3021:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3021:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2992:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2992:3:6"
																},
																"nativeSrc": "2992:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2992:32:6"
															},
															"nativeSrc": "2989:52:6",
															"nodeType": "YulIf",
															"src": "2989:52:6"
														},
														{
															"nativeSrc": "3050:39:6",
															"nodeType": "YulAssignment",
															"src": "3050:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3079:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3079:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3060:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3060:18:6"
																},
																"nativeSrc": "3060:29:6",
																"nodeType": "YulFunctionCall",
																"src": "3060:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3050:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3050:6:6"
																}
															]
														},
														{
															"nativeSrc": "3098:48:6",
															"nodeType": "YulAssignment",
															"src": "3098:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3131:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3131:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3142:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3142:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3127:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3127:3:6"
																		},
																		"nativeSrc": "3127:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3127:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3108:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3108:18:6"
																},
																"nativeSrc": "3108:38:6",
																"nodeType": "YulFunctionCall",
																"src": "3108:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3098:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3098:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2892:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2937:9:6",
														"nodeType": "YulTypedName",
														"src": "2937:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2948:7:6",
														"nodeType": "YulTypedName",
														"src": "2948:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2960:6:6",
														"nodeType": "YulTypedName",
														"src": "2960:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2968:6:6",
														"nodeType": "YulTypedName",
														"src": "2968:6:6",
														"type": ""
													}
												],
												"src": "2892:260:6"
											},
											{
												"body": {
													"nativeSrc": "3331:234:6",
													"nodeType": "YulBlock",
													"src": "3331:234:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3348:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3359:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3359:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3341:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3341:6:6"
																},
																"nativeSrc": "3341:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3341:21:6"
															},
															"nativeSrc": "3341:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3341:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3382:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3382:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3393:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3393:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3378:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3378:3:6"
																		},
																		"nativeSrc": "3378:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3378:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3398:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3398:2:6",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3371:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3371:6:6"
																},
																"nativeSrc": "3371:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3371:30:6"
															},
															"nativeSrc": "3371:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3371:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3421:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3432:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3432:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3417:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:6"
																		},
																		"nativeSrc": "3417:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3417:18:6"
																	},
																	{
																		"hexValue": "4578636c75646564206164647265737365732063616e6e6f742063616c6c2074",
																		"kind": "string",
																		"nativeSrc": "3437:34:6",
																		"nodeType": "YulLiteral",
																		"src": "3437:34:6",
																		"type": "",
																		"value": "Excluded addresses cannot call t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3410:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3410:6:6"
																},
																"nativeSrc": "3410:62:6",
																"nodeType": "YulFunctionCall",
																"src": "3410:62:6"
															},
															"nativeSrc": "3410:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "3410:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3492:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3492:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3503:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3503:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3488:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3488:3:6"
																		},
																		"nativeSrc": "3488:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3488:18:6"
																	},
																	{
																		"hexValue": "6869732066756e6374696f6e",
																		"kind": "string",
																		"nativeSrc": "3508:14:6",
																		"nodeType": "YulLiteral",
																		"src": "3508:14:6",
																		"type": "",
																		"value": "his function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3481:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3481:6:6"
																},
																"nativeSrc": "3481:42:6",
																"nodeType": "YulFunctionCall",
																"src": "3481:42:6"
															},
															"nativeSrc": "3481:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "3481:42:6"
														},
														{
															"nativeSrc": "3532:27:6",
															"nodeType": "YulAssignment",
															"src": "3532:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3544:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3544:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3555:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3555:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3540:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3540:3:6"
																},
																"nativeSrc": "3540:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3540:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3532:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3532:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3157:408:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3308:9:6",
														"nodeType": "YulTypedName",
														"src": "3308:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3322:4:6",
														"nodeType": "YulTypedName",
														"src": "3322:4:6",
														"type": ""
													}
												],
												"src": "3157:408:6"
											},
											{
												"body": {
													"nativeSrc": "3602:95:6",
													"nodeType": "YulBlock",
													"src": "3602:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3619:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3619:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3626:3:6",
																				"nodeType": "YulLiteral",
																				"src": "3626:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3631:10:6",
																				"nodeType": "YulLiteral",
																				"src": "3631:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3622:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3622:3:6"
																		},
																		"nativeSrc": "3622:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3622:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3612:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3612:6:6"
																},
																"nativeSrc": "3612:31:6",
																"nodeType": "YulFunctionCall",
																"src": "3612:31:6"
															},
															"nativeSrc": "3612:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "3612:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3659:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3659:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3662:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3662:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3652:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3652:6:6"
																},
																"nativeSrc": "3652:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3652:15:6"
															},
															"nativeSrc": "3652:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3652:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3683:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3683:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3686:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3686:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3676:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3676:6:6"
																},
																"nativeSrc": "3676:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3676:15:6"
															},
															"nativeSrc": "3676:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3676:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3570:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "3570:127:6"
											},
											{
												"body": {
													"nativeSrc": "3751:79:6",
													"nodeType": "YulBlock",
													"src": "3751:79:6",
													"statements": [
														{
															"nativeSrc": "3761:17:6",
															"nodeType": "YulAssignment",
															"src": "3761:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3773:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3773:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3776:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3776:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3769:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3769:3:6"
																},
																"nativeSrc": "3769:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3769:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3761:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3761:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3802:22:6",
																"nodeType": "YulBlock",
																"src": "3802:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3804:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3804:16:6"
																			},
																			"nativeSrc": "3804:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3804:18:6"
																		},
																		"nativeSrc": "3804:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3804:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3793:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3793:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3799:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3799:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3790:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3790:2:6"
																},
																"nativeSrc": "3790:11:6",
																"nodeType": "YulFunctionCall",
																"src": "3790:11:6"
															},
															"nativeSrc": "3787:37:6",
															"nodeType": "YulIf",
															"src": "3787:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3702:128:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3733:1:6",
														"nodeType": "YulTypedName",
														"src": "3733:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3736:1:6",
														"nodeType": "YulTypedName",
														"src": "3736:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3742:4:6",
														"nodeType": "YulTypedName",
														"src": "3742:4:6",
														"type": ""
													}
												],
												"src": "3702:128:6"
											},
											{
												"body": {
													"nativeSrc": "3883:77:6",
													"nodeType": "YulBlock",
													"src": "3883:77:6",
													"statements": [
														{
															"nativeSrc": "3893:16:6",
															"nodeType": "YulAssignment",
															"src": "3893:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3904:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3904:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3907:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3907:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3900:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3900:3:6"
																},
																"nativeSrc": "3900:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3900:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3893:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3893:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3932:22:6",
																"nodeType": "YulBlock",
																"src": "3932:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3934:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3934:16:6"
																			},
																			"nativeSrc": "3934:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3934:18:6"
																		},
																		"nativeSrc": "3934:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3934:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3924:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3924:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3927:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3927:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3921:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3921:2:6"
																},
																"nativeSrc": "3921:10:6",
																"nodeType": "YulFunctionCall",
																"src": "3921:10:6"
															},
															"nativeSrc": "3918:36:6",
															"nodeType": "YulIf",
															"src": "3918:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3835:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3866:1:6",
														"nodeType": "YulTypedName",
														"src": "3866:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3869:1:6",
														"nodeType": "YulTypedName",
														"src": "3869:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3875:3:6",
														"nodeType": "YulTypedName",
														"src": "3875:3:6",
														"type": ""
													}
												],
												"src": "3835:125:6"
											},
											{
												"body": {
													"nativeSrc": "4020:325:6",
													"nodeType": "YulBlock",
													"src": "4020:325:6",
													"statements": [
														{
															"nativeSrc": "4030:22:6",
															"nodeType": "YulAssignment",
															"src": "4030:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4044:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4044:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4047:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4047:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4040:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4040:3:6"
																},
																"nativeSrc": "4040:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4040:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4030:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4030:6:6"
																}
															]
														},
														{
															"nativeSrc": "4061:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4061:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4091:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4091:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4097:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4097:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4087:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4087:3:6"
																},
																"nativeSrc": "4087:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4087:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4065:18:6",
																	"nodeType": "YulTypedName",
																	"src": "4065:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4138:31:6",
																"nodeType": "YulBlock",
																"src": "4138:31:6",
																"statements": [
																	{
																		"nativeSrc": "4140:27:6",
																		"nodeType": "YulAssignment",
																		"src": "4140:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4154:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4154:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4162:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4162:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4150:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4150:3:6"
																			},
																			"nativeSrc": "4150:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4150:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4140:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4140:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4118:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "4118:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4111:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4111:6:6"
																},
																"nativeSrc": "4111:26:6",
																"nodeType": "YulFunctionCall",
																"src": "4111:26:6"
															},
															"nativeSrc": "4108:61:6",
															"nodeType": "YulIf",
															"src": "4108:61:6"
														},
														{
															"body": {
																"nativeSrc": "4228:111:6",
																"nodeType": "YulBlock",
																"src": "4228:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4256:3:6",
																							"nodeType": "YulLiteral",
																							"src": "4256:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4261:10:6",
																							"nodeType": "YulLiteral",
																							"src": "4261:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4252:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4252:3:6"
																					},
																					"nativeSrc": "4252:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4252:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4242:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4242:6:6"
																			},
																			"nativeSrc": "4242:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4242:31:6"
																		},
																		"nativeSrc": "4242:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4242:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4293:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4293:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4296:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4296:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4286:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4286:6:6"
																			},
																			"nativeSrc": "4286:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4286:15:6"
																		},
																		"nativeSrc": "4286:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4286:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4321:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4321:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4324:4:6",
																					"nodeType": "YulLiteral",
																					"src": "4324:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4314:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4314:6:6"
																			},
																			"nativeSrc": "4314:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4314:15:6"
																		},
																		"nativeSrc": "4314:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4314:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4184:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "4184:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4207:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4207:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4215:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4215:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4204:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4204:2:6"
																		},
																		"nativeSrc": "4204:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4204:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4181:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4181:2:6"
																},
																"nativeSrc": "4181:38:6",
																"nodeType": "YulFunctionCall",
																"src": "4181:38:6"
															},
															"nativeSrc": "4178:161:6",
															"nodeType": "YulIf",
															"src": "4178:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3965:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4000:4:6",
														"nodeType": "YulTypedName",
														"src": "4000:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4009:6:6",
														"nodeType": "YulTypedName",
														"src": "4009:6:6",
														"type": ""
													}
												],
												"src": "3965:380:6"
											},
											{
												"body": {
													"nativeSrc": "4524:181:6",
													"nodeType": "YulBlock",
													"src": "4524:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4541:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4541:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4552:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4552:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4534:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4534:6:6"
																},
																"nativeSrc": "4534:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4534:21:6"
															},
															"nativeSrc": "4534:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4534:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4575:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4575:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4586:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4586:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4571:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4571:3:6"
																		},
																		"nativeSrc": "4571:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4571:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4591:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4591:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4564:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4564:6:6"
																},
																"nativeSrc": "4564:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4564:30:6"
															},
															"nativeSrc": "4564:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4564:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4614:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4614:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4625:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4625:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4610:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4610:3:6"
																		},
																		"nativeSrc": "4610:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4610:18:6"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265206c657373207468616e20737570706c79",
																		"kind": "string",
																		"nativeSrc": "4630:33:6",
																		"nodeType": "YulLiteral",
																		"src": "4630:33:6",
																		"type": "",
																		"value": "Amount must be less than supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4603:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:6"
																},
																"nativeSrc": "4603:61:6",
																"nodeType": "YulFunctionCall",
																"src": "4603:61:6"
															},
															"nativeSrc": "4603:61:6",
															"nodeType": "YulExpressionStatement",
															"src": "4603:61:6"
														},
														{
															"nativeSrc": "4673:26:6",
															"nodeType": "YulAssignment",
															"src": "4673:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4685:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4685:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4696:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4696:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4681:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4681:3:6"
																},
																"nativeSrc": "4681:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4681:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4673:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4673:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4350:355:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4501:9:6",
														"nodeType": "YulTypedName",
														"src": "4501:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4515:4:6",
														"nodeType": "YulTypedName",
														"src": "4515:4:6",
														"type": ""
													}
												],
												"src": "4350:355:6"
											},
											{
												"body": {
													"nativeSrc": "4884:177:6",
													"nodeType": "YulBlock",
													"src": "4884:177:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4901:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4901:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4912:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4912:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4894:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4894:6:6"
																},
																"nativeSrc": "4894:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4894:21:6"
															},
															"nativeSrc": "4894:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4894:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4935:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4935:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4946:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4946:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4931:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4931:3:6"
																		},
																		"nativeSrc": "4931:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4931:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4951:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4951:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4924:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4924:6:6"
																},
																"nativeSrc": "4924:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4924:30:6"
															},
															"nativeSrc": "4924:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4924:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4974:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4974:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4985:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4985:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4970:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4970:3:6"
																		},
																		"nativeSrc": "4970:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4970:18:6"
																	},
																	{
																		"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
																		"kind": "string",
																		"nativeSrc": "4990:29:6",
																		"nodeType": "YulLiteral",
																		"src": "4990:29:6",
																		"type": "",
																		"value": "Account is already excluded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4963:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4963:6:6"
																},
																"nativeSrc": "4963:57:6",
																"nodeType": "YulFunctionCall",
																"src": "4963:57:6"
															},
															"nativeSrc": "4963:57:6",
															"nodeType": "YulExpressionStatement",
															"src": "4963:57:6"
														},
														{
															"nativeSrc": "5029:26:6",
															"nodeType": "YulAssignment",
															"src": "5029:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5041:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5041:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5052:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5052:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5037:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5037:3:6"
																},
																"nativeSrc": "5037:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5037:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5029:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5029:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4710:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4861:9:6",
														"nodeType": "YulTypedName",
														"src": "4861:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4875:4:6",
														"nodeType": "YulTypedName",
														"src": "4875:4:6",
														"type": ""
													}
												],
												"src": "4710:351:6"
											},
											{
												"body": {
													"nativeSrc": "5240:228:6",
													"nodeType": "YulBlock",
													"src": "5240:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5257:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5257:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5268:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5268:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5250:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5250:6:6"
																},
																"nativeSrc": "5250:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5250:21:6"
															},
															"nativeSrc": "5250:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5250:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5291:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5291:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5302:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5302:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5287:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5287:3:6"
																		},
																		"nativeSrc": "5287:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5287:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5307:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5307:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5280:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5280:6:6"
																},
																"nativeSrc": "5280:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5280:30:6"
															},
															"nativeSrc": "5280:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5280:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5330:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5330:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5341:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5341:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5326:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5326:3:6"
																		},
																		"nativeSrc": "5326:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5326:18:6"
																	},
																	{
																		"hexValue": "7a65726f20616464726573732063616e206e6f74206265207468652046656541",
																		"kind": "string",
																		"nativeSrc": "5346:34:6",
																		"nodeType": "YulLiteral",
																		"src": "5346:34:6",
																		"type": "",
																		"value": "zero address can not be the FeeA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5319:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5319:6:6"
																},
																"nativeSrc": "5319:62:6",
																"nodeType": "YulFunctionCall",
																"src": "5319:62:6"
															},
															"nativeSrc": "5319:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "5319:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5401:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5401:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5412:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5412:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5397:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5397:3:6"
																		},
																		"nativeSrc": "5397:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5397:18:6"
																	},
																	{
																		"hexValue": "63636f756e74",
																		"kind": "string",
																		"nativeSrc": "5417:8:6",
																		"nodeType": "YulLiteral",
																		"src": "5417:8:6",
																		"type": "",
																		"value": "ccount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5390:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5390:6:6"
																},
																"nativeSrc": "5390:36:6",
																"nodeType": "YulFunctionCall",
																"src": "5390:36:6"
															},
															"nativeSrc": "5390:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "5390:36:6"
														},
														{
															"nativeSrc": "5435:27:6",
															"nodeType": "YulAssignment",
															"src": "5435:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5447:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5447:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5458:3:6",
																		"nodeType": "YulLiteral",
																		"src": "5458:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5443:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5443:3:6"
																},
																"nativeSrc": "5443:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5443:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5435:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5435:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f46c49ce218356b2edd982ef62c8e9487aefa42aa99cd4113ff0084c01552854__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5066:402:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5217:9:6",
														"nodeType": "YulTypedName",
														"src": "5217:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5231:4:6",
														"nodeType": "YulTypedName",
														"src": "5231:4:6",
														"type": ""
													}
												],
												"src": "5066:402:6"
											},
											{
												"body": {
													"nativeSrc": "5647:180:6",
													"nodeType": "YulBlock",
													"src": "5647:180:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5664:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5664:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5675:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5675:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5657:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5657:6:6"
																},
																"nativeSrc": "5657:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5657:21:6"
															},
															"nativeSrc": "5657:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5657:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5698:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5698:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5709:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5709:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5694:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5694:3:6"
																		},
																		"nativeSrc": "5694:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5694:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5714:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5714:2:6",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5687:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5687:6:6"
																},
																"nativeSrc": "5687:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5687:30:6"
															},
															"nativeSrc": "5687:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5687:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5737:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5748:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5733:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:6"
																		},
																		"nativeSrc": "5733:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5733:18:6"
																	},
																	{
																		"hexValue": "4164647265737320697320616c72656164792077686974656c6973746564",
																		"kind": "string",
																		"nativeSrc": "5753:32:6",
																		"nodeType": "YulLiteral",
																		"src": "5753:32:6",
																		"type": "",
																		"value": "Address is already whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5726:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:6"
																},
																"nativeSrc": "5726:60:6",
																"nodeType": "YulFunctionCall",
																"src": "5726:60:6"
															},
															"nativeSrc": "5726:60:6",
															"nodeType": "YulExpressionStatement",
															"src": "5726:60:6"
														},
														{
															"nativeSrc": "5795:26:6",
															"nodeType": "YulAssignment",
															"src": "5795:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5807:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5807:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5818:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5818:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5803:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5803:3:6"
																},
																"nativeSrc": "5803:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5803:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5795:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5795:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8aec14595104da5ab7d605fcd41f2ffdd252bbd2899a5204d414bd9202d79ddc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5473:354:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5624:9:6",
														"nodeType": "YulTypedName",
														"src": "5624:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5638:4:6",
														"nodeType": "YulTypedName",
														"src": "5638:4:6",
														"type": ""
													}
												],
												"src": "5473:354:6"
											},
											{
												"body": {
													"nativeSrc": "6006:177:6",
													"nodeType": "YulBlock",
													"src": "6006:177:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6023:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6023:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6034:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6034:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6016:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6016:6:6"
																},
																"nativeSrc": "6016:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6016:21:6"
															},
															"nativeSrc": "6016:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6016:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6057:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6057:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6068:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6068:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6053:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6053:3:6"
																		},
																		"nativeSrc": "6053:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6053:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6073:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6073:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6046:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6046:6:6"
																},
																"nativeSrc": "6046:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6046:30:6"
															},
															"nativeSrc": "6046:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6046:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6096:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6096:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6107:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6107:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6092:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6092:3:6"
																		},
																		"nativeSrc": "6092:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6092:18:6"
																	},
																	{
																		"hexValue": "4163636f756e7420697320616c726561647920696e636c75646564",
																		"kind": "string",
																		"nativeSrc": "6112:29:6",
																		"nodeType": "YulLiteral",
																		"src": "6112:29:6",
																		"type": "",
																		"value": "Account is already included"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6085:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6085:6:6"
																},
																"nativeSrc": "6085:57:6",
																"nodeType": "YulFunctionCall",
																"src": "6085:57:6"
															},
															"nativeSrc": "6085:57:6",
															"nodeType": "YulExpressionStatement",
															"src": "6085:57:6"
														},
														{
															"nativeSrc": "6151:26:6",
															"nodeType": "YulAssignment",
															"src": "6151:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6163:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6163:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6174:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6174:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6159:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6159:3:6"
																},
																"nativeSrc": "6159:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6159:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6151:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6151:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_576d474a317be5ec9e893ed65484812cc21983357d333143b1b7e67d92963e14__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5832:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5983:9:6",
														"nodeType": "YulTypedName",
														"src": "5983:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5997:4:6",
														"nodeType": "YulTypedName",
														"src": "5997:4:6",
														"type": ""
													}
												],
												"src": "5832:351:6"
											},
											{
												"body": {
													"nativeSrc": "6220:95:6",
													"nodeType": "YulBlock",
													"src": "6220:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6237:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6237:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6244:3:6",
																				"nodeType": "YulLiteral",
																				"src": "6244:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6249:10:6",
																				"nodeType": "YulLiteral",
																				"src": "6249:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6240:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6240:3:6"
																		},
																		"nativeSrc": "6240:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6240:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6230:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6230:6:6"
																},
																"nativeSrc": "6230:31:6",
																"nodeType": "YulFunctionCall",
																"src": "6230:31:6"
															},
															"nativeSrc": "6230:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "6230:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6277:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6277:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6280:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6280:4:6",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6270:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6270:6:6"
																},
																"nativeSrc": "6270:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6270:15:6"
															},
															"nativeSrc": "6270:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6270:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6301:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6301:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6304:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6304:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6294:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6294:6:6"
																},
																"nativeSrc": "6294:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6294:15:6"
															},
															"nativeSrc": "6294:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6294:15:6"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "6188:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6188:127:6"
											},
											{
												"body": {
													"nativeSrc": "6352:95:6",
													"nodeType": "YulBlock",
													"src": "6352:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6369:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6369:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6376:3:6",
																				"nodeType": "YulLiteral",
																				"src": "6376:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6381:10:6",
																				"nodeType": "YulLiteral",
																				"src": "6381:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6372:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6372:3:6"
																		},
																		"nativeSrc": "6372:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6372:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6362:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6362:6:6"
																},
																"nativeSrc": "6362:31:6",
																"nodeType": "YulFunctionCall",
																"src": "6362:31:6"
															},
															"nativeSrc": "6362:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "6362:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6409:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6409:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6412:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6412:4:6",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6402:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6402:6:6"
																},
																"nativeSrc": "6402:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6402:15:6"
															},
															"nativeSrc": "6402:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6402:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6433:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6433:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6436:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6436:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6426:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6426:6:6"
																},
																"nativeSrc": "6426:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6426:15:6"
															},
															"nativeSrc": "6426:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6426:15:6"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "6320:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6320:127:6"
											},
											{
												"body": {
													"nativeSrc": "6504:116:6",
													"nodeType": "YulBlock",
													"src": "6504:116:6",
													"statements": [
														{
															"nativeSrc": "6514:20:6",
															"nodeType": "YulAssignment",
															"src": "6514:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6529:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6529:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6532:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6532:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6525:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6525:3:6"
																},
																"nativeSrc": "6525:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6525:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6514:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "6514:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6592:22:6",
																"nodeType": "YulBlock",
																"src": "6592:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6594:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6594:16:6"
																			},
																			"nativeSrc": "6594:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6594:18:6"
																		},
																		"nativeSrc": "6594:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6594:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6563:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6563:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6556:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6556:6:6"
																				},
																				"nativeSrc": "6556:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6556:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6570:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6570:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6577:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "6577:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6586:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "6586:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6573:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6573:3:6"
																						},
																						"nativeSrc": "6573:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6573:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6567:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "6567:2:6"
																				},
																				"nativeSrc": "6567:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6567:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6553:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6553:2:6"
																		},
																		"nativeSrc": "6553:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6553:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6546:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6546:6:6"
																},
																"nativeSrc": "6546:45:6",
																"nodeType": "YulFunctionCall",
																"src": "6546:45:6"
															},
															"nativeSrc": "6543:71:6",
															"nodeType": "YulIf",
															"src": "6543:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6452:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6483:1:6",
														"nodeType": "YulTypedName",
														"src": "6483:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6486:1:6",
														"nodeType": "YulTypedName",
														"src": "6486:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6492:7:6",
														"nodeType": "YulTypedName",
														"src": "6492:7:6",
														"type": ""
													}
												],
												"src": "6452:168:6"
											},
											{
												"body": {
													"nativeSrc": "6782:188:6",
													"nodeType": "YulBlock",
													"src": "6782:188:6",
													"statements": [
														{
															"nativeSrc": "6792:26:6",
															"nodeType": "YulAssignment",
															"src": "6792:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6804:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6804:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6815:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6815:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6800:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6800:3:6"
																},
																"nativeSrc": "6800:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6800:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6792:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6792:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6834:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6834:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6849:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6849:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6865:3:6",
																								"nodeType": "YulLiteral",
																								"src": "6865:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6870:1:6",
																								"nodeType": "YulLiteral",
																								"src": "6870:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6861:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6861:3:6"
																						},
																						"nativeSrc": "6861:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6861:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6874:1:6",
																						"nodeType": "YulLiteral",
																						"src": "6874:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6857:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6857:3:6"
																				},
																				"nativeSrc": "6857:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6857:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6845:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6845:3:6"
																		},
																		"nativeSrc": "6845:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6845:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6827:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6827:6:6"
																},
																"nativeSrc": "6827:51:6",
																"nodeType": "YulFunctionCall",
																"src": "6827:51:6"
															},
															"nativeSrc": "6827:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "6827:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6898:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6898:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6909:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6909:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6894:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6894:3:6"
																		},
																		"nativeSrc": "6894:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6894:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6914:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6914:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6887:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6887:6:6"
																},
																"nativeSrc": "6887:34:6",
																"nodeType": "YulFunctionCall",
																"src": "6887:34:6"
															},
															"nativeSrc": "6887:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "6887:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6941:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6941:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6952:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6952:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6937:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6937:3:6"
																		},
																		"nativeSrc": "6937:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6937:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6957:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6957:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6930:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6930:6:6"
																},
																"nativeSrc": "6930:34:6",
																"nodeType": "YulFunctionCall",
																"src": "6930:34:6"
															},
															"nativeSrc": "6930:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "6930:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6625:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6735:9:6",
														"nodeType": "YulTypedName",
														"src": "6735:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6746:6:6",
														"nodeType": "YulTypedName",
														"src": "6746:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6754:6:6",
														"nodeType": "YulTypedName",
														"src": "6754:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6762:6:6",
														"nodeType": "YulTypedName",
														"src": "6762:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6773:4:6",
														"nodeType": "YulTypedName",
														"src": "6773:4:6",
														"type": ""
													}
												],
												"src": "6625:345:6"
											},
											{
												"body": {
													"nativeSrc": "7149:173:6",
													"nodeType": "YulBlock",
													"src": "7149:173:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7166:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7166:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7177:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7177:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7159:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:6"
																},
																"nativeSrc": "7159:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7159:21:6"
															},
															"nativeSrc": "7159:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7159:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7200:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7200:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7211:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7211:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7196:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7196:3:6"
																		},
																		"nativeSrc": "7196:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7196:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7216:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7216:2:6",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7189:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7189:6:6"
																},
																"nativeSrc": "7189:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7189:30:6"
															},
															"nativeSrc": "7189:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7189:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7239:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7239:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7250:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7250:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7235:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7235:3:6"
																		},
																		"nativeSrc": "7235:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7235:18:6"
																	},
																	{
																		"hexValue": "54726164696e67206e6f742079657420656e61626c6564",
																		"kind": "string",
																		"nativeSrc": "7255:25:6",
																		"nodeType": "YulLiteral",
																		"src": "7255:25:6",
																		"type": "",
																		"value": "Trading not yet enabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7228:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7228:6:6"
																},
																"nativeSrc": "7228:53:6",
																"nodeType": "YulFunctionCall",
																"src": "7228:53:6"
															},
															"nativeSrc": "7228:53:6",
															"nodeType": "YulExpressionStatement",
															"src": "7228:53:6"
														},
														{
															"nativeSrc": "7290:26:6",
															"nodeType": "YulAssignment",
															"src": "7290:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7302:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7302:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7313:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7313:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7298:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7298:3:6"
																},
																"nativeSrc": "7298:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7298:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7290:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7290:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e5bba2366766584da2131202babfffd26ff440a4e29b0b132c9866fb7e5cd5d3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6975:347:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7126:9:6",
														"nodeType": "YulTypedName",
														"src": "7126:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7140:4:6",
														"nodeType": "YulTypedName",
														"src": "7140:4:6",
														"type": ""
													}
												],
												"src": "6975:347:6"
											},
											{
												"body": {
													"nativeSrc": "7501:224:6",
													"nodeType": "YulBlock",
													"src": "7501:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7518:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7518:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7529:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7529:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7511:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7511:6:6"
																},
																"nativeSrc": "7511:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7511:21:6"
															},
															"nativeSrc": "7511:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7511:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7552:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7552:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7563:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7563:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7548:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7548:3:6"
																		},
																		"nativeSrc": "7548:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7548:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7568:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7568:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7541:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7541:6:6"
																},
																"nativeSrc": "7541:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7541:30:6"
															},
															"nativeSrc": "7541:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7541:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7591:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7591:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7602:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7602:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7587:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7587:3:6"
																		},
																		"nativeSrc": "7587:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7587:18:6"
																	},
																	{
																		"hexValue": "4c61756e63682070726f74656374696f6e3a206e6f742077686974656c697374",
																		"kind": "string",
																		"nativeSrc": "7607:34:6",
																		"nodeType": "YulLiteral",
																		"src": "7607:34:6",
																		"type": "",
																		"value": "Launch protection: not whitelist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7580:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7580:6:6"
																},
																"nativeSrc": "7580:62:6",
																"nodeType": "YulFunctionCall",
																"src": "7580:62:6"
															},
															"nativeSrc": "7580:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "7580:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7662:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7662:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7673:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7673:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7658:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7658:3:6"
																		},
																		"nativeSrc": "7658:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7658:18:6"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nativeSrc": "7678:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7678:4:6",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7651:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7651:6:6"
																},
																"nativeSrc": "7651:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7651:32:6"
															},
															"nativeSrc": "7651:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "7651:32:6"
														},
														{
															"nativeSrc": "7692:27:6",
															"nodeType": "YulAssignment",
															"src": "7692:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7704:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7704:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7715:3:6",
																		"nodeType": "YulLiteral",
																		"src": "7715:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7700:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7700:3:6"
																},
																"nativeSrc": "7700:19:6",
																"nodeType": "YulFunctionCall",
																"src": "7700:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7692:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7692:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_543833c2a7234931e588d3a22e1a6ee61feec11e0267fb9d55ed0dd8a807ca27__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7327:398:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7478:9:6",
														"nodeType": "YulTypedName",
														"src": "7478:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7492:4:6",
														"nodeType": "YulTypedName",
														"src": "7492:4:6",
														"type": ""
													}
												],
												"src": "7327:398:6"
											},
											{
												"body": {
													"nativeSrc": "7904:227:6",
													"nodeType": "YulBlock",
													"src": "7904:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7921:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7921:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7932:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7914:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7914:6:6"
																},
																"nativeSrc": "7914:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7914:21:6"
															},
															"nativeSrc": "7914:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7914:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7955:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7955:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7966:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7966:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:6"
																		},
																		"nativeSrc": "7951:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7971:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7971:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7944:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7944:6:6"
																},
																"nativeSrc": "7944:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7944:30:6"
															},
															"nativeSrc": "7944:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7944:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7994:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7994:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8005:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8005:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7990:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7990:3:6"
																		},
																		"nativeSrc": "7990:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7990:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "8010:34:6",
																		"nodeType": "YulLiteral",
																		"src": "8010:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7983:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7983:6:6"
																},
																"nativeSrc": "7983:62:6",
																"nodeType": "YulFunctionCall",
																"src": "7983:62:6"
															},
															"nativeSrc": "7983:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "7983:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8065:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8065:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8076:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8076:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8061:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8061:3:6"
																		},
																		"nativeSrc": "8061:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8061:18:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "8081:7:6",
																		"nodeType": "YulLiteral",
																		"src": "8081:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8054:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8054:6:6"
																},
																"nativeSrc": "8054:35:6",
																"nodeType": "YulFunctionCall",
																"src": "8054:35:6"
															},
															"nativeSrc": "8054:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "8054:35:6"
														},
														{
															"nativeSrc": "8098:27:6",
															"nodeType": "YulAssignment",
															"src": "8098:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8110:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8110:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8121:3:6",
																		"nodeType": "YulLiteral",
																		"src": "8121:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8106:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8106:3:6"
																},
																"nativeSrc": "8106:19:6",
																"nodeType": "YulFunctionCall",
																"src": "8106:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8098:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8098:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7730:401:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7881:9:6",
														"nodeType": "YulTypedName",
														"src": "7881:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7895:4:6",
														"nodeType": "YulTypedName",
														"src": "7895:4:6",
														"type": ""
													}
												],
												"src": "7730:401:6"
											},
											{
												"body": {
													"nativeSrc": "8310:225:6",
													"nodeType": "YulBlock",
													"src": "8310:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8327:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8327:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8338:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8338:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8320:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8320:6:6"
																},
																"nativeSrc": "8320:21:6",
																"nodeType": "YulFunctionCall",
																"src": "8320:21:6"
															},
															"nativeSrc": "8320:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "8320:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8361:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8361:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8372:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8372:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8357:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8357:3:6"
																		},
																		"nativeSrc": "8357:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8357:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8377:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8377:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8350:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8350:6:6"
																},
																"nativeSrc": "8350:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8350:30:6"
															},
															"nativeSrc": "8350:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "8350:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8400:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8400:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8411:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8411:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8396:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8396:3:6"
																		},
																		"nativeSrc": "8396:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8396:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "8416:34:6",
																		"nodeType": "YulLiteral",
																		"src": "8416:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8389:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8389:6:6"
																},
																"nativeSrc": "8389:62:6",
																"nodeType": "YulFunctionCall",
																"src": "8389:62:6"
															},
															"nativeSrc": "8389:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "8389:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8471:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8471:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8482:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8482:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8467:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8467:3:6"
																		},
																		"nativeSrc": "8467:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8467:18:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "8487:5:6",
																		"nodeType": "YulLiteral",
																		"src": "8487:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8460:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8460:6:6"
																},
																"nativeSrc": "8460:33:6",
																"nodeType": "YulFunctionCall",
																"src": "8460:33:6"
															},
															"nativeSrc": "8460:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "8460:33:6"
														},
														{
															"nativeSrc": "8502:27:6",
															"nodeType": "YulAssignment",
															"src": "8502:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8514:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8514:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8525:3:6",
																		"nodeType": "YulLiteral",
																		"src": "8525:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8510:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8510:3:6"
																},
																"nativeSrc": "8510:19:6",
																"nodeType": "YulFunctionCall",
																"src": "8510:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8502:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8502:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8136:399:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8287:9:6",
														"nodeType": "YulTypedName",
														"src": "8287:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8301:4:6",
														"nodeType": "YulTypedName",
														"src": "8301:4:6",
														"type": ""
													}
												],
												"src": "8136:399:6"
											},
											{
												"body": {
													"nativeSrc": "8714:228:6",
													"nodeType": "YulBlock",
													"src": "8714:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8731:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8731:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8742:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8742:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8724:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8724:6:6"
																},
																"nativeSrc": "8724:21:6",
																"nodeType": "YulFunctionCall",
																"src": "8724:21:6"
															},
															"nativeSrc": "8724:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "8724:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8765:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8765:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8776:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8776:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8761:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8761:3:6"
																		},
																		"nativeSrc": "8761:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8761:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8781:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8781:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8754:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8754:6:6"
																},
																"nativeSrc": "8754:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8754:30:6"
															},
															"nativeSrc": "8754:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "8754:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8804:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8804:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8815:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8815:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8800:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8800:3:6"
																		},
																		"nativeSrc": "8800:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8800:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "8820:34:6",
																		"nodeType": "YulLiteral",
																		"src": "8820:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8793:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8793:6:6"
																},
																"nativeSrc": "8793:62:6",
																"nodeType": "YulFunctionCall",
																"src": "8793:62:6"
															},
															"nativeSrc": "8793:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "8793:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8875:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8875:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8886:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8886:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8871:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8871:3:6"
																		},
																		"nativeSrc": "8871:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8871:18:6"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "8891:8:6",
																		"nodeType": "YulLiteral",
																		"src": "8891:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8864:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8864:6:6"
																},
																"nativeSrc": "8864:36:6",
																"nodeType": "YulFunctionCall",
																"src": "8864:36:6"
															},
															"nativeSrc": "8864:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "8864:36:6"
														},
														{
															"nativeSrc": "8909:27:6",
															"nodeType": "YulAssignment",
															"src": "8909:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8921:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8921:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8932:3:6",
																		"nodeType": "YulLiteral",
																		"src": "8932:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8917:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8917:3:6"
																},
																"nativeSrc": "8917:19:6",
																"nodeType": "YulFunctionCall",
																"src": "8917:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8909:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8909:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8540:402:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8691:9:6",
														"nodeType": "YulTypedName",
														"src": "8691:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8705:4:6",
														"nodeType": "YulTypedName",
														"src": "8705:4:6",
														"type": ""
													}
												],
												"src": "8540:402:6"
											},
											{
												"body": {
													"nativeSrc": "9121:166:6",
													"nodeType": "YulBlock",
													"src": "9121:166:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9138:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9138:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9149:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9149:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9131:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9131:6:6"
																},
																"nativeSrc": "9131:21:6",
																"nodeType": "YulFunctionCall",
																"src": "9131:21:6"
															},
															"nativeSrc": "9131:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "9131:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9172:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9172:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9183:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9183:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9168:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9168:3:6"
																		},
																		"nativeSrc": "9168:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9168:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9188:2:6",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9161:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9161:6:6"
																},
																"nativeSrc": "9161:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9161:30:6"
															},
															"nativeSrc": "9161:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "9161:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9211:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9211:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9222:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9222:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9207:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9207:3:6"
																		},
																		"nativeSrc": "9207:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9207:18:6"
																	},
																	{
																		"hexValue": "5768616c652064657465637465642121",
																		"kind": "string",
																		"nativeSrc": "9227:18:6",
																		"nodeType": "YulLiteral",
																		"src": "9227:18:6",
																		"type": "",
																		"value": "Whale detected!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9200:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9200:6:6"
																},
																"nativeSrc": "9200:46:6",
																"nodeType": "YulFunctionCall",
																"src": "9200:46:6"
															},
															"nativeSrc": "9200:46:6",
															"nodeType": "YulExpressionStatement",
															"src": "9200:46:6"
														},
														{
															"nativeSrc": "9255:26:6",
															"nodeType": "YulAssignment",
															"src": "9255:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9267:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9267:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9278:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9278:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9263:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9263:3:6"
																},
																"nativeSrc": "9263:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9263:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9255:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9255:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72cc28bfc68dcd6bff959b08390cdfb73a6c41c525dcd3929d90d896ff51c27d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8947:340:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9098:9:6",
														"nodeType": "YulTypedName",
														"src": "9098:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9112:4:6",
														"nodeType": "YulTypedName",
														"src": "9112:4:6",
														"type": ""
													}
												],
												"src": "8947:340:6"
											},
											{
												"body": {
													"nativeSrc": "9466:232:6",
													"nodeType": "YulBlock",
													"src": "9466:232:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9483:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9483:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9494:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9494:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9476:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9476:6:6"
																},
																"nativeSrc": "9476:21:6",
																"nodeType": "YulFunctionCall",
																"src": "9476:21:6"
															},
															"nativeSrc": "9476:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "9476:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9517:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9517:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9528:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9528:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9513:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9513:3:6"
																		},
																		"nativeSrc": "9513:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9513:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9533:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9533:2:6",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9506:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9506:6:6"
																},
																"nativeSrc": "9506:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9506:30:6"
															},
															"nativeSrc": "9506:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "9506:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9556:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9556:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9567:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9567:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9552:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9552:3:6"
																		},
																		"nativeSrc": "9552:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9552:18:6"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265206c657373207468616e20746f74616c2072",
																		"kind": "string",
																		"nativeSrc": "9572:34:6",
																		"nodeType": "YulLiteral",
																		"src": "9572:34:6",
																		"type": "",
																		"value": "Amount must be less than total r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9545:6:6"
																},
																"nativeSrc": "9545:62:6",
																"nodeType": "YulFunctionCall",
																"src": "9545:62:6"
															},
															"nativeSrc": "9545:62:6",
															"nodeType": "YulExpressionStatement",
															"src": "9545:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9627:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9627:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9638:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9638:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9623:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9623:3:6"
																		},
																		"nativeSrc": "9623:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9623:18:6"
																	},
																	{
																		"hexValue": "65666c656374696f6e73",
																		"kind": "string",
																		"nativeSrc": "9643:12:6",
																		"nodeType": "YulLiteral",
																		"src": "9643:12:6",
																		"type": "",
																		"value": "eflections"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9616:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9616:6:6"
																},
																"nativeSrc": "9616:40:6",
																"nodeType": "YulFunctionCall",
																"src": "9616:40:6"
															},
															"nativeSrc": "9616:40:6",
															"nodeType": "YulExpressionStatement",
															"src": "9616:40:6"
														},
														{
															"nativeSrc": "9665:27:6",
															"nodeType": "YulAssignment",
															"src": "9665:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9677:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9677:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9688:3:6",
																		"nodeType": "YulLiteral",
																		"src": "9688:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9673:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9673:3:6"
																},
																"nativeSrc": "9673:19:6",
																"nodeType": "YulFunctionCall",
																"src": "9673:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9665:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9665:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9292:406:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9443:9:6",
														"nodeType": "YulTypedName",
														"src": "9443:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9457:4:6",
														"nodeType": "YulTypedName",
														"src": "9457:4:6",
														"type": ""
													}
												],
												"src": "9292:406:6"
											},
											{
												"body": {
													"nativeSrc": "9749:171:6",
													"nodeType": "YulBlock",
													"src": "9749:171:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "9780:111:6",
																"nodeType": "YulBlock",
																"src": "9780:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9801:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9801:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9808:3:6",
																							"nodeType": "YulLiteral",
																							"src": "9808:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9813:10:6",
																							"nodeType": "YulLiteral",
																							"src": "9813:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "9804:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "9804:3:6"
																					},
																					"nativeSrc": "9804:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9804:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9794:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9794:6:6"
																			},
																			"nativeSrc": "9794:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9794:31:6"
																		},
																		"nativeSrc": "9794:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9794:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9845:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9845:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9848:4:6",
																					"nodeType": "YulLiteral",
																					"src": "9848:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9838:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9838:6:6"
																			},
																			"nativeSrc": "9838:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9838:15:6"
																		},
																		"nativeSrc": "9838:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9838:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9873:1:6",
																					"nodeType": "YulLiteral",
																					"src": "9873:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9876:4:6",
																					"nodeType": "YulLiteral",
																					"src": "9876:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9866:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9866:6:6"
																			},
																			"nativeSrc": "9866:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9866:15:6"
																		},
																		"nativeSrc": "9866:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9866:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9769:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9769:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9762:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9762:6:6"
																},
																"nativeSrc": "9762:9:6",
																"nodeType": "YulFunctionCall",
																"src": "9762:9:6"
															},
															"nativeSrc": "9759:132:6",
															"nodeType": "YulIf",
															"src": "9759:132:6"
														},
														{
															"nativeSrc": "9900:14:6",
															"nodeType": "YulAssignment",
															"src": "9900:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9909:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9909:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9912:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9912:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9905:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9905:3:6"
																},
																"nativeSrc": "9905:9:6",
																"nodeType": "YulFunctionCall",
																"src": "9905:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9900:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9900:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9703:217:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9734:1:6",
														"nodeType": "YulTypedName",
														"src": "9734:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9737:1:6",
														"nodeType": "YulTypedName",
														"src": "9737:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9743:1:6",
														"nodeType": "YulTypedName",
														"src": "9743:1:6",
														"type": ""
													}
												],
												"src": "9703:217:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Excluded addresses cannot call t\")\n        mstore(add(headStart, 96), \"his function\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Amount must be less than supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Account is already excluded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f46c49ce218356b2edd982ef62c8e9487aefa42aa99cd4113ff0084c01552854__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"zero address can not be the FeeA\")\n        mstore(add(headStart, 96), \"ccount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8aec14595104da5ab7d605fcd41f2ffdd252bbd2899a5204d414bd9202d79ddc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Address is already whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_576d474a317be5ec9e893ed65484812cc21983357d333143b1b7e67d92963e14__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Account is already included\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_e5bba2366766584da2131202babfffd26ff440a4e29b0b132c9866fb7e5cd5d3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Trading not yet enabled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_543833c2a7234931e588d3a22e1a6ee61feec11e0267fb9d55ed0dd8a807ca27__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Launch protection: not whitelist\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_72cc28bfc68dcd6bff959b08390cdfb73a6c41c525dcd3929d90d896ff51c27d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Whale detected!!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Amount must be less than total r\")\n        mstore(add(headStart, 96), \"eflections\")\n        tail := add(headStart, 128)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101de575f3560e01c8063838fcc90116100fd578063c486377011610092578063dd62ed3e11610062578063dd62ed3e1461059f578063f66608fe146105e3578063fdeb889f146105f7578063ffb54a9914610616575f5ffd5b8063c486377014610520578063c9567bf91461053f578063cba0e99614610553578063d00efb2f1461058a575f5ffd5b806395d89b41116100cd57806395d89b41146104af578063a8b08982146104c3578063a9059cbb146104e2578063c30796ab14610501575f5ffd5b8063838fcc901461043d57806383ad79941461045a5780638873b15f1461046e5780638da5cb5b1461048d575f5ffd5b80633af32abf116101735780635fae0576116101435780635fae0576146103a95780636049876e146103e0578063706407fd146103ff57806370a082311461041e575f5ffd5b80633af32abf14610306578063437823ec146103345780634549b039146103535780635342acb414610372575f5ffd5b80631cf8fef5116101ae5780631cf8fef51461028157806323b872dd146102b2578063313ce567146102d157806332035504146102f2575f5ffd5b8063053ab182146101e957806306fdde031461020a578063095ea7b31461023457806318160ddd14610263575f5ffd5b366101e557005b5f5ffd5b3480156101f4575f5ffd5b50610208610203366004611a72565b61062f565b005b348015610215575f5ffd5b5061021e61071a565b60405161022b9190611a89565b60405180910390f35b34801561023f575f5ffd5b5061025361024e366004611ad9565b6107aa565b604051901515815260200161022b565b34801561026e575f5ffd5b50600c545b60405190815260200161022b565b34801561028c575f5ffd5b506014546001600160a01b03165b6040516001600160a01b03909116815260200161022b565b3480156102bd575f5ffd5b506102536102cc366004611b01565b6107c3565b3480156102dc575f5ffd5b50600b5460405160ff909116815260200161022b565b3480156102fd575f5ffd5b50600e54610273565b348015610311575f5ffd5b50610253610320366004611b3b565b60086020525f908152604090205460ff1681565b34801561033f575f5ffd5b5061020861034e366004611b3b565b6107e6565b34801561035e575f5ffd5b5061027361036d366004611b54565b61082d565b34801561037d575f5ffd5b5061025361038c366004611b3b565b6001600160a01b03165f9081526007602052604090205460ff1690565b3480156103b4575f5ffd5b506102536103c3366004611b3b565b6001600160a01b03165f9081526008602052604090205460ff1690565b3480156103eb575f5ffd5b506102086103fa366004611b3b565b6108b3565b34801561040a575f5ffd5b50610208610419366004611b3b565b6109f8565b348015610429575f5ffd5b50610273610438366004611b3b565b610a5f565b348015610448575f5ffd5b506013546001600160a01b031661029a565b348015610465575f5ffd5b50600f54610273565b348015610479575f5ffd5b50610208610488366004611b3b565b610abb565b348015610498575f5ffd5b50600b5461010090046001600160a01b031661029a565b3480156104ba575f5ffd5b5061021e610afc565b3480156104ce575f5ffd5b5060155461029a906001600160a01b031681565b3480156104ed575f5ffd5b506102536104fc366004611ad9565b610b0b565b34801561050c575f5ffd5b5061020861051b366004611b3b565b610b18565b34801561052b575f5ffd5b5061020861053a366004611b3b565b610bc6565b34801561054a575f5ffd5b50610208610c2d565b34801561055e575f5ffd5b5061025361056d366004611b3b565b6001600160a01b03165f9081526009602052604090205460ff1690565b348015610595575f5ffd5b5061027360175481565b3480156105aa575f5ffd5b506102736105b9366004611b86565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b3480156105ee575f5ffd5b50601154610273565b348015610602575f5ffd5b50610208610611366004611b3b565b610c62565b348015610621575f5ffd5b506018546102539060ff1681565b335f8181526009602052604090205460ff16156106a85760405162461bcd60e51b815260206004820152602c60248201527f4578636c75646564206164647265737365732063616e6e6f742063616c6c207460448201526b3434b990333ab731ba34b7b760a11b60648201526084015b60405180910390fd5b5f6106b283610dfe565b5050506001600160a01b0383165f908152600560205260409020549091506106db908290611bcb565b6001600160a01b0383165f90815260056020526040902055600d54610701908290611bcb565b600d55600e54610712908490611bde565b600e55505050565b60606003805461072990611bf1565b80601f016020809104026020016040519081016040528092919081815260200182805461075590611bf1565b80156107a05780601f10610777576101008083540402835291602001916107a0565b820191905f5260205f20905b81548152906001019060200180831161078357829003601f168201915b5050505050905090565b5f336107b7818585610e4f565b60019150505b92915050565b5f336107d0858285610e61565b6107db858585610edd565b506001949350505050565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b0381165f908152600760205260409020805460ff191660011790555b50565b5f600c548311156108805760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e74206d757374206265206c657373207468616e20737570706c7900604482015260640161069f565b8161089c575f61088f84610dfe565b509193506107bd92505050565b5f6108a684610dfe565b509093506107bd92505050565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b0381165f9081526009602052604090205460ff161561093c5760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c7265616479206578636c756465640000000000604482015260640161069f565b6001600160a01b0381165f9081526005602052604090205415610993576001600160a01b0381165f9081526005602052604090205461097a906111ce565b6001600160a01b0382165f908152600660205260409020555b6001600160a01b03165f818152600960205260408120805460ff19166001908117909155600a805491820181559091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b0319169091179055565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b038116610a3f5760405162461bcd60e51b815260040161069f90611c29565b601480546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b0381165f9081526009602052604081205460ff1615610a9a57506001600160a01b03165f9081526006602052604090205490565b6001600160a01b0382165f908152600560205260409020546107bd906111ce565b600b54339061010090046001600160a01b03166001600160a01b03160361082a57601580546001600160a01b0383166001600160a01b031990911617905550565b60606004805461072990611bf1565b5f336107b7818585610edd565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b0381165f9081526008602052604090205460ff1615610ba15760405162461bcd60e51b815260206004820152601e60248201527f4164647265737320697320616c72656164792077686974656c69737465640000604482015260640161069f565b6001600160a01b0381165f908152600860205260409020805460ff1916600117905550565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b038116610c0d5760405162461bcd60e51b815260040161069f90611c29565b601380546001600160a01b0383166001600160a01b031990911617905550565b600b54339061010090046001600160a01b03166001600160a01b031603610c60576018805460ff19166001179055436017555b565b600b54339061010090046001600160a01b03166001600160a01b03160361082a576001600160a01b0381165f9081526009602052604090205460ff16610cea5760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c726561647920696e636c756465640000000000604482015260640161069f565b5f5b600a54811015610dfa57816001600160a01b0316600a8281548110610d1357610d13611c6f565b5f918252602090912001546001600160a01b031603610df257600a8054610d3c90600190611bcb565b81548110610d4c57610d4c611c6f565b5f91825260209091200154600a80546001600160a01b039092169183908110610d7757610d77611c6f565b5f91825260208083209190910180546001600160a01b0319166001600160a01b039485161790559184168152600682526040808220829055600990925220805460ff19169055600a805480610dce57610dce611c83565b5f8281526020902081015f1990810180546001600160a01b03191690550190555050565b600101610cec565b5050565b5f5f5f5f5f610e0c86611250565b90505f610e198288611bcb565b90505f610e24611283565b90505f610e318284611c97565b90505f610e3e838b611c97565b9a9199509297509095509350505050565b610e5c83838360016112a4565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610ed75781811015610ec957604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161069f565b610ed784848484035f6112a4565b50505050565b6018548390839060ff16610f57576001600160a01b0381165f9081526008602052604090205460ff16610f525760405162461bcd60e51b815260206004820152601760248201527f54726164696e67206e6f742079657420656e61626c6564000000000000000000604482015260640161069f565b610fdd565b601754610f65906003611bde565b4311610fdd576001600160a01b0381165f9081526008602052604090205460ff16610fdd5760405162461bcd60e51b815260206004820152602260248201527f4c61756e63682070726f74656374696f6e3a206e6f742077686974656c697374604482015261195960f21b606482015260840161069f565b6001600160a01b0385166110415760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161069f565b6001600160a01b0384166110a35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161069f565b5f6110ad86610a5f565b90508381101561110e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161069f565b6001600160a01b0385165f9081526007602052604090205460ff16611185576016548461113a87610a5f565b6111449190611bde565b11156111855760405162461bcd60e51b815260206004820152601060248201526f5768616c65206465746563746564212160801b604482015260640161069f565b6015545f906001600160a01b03888116911614806111b057506015546001600160a01b038781169116145b156111b9575060015b6111c587878784611376565b50505050505050565b5f600d548211156112345760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b606482015260840161069f565b5f61123d611283565b90506112498184611cae565b9392505050565b5f5f601154600f546112629190611bde565b90505f60646112718386611c97565b61127b9190611cae565b949350505050565b5f5f5f61128e6114e5565b909250905061129d8183611cae565b9250505090565b6001600160a01b0384166112cd5760405163e602df0560e01b81525f600482015260240161069f565b6001600160a01b0383166112f657604051634a1406b160e11b81525f600482015260240161069f565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610ed757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161136891815260200190565b60405180910390a350505050565b8061138357611383611655565b6001600160a01b0384165f9081526009602052604090205460ff1680156113c257506001600160a01b0383165f9081526009602052604090205460ff16155b156113d7576113d2848484611682565b6114cf565b6001600160a01b0384165f9081526009602052604090205460ff1615801561141657506001600160a01b0383165f9081526009602052604090205460ff165b15611426576113d284848461179d565b6001600160a01b0384165f9081526009602052604090205460ff1615801561146657506001600160a01b0383165f9081526009602052604090205460ff16155b15611476576113d284848461183c565b6001600160a01b0384165f9081526009602052604090205460ff1680156114b457506001600160a01b0383165f9081526009602052604090205460ff165b156114c4576113d2848484611876565b6114cf84848461183c565b80610ed757610ed7601054600f55601254601155565b600d54600c545f918291825b600a54811015611624578260055f600a848154811061151257611512611c6f565b5f9182526020808320909101546001600160a01b03168352820192909252604001902054118061157a57508160065f600a848154811061155457611554611c6f565b5f9182526020808320909101546001600160a01b03168352820192909252604001902054115b1561159057600d54600c54945094505050509091565b60055f600a83815481106115a6576115a6611c6f565b5f9182526020808320909101546001600160a01b031683528201929092526040019020546115d49084611bcb565b925060065f600a83815481106115ec576115ec611c6f565b5f9182526020808320909101546001600160a01b0316835282019290925260400190205461161a9083611bcb565b91506001016114f1565b50600c54600d546116359190611cae565b82101561164c57600d54600c549350935050509091565b90939092509050565b600f541580156116655750601154155b1561166c57565b600f8054601055601180546012555f9182905555565b5f5f5f5f61168f85610dfe565b6001600160a01b038b165f90815260066020526040902054939750919550935091506116bc908690611bcb565b6001600160a01b0388165f908152600660209081526040808320939093556005905220546116eb908590611bcb565b6001600160a01b038089165f90815260056020526040808220939093559088168152205461171a908490611bde565b6001600160a01b0387165f9081526005602052604090205561173d8786836118df565b6117478582611a20565b856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161178c91815260200190565b60405180910390a350505050505050565b5f5f5f5f6117aa85610dfe565b6001600160a01b038b165f90815260056020526040902054939750919550935091506117d7908590611bcb565b6001600160a01b038089165f9081526005602090815260408083209490945591891681526006909152205461180d908390611bde565b6001600160a01b0387165f9081526006602090815260408083209390935560059052205461171a908490611bde565b5f5f5f5f61184985610dfe565b6001600160a01b038b165f90815260056020526040902054939750919550935091506116eb908590611bcb565b5f5f5f5f61188385610dfe565b6001600160a01b038b165f90815260066020526040902054939750919550935091506118b0908690611bcb565b6001600160a01b0388165f908152600660209081526040808320939093556005905220546117d7908590611bcb565b5f6064601154846118f09190611c97565b6118fa9190611cae565b90508015610ed7575f600261190f8484611c97565b6119199190611cae565b6013546001600160a01b03165f90815260056020526040902054909150611941908290611bde565b6013546001600160a01b039081165f908152600560205260408082209390935560145490911681522054611976908290611bde565b6014546001600160a01b039081165f9081526005602090815260409182902093909355601354905185815290821692918816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36014546040518381526001600160a01b03918216918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050505050565b5f6064600f5484611a319190611c97565b611a3b9190611cae565b90505f611a488383611c97565b905080600d54611a589190611bcb565b600d55600e54611a69908390611bde565b600e5550505050565b5f60208284031215611a82575f5ffd5b5035919050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114611ad4575f5ffd5b919050565b5f5f60408385031215611aea575f5ffd5b611af383611abe565b946020939093013593505050565b5f5f5f60608486031215611b13575f5ffd5b611b1c84611abe565b9250611b2a60208501611abe565b929592945050506040919091013590565b5f60208284031215611b4b575f5ffd5b61124982611abe565b5f5f60408385031215611b65575f5ffd5b8235915060208301358015158114611b7b575f5ffd5b809150509250929050565b5f5f60408385031215611b97575f5ffd5b611ba083611abe565b9150611bae60208401611abe565b90509250929050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156107bd576107bd611bb7565b808201808211156107bd576107bd611bb7565b600181811c90821680611c0557607f821691505b602082108103611c2357634e487b7160e01b5f52602260045260245ffd5b50919050565b60208082526026908201527f7a65726f20616464726573732063616e206e6f7420626520746865204665654160408201526518d8dbdd5b9d60d21b606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52603160045260245ffd5b80820281158282048414176107bd576107bd611bb7565b5f82611cc857634e487b7160e01b5f52601260045260245ffd5b50049056fea26469706673582212207bb390c0fe449a171cfc6aba242f295677db9e2a72560f4731b0f5aebd363d1064736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x838FCC90 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0xC4863770 GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x59F JUMPI DUP1 PUSH4 0xF66608FE EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0xFDEB889F EQ PUSH2 0x5F7 JUMPI DUP1 PUSH4 0xFFB54A99 EQ PUSH2 0x616 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xC4863770 EQ PUSH2 0x520 JUMPI DUP1 PUSH4 0xC9567BF9 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0xCBA0E996 EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0xD00EFB2F EQ PUSH2 0x58A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xA8B08982 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0xC30796AB EQ PUSH2 0x501 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x838FCC90 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0x83AD7994 EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x8873B15F EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x48D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x3AF32ABF GT PUSH2 0x173 JUMPI DUP1 PUSH4 0x5FAE0576 GT PUSH2 0x143 JUMPI DUP1 PUSH4 0x5FAE0576 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x6049876E EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x706407FD EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x41E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x4549B039 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x5342ACB4 EQ PUSH2 0x372 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1CF8FEF5 GT PUSH2 0x1AE JUMPI DUP1 PUSH4 0x1CF8FEF5 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x32035504 EQ PUSH2 0x2F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x53AB182 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x263 JUMPI PUSH0 PUSH0 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1E5 JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A72 JUMP JUMPDEST PUSH2 0x62F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD9 JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xC SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1B01 JUMP JUMPDEST PUSH2 0x7C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x273 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x320 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x34E CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x7E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x273 PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B54 JUMP JUMPDEST PUSH2 0x82D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x3C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x3FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x9F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x273 PUSH2 0x438 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0xA5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x465 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x273 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0xABB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x498 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21E PUSH2 0xAFC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x15 SLOAD PUSH2 0x29A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x4FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD9 JUMP JUMPDEST PUSH2 0xB0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x51B CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x53A CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0xBC6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0xC2D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x56D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x273 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x273 PUSH2 0x5B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x273 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x602 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x611 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0xC62 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x18 SLOAD PUSH2 0x253 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4578636C75646564206164647265737365732063616E6E6F742063616C6C2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x3434B990333AB731BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x6B2 DUP4 PUSH2 0xDFE JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x6DB SWAP1 DUP3 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xD SLOAD PUSH2 0x701 SWAP1 DUP3 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0xE SLOAD PUSH2 0x712 SWAP1 DUP5 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0xE SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x729 SWAP1 PUSH2 0x1BF1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x755 SWAP1 PUSH2 0x1BF1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7A0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x777 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7A0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x783 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7B7 DUP2 DUP6 DUP6 PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7D0 DUP6 DUP3 DUP6 PUSH2 0xE61 JUMP JUMPDEST PUSH2 0x7DB DUP6 DUP6 DUP6 PUSH2 0xEDD JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0xC SLOAD DUP4 GT ISZERO PUSH2 0x880 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20737570706C7900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST DUP2 PUSH2 0x89C JUMPI PUSH0 PUSH2 0x88F DUP5 PUSH2 0xDFE JUMP JUMPDEST POP SWAP2 SWAP4 POP PUSH2 0x7BD SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8A6 DUP5 PUSH2 0xDFE JUMP JUMPDEST POP SWAP1 SWAP4 POP PUSH2 0x7BD SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x93C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C7265616479206578636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x993 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x97A SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA9A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7BD SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x15 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x729 SWAP1 PUSH2 0x1BF1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x7B7 DUP2 DUP6 DUP6 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320697320616C72656164792077686974656C69737465640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69F SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC60 JUMPI PUSH1 0x18 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE NUMBER PUSH1 0x17 SSTORE JUMPDEST JUMP JUMPDEST PUSH1 0xB SLOAD CALLER SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x82A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xCEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E7420697320616C726561647920696E636C756465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0xDFA JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD13 JUMPI PUSH2 0xD13 PUSH2 0x1C6F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xDF2 JUMPI PUSH1 0xA DUP1 SLOAD PUSH2 0xD3C SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD4C JUMPI PUSH2 0xD4C PUSH2 0x1C6F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xD77 JUMPI PUSH2 0xD77 PUSH2 0x1C6F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP2 DUP5 AND DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD DUP1 PUSH2 0xDCE JUMPI PUSH2 0xDCE PUSH2 0x1C83 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xCEC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0xE0C DUP7 PUSH2 0x1250 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE19 DUP3 DUP9 PUSH2 0x1BCB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE24 PUSH2 0x1283 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE31 DUP3 DUP5 PUSH2 0x1C97 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xE3E DUP4 DUP12 PUSH2 0x1C97 JUMP JUMPDEST SWAP11 SWAP2 SWAP10 POP SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xE5C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12A4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xED7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xEC9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH2 0xED7 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x12A4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x18 SLOAD DUP4 SWAP1 DUP4 SWAP1 PUSH1 0xFF AND PUSH2 0xF57 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xF52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696E67206E6F742079657420656E61626C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x17 SLOAD PUSH2 0xF65 SWAP1 PUSH1 0x3 PUSH2 0x1BDE JUMP JUMPDEST NUMBER GT PUSH2 0xFDD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xFDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C61756E63682070726F74656374696F6E3A206E6F742077686974656C697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1041 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x10A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH0 PUSH2 0x10AD DUP7 PUSH2 0xA5F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x110E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1185 JUMPI PUSH1 0x16 SLOAD DUP5 PUSH2 0x113A DUP8 PUSH2 0xA5F JUMP JUMPDEST PUSH2 0x1144 SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST GT ISZERO PUSH2 0x1185 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x5768616C652064657465637465642121 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x11B0 JUMPI POP PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x11B9 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x11C5 DUP8 DUP8 DUP8 DUP5 PUSH2 0x1376 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xD SLOAD DUP3 GT ISZERO PUSH2 0x1234 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666C656374696F6E73 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69F JUMP JUMPDEST PUSH0 PUSH2 0x123D PUSH2 0x1283 JUMP JUMPDEST SWAP1 POP PUSH2 0x1249 DUP2 DUP5 PUSH2 0x1CAE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x11 SLOAD PUSH1 0xF SLOAD PUSH2 0x1262 SWAP2 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH2 0x1271 DUP4 DUP7 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x127B SWAP2 SWAP1 PUSH2 0x1CAE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0x128E PUSH2 0x14E5 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x129D DUP2 DUP4 PUSH2 0x1CAE JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x12CD JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12F6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xED7 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1368 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x1383 JUMPI PUSH2 0x1383 PUSH2 0x1655 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x13C2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x13D7 JUMPI PUSH2 0x13D2 DUP5 DUP5 DUP5 PUSH2 0x1682 JUMP JUMPDEST PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1416 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1426 JUMPI PUSH2 0x13D2 DUP5 DUP5 DUP5 PUSH2 0x179D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1466 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1476 JUMPI PUSH2 0x13D2 DUP5 DUP5 DUP5 PUSH2 0x183C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x14B4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x14C4 JUMPI PUSH2 0x13D2 DUP5 DUP5 DUP5 PUSH2 0x1876 JUMP JUMPDEST PUSH2 0x14CF DUP5 DUP5 DUP5 PUSH2 0x183C JUMP JUMPDEST DUP1 PUSH2 0xED7 JUMPI PUSH2 0xED7 PUSH1 0x10 SLOAD PUSH1 0xF SSTORE PUSH1 0x12 SLOAD PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xC SLOAD PUSH0 SWAP2 DUP3 SWAP2 DUP3 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x1624 JUMPI DUP3 PUSH1 0x5 PUSH0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1512 JUMPI PUSH2 0x1512 PUSH2 0x1C6F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT DUP1 PUSH2 0x157A JUMPI POP DUP2 PUSH1 0x6 PUSH0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1554 JUMPI PUSH2 0x1554 PUSH2 0x1C6F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT JUMPDEST ISZERO PUSH2 0x1590 JUMPI PUSH1 0xD SLOAD PUSH1 0xC SLOAD SWAP5 POP SWAP5 POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x15A6 JUMPI PUSH2 0x15A6 PUSH2 0x1C6F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x15D4 SWAP1 DUP5 PUSH2 0x1BCB JUMP JUMPDEST SWAP3 POP PUSH1 0x6 PUSH0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x15EC JUMPI PUSH2 0x15EC PUSH2 0x1C6F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x161A SWAP1 DUP4 PUSH2 0x1BCB JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x14F1 JUMP JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH2 0x1635 SWAP2 SWAP1 PUSH2 0x1CAE JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x164C JUMPI PUSH1 0xD SLOAD PUSH1 0xC SLOAD SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0xF SLOAD ISZERO DUP1 ISZERO PUSH2 0x1665 JUMPI POP PUSH1 0x11 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x166C JUMPI JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x10 SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0x12 SSTORE PUSH0 SWAP2 DUP3 SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x168F DUP6 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x16BC SWAP1 DUP7 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x16EB SWAP1 DUP6 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x171A SWAP1 DUP5 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x173D DUP8 DUP7 DUP4 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x1747 DUP6 DUP3 PUSH2 0x1A20 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x178C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x17AA DUP6 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x17D7 SWAP1 DUP6 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP10 AND DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x180D SWAP1 DUP4 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x171A SWAP1 DUP5 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x1849 DUP6 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x16EB SWAP1 DUP6 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x1883 DUP6 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x18B0 SWAP1 DUP7 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x17D7 SWAP1 DUP6 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x11 SLOAD DUP5 PUSH2 0x18F0 SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x18FA SWAP2 SWAP1 PUSH2 0x1CAE JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xED7 JUMPI PUSH0 PUSH1 0x2 PUSH2 0x190F DUP5 DUP5 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x1919 SWAP2 SWAP1 PUSH2 0x1CAE JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x1941 SWAP1 DUP3 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x14 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1976 SWAP1 DUP3 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x13 SLOAD SWAP1 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP8 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0xF SLOAD DUP5 PUSH2 0x1A31 SWAP2 SWAP1 PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x1A3B SWAP2 SWAP1 PUSH2 0x1CAE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1A48 DUP4 DUP4 PUSH2 0x1C97 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD SLOAD PUSH2 0x1A58 SWAP2 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0xE SLOAD PUSH2 0x1A69 SWAP1 DUP4 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0xE SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A82 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1AD4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AEA JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1AF3 DUP4 PUSH2 0x1ABE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B13 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1B1C DUP5 PUSH2 0x1ABE JUMP JUMPDEST SWAP3 POP PUSH2 0x1B2A PUSH1 0x20 DUP6 ADD PUSH2 0x1ABE JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B4B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1249 DUP3 PUSH2 0x1ABE JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B65 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B7B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B97 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1BA0 DUP4 PUSH2 0x1ABE JUMP JUMPDEST SWAP2 POP PUSH2 0x1BAE PUSH1 0x20 DUP5 ADD PUSH2 0x1ABE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7BD JUMPI PUSH2 0x7BD PUSH2 0x1BB7 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7BD JUMPI PUSH2 0x7BD PUSH2 0x1BB7 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1C05 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C23 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x7A65726F20616464726573732063616E206E6F74206265207468652046656541 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x18D8DBDD5B9D PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7BD JUMPI PUSH2 0x7BD PUSH2 0x1BB7 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1CC8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xB390C0FE449A171CFC6ABA242F295677DB9E2A72560F4731B0F5AEBD CALLDATASIZE RETURNDATASIZE LT PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "128:13881:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4068:404;;;;;;;;;;-1:-1:-1;4068:404:5;;;;;:::i;:::-;;:::i;:::-;;1760:89:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;-1:-1:-1;3979:186:1;;;;;:::i;:::-;;:::i;:::-;;;1316:14:6;;1309:22;1291:41;;1279:2;1264:18;3979:186:1;1151:187:6;2201:101:5;;;;;;;;;;-1:-1:-1;2288:7:5;;2201:101;;;1489:25:6;;;1477:2;1462:18;2201:101:5;1343:177:6;2603:106:5;;;;;;;;;;-1:-1:-1;2683:19:5;;-1:-1:-1;;;;;2683:19:5;2603:106;;;-1:-1:-1;;;;;1689:32:6;;;1671:51;;1659:2;1644:18;2603:106:5;1525:203:6;4757:244:1;;;;;;;;;;-1:-1:-1;4757:244:1;;;;;:::i;:::-;;:::i;2097:98:5:-;;;;;;;;;;-1:-1:-1;2179:9:5;;2097:98;;2179:9;;;;2254:36:6;;2242:2;2227:18;2097:98:5;2112:184:6;3230:98:5;;;;;;;;;;-1:-1:-1;3311:10:5;;3230:98;;313:45;;;;;;;;;;-1:-1:-1;313:45:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;3334:109;;;;;;;;;;-1:-1:-1;3334:109:5;;;;;:::i;:::-;;:::i;4478:474::-;;;;;;;;;;-1:-1:-1;4478:474:5;;;;;:::i;:::-;;:::i;2715:122::-;;;;;;;;;;-1:-1:-1;2715:122:5;;;;;:::i;:::-;-1:-1:-1;;;;;2803:27:5;2780:4;2803:27;;;:18;:27;;;;;;;;;2715:122;6088:120;;;;;;;;;;-1:-1:-1;6088:120:5;;;;;:::i;:::-;-1:-1:-1;;;;;6179:22:5;6156:4;6179:22;;;:13;:22;;;;;;;;;6088:120;5273:332;;;;;;;;;;-1:-1:-1;5273:332:5;;;;;:::i;:::-;;:::i;3699:248::-;;;;;;;;;;-1:-1:-1;3699:248:5;;;;;:::i;:::-;;:::i;2843:267::-;;;;;;;;;;-1:-1:-1;2843:267:5;;;;;:::i;:::-;;:::i;2495:102::-;;;;;;;;;;-1:-1:-1;2573:17:5;;-1:-1:-1;;;;;2573:17:5;2495:102;;2308:93;;;;;;;;;;-1:-1:-1;2380:14:5;;2308:93;;3953:109;;;;;;;;;;-1:-1:-1;3953:109:5;;;;;:::i;:::-;;:::i;1934:85::-;;;;;;;;;;-1:-1:-1;2006:6:5;;;;;-1:-1:-1;;;;;2006:6:5;1934:85;;1962:93:1;;;;;;;;;;;;;:::i;891:26:5:-;;;;;;;;;;-1:-1:-1;891:26:5;;;;-1:-1:-1;;;;;891:26:5;;;3296:178:1;;;;;;;;;;-1:-1:-1;3296:178:1;;;;;:::i;:::-;;:::i;6214:184:5:-;;;;;;;;;;-1:-1:-1;6214:184:5;;;;;:::i;:::-;;:::i;3449:244::-;;;;;;;;;;-1:-1:-1;3449:244:5;;;;;:::i;:::-;;:::i;6404:113::-;;;;;;;;;;;;;:::i;3116:108::-;;;;;;;;;;-1:-1:-1;3116:108:5;;;;;:::i;:::-;-1:-1:-1;;;;;3197:20:5;3174:4;3197:20;;;:11;:20;;;;;;;;;3116:108;998:26;;;;;;;;;;;;;;;;3532:140:1;;;;;;;;;;-1:-1:-1;3532:140:1;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:1;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;2407:82:5;;;;;;;;;;-1:-1:-1;2475:7:5;;2407:82;;5611:471;;;;;;;;;;-1:-1:-1;5611:471:5;;;;;:::i;:::-;;:::i;1030:31::-;;;;;;;;;;-1:-1:-1;1030:31:5;;;;;;;;4068:404;735:10:4;4119:14:5;4180:19;;;:11;:19;;;;;;;;4179:20;4158:111;;;;-1:-1:-1;;;4158:111:5;;3359:2:6;4158:111:5;;;3341:21:6;3398:2;3378:18;;;3371:30;3437:34;3417:18;;;3410:62;-1:-1:-1;;;3488:18:6;;;3481:42;3540:19;;4158:111:5;;;;;;;;;4280:15;4305:27;4324:7;4305:18;:27::i;:::-;-1:-1:-1;;;;;;;;4360:15:5;;;;;;:7;:15;;;;;;4279:53;;-1:-1:-1;4360:25:5;;4279:53;;4360:25;:::i;:::-;-1:-1:-1;;;;;4342:15:5;;;;;;:7;:15;;;;;:43;4405:7;;:17;;4415:7;;4405:17;:::i;:::-;4395:7;:27;4445:10;;:20;;4458:7;;4445:20;:::i;:::-;4432:10;:33;-1:-1:-1;;;4068:404:5:o;1760:89:1:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:4;4106:31:1;735:10:4;4122:7:1;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;;:::o;4757:244::-;4844:4;735:10:4;4900:37:1;4916:4;735:10:4;4931:5:1;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:1;;4757:244;-1:-1:-1;;;;4757:244:1:o;3334:109:5:-;2006:6;;2071:10;;2006:6;;;-1:-1:-1;;;;;2006:6:5;-1:-1:-1;;;;;2060:21:5;;2056:28;;-1:-1:-1;;;;;3402:27:5;::::1;;::::0;;;:18:::1;:27;::::0;;;;:34;;-1:-1:-1;;3402:34:5::1;3432:4;3402:34;::::0;;2056:28;3334:109;:::o;4478:474::-;4593:7;4635;;4624;:18;;4616:62;;;;-1:-1:-1;;;4616:62:5;;4552:2:6;4616:62:5;;;4534:21:6;4591:2;4571:18;;;4564:30;4630:33;4610:18;;;4603:61;4681:18;;4616:62:5;4350:355:6;4616:62:5;4693:17;4688:258;;4727:15;4752:27;4771:7;4752:18;:27::i;:::-;-1:-1:-1;4726:53:5;;-1:-1:-1;4793:14:5;;-1:-1:-1;;;4793:14:5;4688:258;4841:23;4872:27;4891:7;4872:18;:27::i;:::-;-1:-1:-1;4838:61:5;;-1:-1:-1;4913:22:5;;-1:-1:-1;;;4913:22:5;5273:332;2006:6;;2071:10;;2006:6;;;-1:-1:-1;;;;;2006:6:5;-1:-1:-1;;;;;2060:21:5;;2056:28;;-1:-1:-1;;;;;5360:20:5;::::1;;::::0;;;:11:::1;:20;::::0;;;;;::::1;;5359:21;5351:61;;;::::0;-1:-1:-1;;;5351:61:5;;4912:2:6;5351:61:5::1;::::0;::::1;4894:21:6::0;4951:2;4931:18;;;4924:30;4990:29;4970:18;;;4963:57;5037:18;;5351:61:5::1;4710:351:6::0;5351:61:5::1;-1:-1:-1::0;;;;;5426:16:5;::::1;5445:1;5426:16:::0;;;:7:::1;:16;::::0;;;;;:20;5422:107:::1;;-1:-1:-1::0;;;;;5501:16:5;::::1;;::::0;;;:7:::1;:16;::::0;;;;;5481:37:::1;::::0;:19:::1;:37::i;:::-;-1:-1:-1::0;;;;;5462:16:5;::::1;;::::0;;;:7:::1;:16;::::0;;;;:56;5422:107:::1;-1:-1:-1::0;;;;;5538:20:5::1;;::::0;;;:11:::1;:20;::::0;;;;:27;;-1:-1:-1;;5538:27:5::1;5561:4;5538:27:::0;;::::1;::::0;;;5575:9:::1;:23:::0;;;;::::1;::::0;;;;;;::::1;::::0;;-1:-1:-1;;;;;;5575:23:5::1;::::0;;::::1;::::0;;5273:332::o;3699:248::-;2006:6;;2071:10;;2006:6;;;-1:-1:-1;;;;;2006:6:5;-1:-1:-1;;;;;2060:21:5;;2056:28;;-1:-1:-1;;;;;3804:27:5;::::1;3783:112;;;;-1:-1:-1::0;;;3783:112:5::1;;;;;;;:::i;:::-;3905:19;:35:::0;;-1:-1:-1;;;;;3905:35:5;::::1;-1:-1:-1::0;;;;;;3905:35:5;;::::1;;::::0;;3699:248;:::o;2843:267::-;-1:-1:-1;;;;;2983:19:5;;2956:7;2983:19;;;:11;:19;;;;;;;;2979:72;;;-1:-1:-1;;;;;;3025:15:5;;;;;:7;:15;;;;;;;2843:267::o;2979:72::-;-1:-1:-1;;;;;3087:15:5;;;;;;:7;:15;;;;;;3067:36;;:19;:36::i;3953:109::-;2006:6;;2071:10;;2006:6;;;-1:-1:-1;;;;;2006:6:5;-1:-1:-1;;;;;2060:21:5;;2056:28;;4029:11:::1;:26:::0;;-1:-1:-1;;;;;4029:26:5;::::1;-1:-1:-1::0;;;;;;4029:26:5;;::::1;;::::0;;3953:109;:::o;1962:93:1:-;2009:13;2041:7;2034:14;;;;;:::i;3296:178::-;3365:4;735:10:4;3419:27:1;735:10:4;3436:2:1;3440:5;3419:9;:27::i;6214:184:5:-;2006:6;;2071:10;;2006:6;;;-1:-1:-1;;;;;2006:6:5;-1:-1:-1;;;;;2060:21:5;;2056:28;;-1:-1:-1;;;;;6295:22:5;::::1;;::::0;;;:13:::1;:22;::::0;;;;;::::1;;6294:23;6286:66;;;::::0;-1:-1:-1;;;6286:66:5;;5675:2:6;6286:66:5::1;::::0;::::1;5657:21:6::0;5714:2;5694:18;;;5687:30;5753:32;5733:18;;;5726:60;5803:18;;6286:66:5::1;5473:354:6::0;6286:66:5::1;-1:-1:-1::0;;;;;6362:22:5;::::1;;::::0;;;:13:::1;:22;::::0;;;;:29;;-1:-1:-1;;6362:29:5::1;6387:4;6362:29;::::0;;6214:184;:::o;3449:244::-;2006:6;;2071:10;;2006:6;;;-1:-1:-1;;;;;2006:6:5;-1:-1:-1;;;;;2060:21:5;;2056:28;;-1:-1:-1;;;;;3552:27:5;::::1;3531:112;;;;-1:-1:-1::0;;;3531:112:5::1;;;;;;;:::i;:::-;3653:17;:33:::0;;-1:-1:-1;;;;;3653:33:5;::::1;-1:-1:-1::0;;;;;;3653:33:5;;::::1;;::::0;;3449:244;:::o;6404:113::-;2006:6;;2071:10;;2006:6;;;-1:-1:-1;;;;;2006:6:5;-1:-1:-1;;;;;2060:21:5;;2056:28;;6456:11:::1;:18:::0;;-1:-1:-1;;6456:18:5::1;6470:4;6456:18;::::0;;6498:12:::1;6484:11;:26:::0;2056:28;6404:113::o;5611:471::-;2006:6;;2071:10;;2006:6;;;-1:-1:-1;;;;;2006:6:5;-1:-1:-1;;;;;2060:21:5;;2056:28;;-1:-1:-1;;;;;5695:20:5;::::1;;::::0;;;:11:::1;:20;::::0;;;;;::::1;;5687:60;;;::::0;-1:-1:-1;;;5687:60:5;;6034:2:6;5687:60:5::1;::::0;::::1;6016:21:6::0;6073:2;6053:18;;;6046:30;6112:29;6092:18;;;6085:57;6159:18;;5687:60:5::1;5832:351:6::0;5687:60:5::1;5762:9;5757:319;5781:9;:16:::0;5777:20;::::1;5757:319;;;5838:7;-1:-1:-1::0;;;;;5822:23:5::1;:9;5832:1;5822:12;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;5822:12:5::1;:23:::0;5818:248:::1;;5880:9;5890:16:::0;;:20:::1;::::0;5909:1:::1;::::0;5890:20:::1;:::i;:::-;5880:31;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;5865:9:::1;:12:::0;;-1:-1:-1;;;;;5880:31:5;;::::1;::::0;5875:1;;5865:12;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;:46:::0;;-1:-1:-1;;;;;;5865:46:5::1;-1:-1:-1::0;;;;;5865:46:5;;::::1;;::::0;;5929:16;;::::1;::::0;;:7:::1;:16:::0;;;;;;:20;;;5967:11:::1;:20:::0;;;;:28;;-1:-1:-1;;5967:28:5::1;::::0;;6013:9:::1;:15:::0;;;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;6013:15:5;;;;;-1:-1:-1;;;;;;6013:15:5::1;::::0;;;;;5757:319:::1;5611:471:::0;:::o;5818:248::-:1;5799:3;;5757:319;;;;5611:471:::0;:::o;11803:537::-;11907:7;11928;11949;11970;12002:16;12021:29;12042:7;12021:20;:29::i;:::-;12002:48;-1:-1:-1;12060:23:5;12086:18;12002:48;12086:7;:18;:::i;:::-;12060:44;;12114:19;12136:10;:8;:10::i;:::-;12114:32;-1:-1:-1;12156:23:5;12182:29;12114:32;12182:15;:29;:::i;:::-;12156:55;-1:-1:-1;12221:15:5;12239:21;12249:11;12239:7;:21;:::i;:::-;12221:39;12287:15;;-1:-1:-1;12304:15:5;;-1:-1:-1;12321:11:5;;-1:-1:-1;11803:537:5;-1:-1:-1;;;;11803:537:5:o;8715:128:1:-;8799:37;8808:5;8815:7;8824:5;8831:4;8799:8;:37::i;:::-;8715:128;;;:::o;10404:476::-;-1:-1:-1;;;;;3638:18:1;;;10503:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10569:36:1;;10565:309;;;10644:5;10625:16;:24;10621:130;;;10676:60;;-1:-1:-1;;;10676:60:1;;-1:-1:-1;;;;;6845:32:6;;10676:60:1;;;6827:51:6;6894:18;;;6887:34;;;6937:18;;;6930:34;;;6800:18;;10676:60:1;6625:345:6;10621:130:1;10792:57;10801:5;10808:7;10836:5;10817:16;:24;10843:5;10792:8;:57::i;:::-;10493:387;10404:476;;;:::o;6897:879:5:-;6590:11;;7040:6;;7048:9;;6590:11;;6585:289;;-1:-1:-1;;;;;6625:17:5;;;;;;:13;:17;;;;;;;;6617:53;;;;-1:-1:-1;;;6617:53:5;;7177:2:6;6617:53:5;;;7159:21:6;7216:2;7196:18;;;7189:30;7255:25;7235:18;;;7228:53;7298:18;;6617:53:5;6975:347:6;6617:53:5;6585:289;;;6707:11;;:15;;6721:1;6707:15;:::i;:::-;6691:12;:31;6687:187;;-1:-1:-1;;;;;6807:17:5;;;;;;:13;:17;;;;;;;;6799:64;;;;-1:-1:-1;;;6799:64:5;;7529:2:6;6799:64:5;;;7511:21:6;7568:2;7548:18;;;7541:30;7607:34;7587:18;;;7580:62;-1:-1:-1;;;7658:18:6;;;7651:32;7700:19;;6799:64:5;7327:398:6;6799:64:5;-1:-1:-1;;;;;7077:20:5;::::1;7069:70;;;::::0;-1:-1:-1;;;7069:70:5;;7932:2:6;7069:70:5::1;::::0;::::1;7914:21:6::0;7971:2;7951:18;;;7944:30;8010:34;7990:18;;;7983:62;-1:-1:-1;;;8061:18:6;;;8054:35;8106:19;;7069:70:5::1;7730:401:6::0;7069:70:5::1;-1:-1:-1::0;;;;;7157:23:5;::::1;7149:71;;;::::0;-1:-1:-1;;;7149:71:5;;8338:2:6;7149:71:5::1;::::0;::::1;8320:21:6::0;8377:2;8357:18;;;8350:30;8416:34;8396:18;;;8389:62;-1:-1:-1;;;8467:18:6;;;8460:33;8510:19;;7149:71:5::1;8136:399:6::0;7149:71:5::1;7230:21;7254:17;7264:6;7254:9;:17::i;:::-;7230:41;;7319:6;7302:13;:23;;7281:108;;;::::0;-1:-1:-1;;;7281:108:5;;8742:2:6;7281:108:5::1;::::0;::::1;8724:21:6::0;8781:2;8761:18;;;8754:30;8820:34;8800:18;;;8793:62;-1:-1:-1;;;8871:18:6;;;8864:36;8917:19;;7281:108:5::1;8540:402:6::0;7281:108:5::1;-1:-1:-1::0;;;;;2803:27:5;;2780:4;2803:27;;;:18;:27;;;;;;;;7400:183:::1;;7507:15;;7497:6;7474:20;7484:9;7474;:20::i;:::-;:29;;;;:::i;:::-;:48;;7449:123;;;::::0;-1:-1:-1;;;7449:123:5;;9149:2:6;7449:123:5::1;::::0;::::1;9131:21:6::0;9188:2;9168:18;;;9161:30;-1:-1:-1;;;9207:18:6;;;9200:46;9263:18;;7449:123:5::1;8947:340:6::0;7449:123:5::1;7629:11;::::0;7592:12:::1;::::0;-1:-1:-1;;;;;7619:21:5;;::::1;7629:11:::0;::::1;7619:21;::::0;:49:::1;;-1:-1:-1::0;7657:11:5::1;::::0;-1:-1:-1;;;;;7644:24:5;;::::1;7657:11:::0;::::1;7644:24;7619:49;7615:94;;;-1:-1:-1::0;7694:4:5::1;7615:94;7719:50;7734:6;7742:9;7753:6;7761:7;7719:14;:50::i;:::-;7059:717;;6897:879:::0;;;;;:::o;4958:309::-;5050:7;5105;;5094;:18;;5073:107;;;;-1:-1:-1;;;5073:107:5;;9494:2:6;5073:107:5;;;9476:21:6;9533:2;9513:18;;;9506:30;9572:34;9552:18;;;9545:62;-1:-1:-1;;;9623:18:6;;;9616:40;9673:19;;5073:107:5;9292:406:6;5073:107:5;5190:19;5212:10;:8;:10::i;:::-;5190:32;-1:-1:-1;5239:21:5;5190:32;5239:7;:21;:::i;:::-;5232:28;4958:309;-1:-1:-1;;;4958:309:5:o;11551:246::-;11644:7;11667:16;11703:7;;11686:14;;:24;;;;:::i;:::-;11667:43;-1:-1:-1;11720:16:5;11762:3;11740:18;11667:43;11740:7;:18;:::i;:::-;11739:26;;;;:::i;:::-;11720:45;11551:246;-1:-1:-1;;;;11551:246:5:o;12601:158::-;12643:7;12663:15;12680;12699:19;:17;:19::i;:::-;12662:56;;-1:-1:-1;12662:56:5;-1:-1:-1;12735:17:5;12662:56;;12735:17;:::i;:::-;12728:24;;;;12601:158;:::o;9690:432:1:-;-1:-1:-1;;;;;9802:19:1;;9798:89;;9844:32;;-1:-1:-1;;;9844:32:1;;9873:1;9844:32;;;1671:51:6;1644:18;;9844:32:1;1525:203:6;9798:89:1;-1:-1:-1;;;;;9900:21:1;;9896:90;;9944:31;;-1:-1:-1;;;9944:31:1;;9972:1;9944:31;;;1671:51:6;1644:18;;9944:31:1;1525:203:6;9896:90:1;-1:-1:-1;;;;;9995:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10040:76;;;;10090:7;-1:-1:-1;;;;;10074:31:1;10083:5;-1:-1:-1;;;;;10074:31:1;;10099:5;10074:31;;;;1489:25:6;;1477:2;1462:18;;1343:177;10074:31:1;;;;;;;;9690:432;;;;:::o;7782:769:5:-;7922:7;7917:53;;7945:14;:12;:14::i;:::-;-1:-1:-1;;;;;7984:17:5;;;;;;:11;:17;;;;;;;;:37;;;;-1:-1:-1;;;;;;8006:15:5;;;;;;:11;:15;;;;;;;;8005:16;7984:37;7980:501;;;8037:38;8059:4;8065:2;8069:5;8037:21;:38::i;:::-;7980:501;;;-1:-1:-1;;;;;8097:17:5;;;;;;:11;:17;;;;;;;;8096:18;:37;;;;-1:-1:-1;;;;;;8118:15:5;;;;;;:11;:15;;;;;;;;8096:37;8092:389;;;8149:36;8169:4;8175:2;8179:5;8149:19;:36::i;8092:389::-;-1:-1:-1;;;;;8207:17:5;;;;;;:11;:17;;;;;;;;8206:18;:38;;;;-1:-1:-1;;;;;;8229:15:5;;;;;;:11;:15;;;;;;;;8228:16;8206:38;8202:279;;;8260:34;8278:4;8284:2;8288:5;8260:17;:34::i;8202:279::-;-1:-1:-1;;;;;8315:17:5;;;;;;:11;:17;;;;;;;;:36;;;;-1:-1:-1;;;;;;8336:15:5;;;;;;:11;:15;;;;;;;;8315:36;8311:170;;;8367:38;8389:4;8395:2;8399:5;8367:21;:38::i;8311:170::-;8436:34;8454:4;8460:2;8464:5;8436:17;:34::i;:::-;8496:7;8491:54;;8519:15;8854:22;;8837:14;:39;8896:15;;8886:7;:25;8794:124;12765:642;12862:7;;12897;;12816;;;;;12915:357;12939:9;:16;12935:20;;12915:357;;;13021:7;12997;:21;13005:9;13015:1;13005:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;13005:12:5;12997:21;;;;;;;;;;;;;:31;;:82;;;13072:7;13048;:21;13056:9;13066:1;13056:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;13056:12:5;13048:21;;;;;;;;;;;;;:31;12997:82;12976:176;;;13120:7;;13129;;13112:25;;;;;;;12765:642;;:::o;12976:176::-;13185:7;:21;13193:9;13203:1;13193:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;13193:12:5;13185:21;;;;;;;;;;;;;13175:31;;:7;:31;:::i;:::-;13165:41;;13240:7;:21;13248:9;13258:1;13248:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;13248:12:5;13240:21;;;;;;;;;;;;;13230:31;;:7;:31;:::i;:::-;13220:41;-1:-1:-1;12957:3:5;;12915:357;;;;13306:7;;13296;;:17;;;;:::i;:::-;13286:7;:27;13282:83;;;13337:7;;13346;;13329:25;;;;;;12765:642;;:::o;13282:83::-;13383:7;;13392;;-1:-1:-1;12765:642:5;-1:-1:-1;12765:642:5:o;8557:231::-;8603:14;;:19;:35;;;;-1:-1:-1;8626:7:5;;:12;8603:35;8599:48;;;8557:231::o;8599:48::-;8682:14;;;8657:22;:39;8724:7;;;8706:15;:25;-1:-1:-1;8742:18:5;;;;8770:11;8557:231::o;10182:645::-;10327:15;10356:23;10393;10430:19;10462:27;10481:7;10462:18;:27::i;:::-;-1:-1:-1;;;;;10517:15:5;;;;;;:7;:15;;;;;;10313:176;;-1:-1:-1;10313:176:5;;-1:-1:-1;10313:176:5;-1:-1:-1;10313:176:5;-1:-1:-1;10517:25:5;;10535:7;;10517:25;:::i;:::-;-1:-1:-1;;;;;10499:15:5;;;;;;:7;:15;;;;;;;;:43;;;;10570:7;:15;;;;:25;;10588:7;;10570:25;:::i;:::-;-1:-1:-1;;;;;10552:15:5;;;;;;;:7;:15;;;;;;:43;;;;10626:18;;;;;;;:36;;10647:15;;10626:36;:::i;:::-;-1:-1:-1;;;;;10605:18:5;;;;;;:7;:18;;;;;:57;10673:44;10688:6;10696:7;10705:11;10673:14;:44::i;:::-;10727:33;10739:7;10748:11;10727;:33::i;:::-;10793:9;-1:-1:-1;;;;;10776:44:5;10785:6;-1:-1:-1;;;;;10776:44:5;;10804:15;10776:44;;;;1489:25:6;;1477:2;1462:18;;1343:177;10776:44:5;;;;;;;;10303:524;;;;10182:645;;;:::o;9519:657::-;9662:15;9691:23;9728;9765:19;9797:27;9816:7;9797:18;:27::i;:::-;-1:-1:-1;;;;;9852:15:5;;;;;;:7;:15;;;;;;9648:176;;-1:-1:-1;9648:176:5;;-1:-1:-1;9648:176:5;-1:-1:-1;9648:176:5;-1:-1:-1;9852:25:5;;9648:176;;9852:25;:::i;:::-;-1:-1:-1;;;;;9834:15:5;;;;;;;:7;:15;;;;;;;;:43;;;;9908:18;;;;;:7;:18;;;;;:36;;9929:15;;9908:36;:::i;:::-;-1:-1:-1;;;;;9887:18:5;;;;;;:7;:18;;;;;;;;:57;;;;9975:7;:18;;;;:36;;9996:15;;9975:36;:::i;8924:589::-;9065:15;9094:23;9131;9168:19;9200:27;9219:7;9200:18;:27::i;:::-;-1:-1:-1;;;;;9256:15:5;;;;;;:7;:15;;;;;;9051:176;;-1:-1:-1;9051:176:5;;-1:-1:-1;9051:176:5;-1:-1:-1;9051:176:5;-1:-1:-1;9256:25:5;;9051:176;;9256:25;:::i;10833:712::-;10978:15;11007:23;11044;11081:19;11113:27;11132:7;11113:18;:27::i;:::-;-1:-1:-1;;;;;11168:15:5;;;;;;:7;:15;;;;;;10964:176;;-1:-1:-1;10964:176:5;;-1:-1:-1;10964:176:5;-1:-1:-1;10964:176:5;-1:-1:-1;11168:25:5;;11186:7;;11168:25;:::i;:::-;-1:-1:-1;;;;;11150:15:5;;;;;;:7;:15;;;;;;;;:43;;;;11221:7;:15;;;;:25;;11239:7;;11221:25;:::i;13413:594::-;13539:15;13579:3;13568:7;;13558;:17;;;;:::i;:::-;13557:25;;;;:::i;:::-;13539:43;-1:-1:-1;13596:11:5;;13592:409;;13623:15;13667:1;13642:21;13652:11;13642:7;:21;:::i;:::-;13641:27;;;;:::i;:::-;13719:17;;-1:-1:-1;;;;;13719:17:5;13711:26;;;;:7;:26;;;;;;13623:45;;-1:-1:-1;13711:36:5;;13623:45;;13711:36;:::i;:::-;13690:17;;-1:-1:-1;;;;;13690:17:5;;;13682:26;;;;:7;:26;;;;;;:65;;;;13816:19;;;;;13808:28;;;;:54;;13855:7;;13808:54;:::i;:::-;13769:19;;-1:-1:-1;;;;;13769:19:5;;;13761:28;;;;:7;:28;;;;;;;;;:101;;;;13898:17;;13881:44;;1489:25:6;;;13898:17:5;;;;13881:44;;;;;;1462:18:6;13881:44:5;;;;;;;13961:19;;13944:46;;1489:25:6;;;-1:-1:-1;;;;;13961:19:5;;;;13944:46;;;;;1477:2:6;1462:18;13944:46:5;;;;;;;13609:392;13529:478;13413:594;;;:::o;12346:249::-;12423:12;12467:3;12449:14;;12439:7;:24;;;;:::i;:::-;12438:32;;;;:::i;:::-;12423:47;-1:-1:-1;12480:12:5;12495:18;12502:11;12423:47;12495:18;:::i;:::-;12480:33;;12544:4;12534:7;;:14;;;;:::i;:::-;12524:7;:24;12571:10;;:17;;12584:4;;12571:17;:::i;:::-;12558:10;:30;-1:-1:-1;;;;12346:249:5:o;14:226:6:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;187:23:6;;14:226;-1:-1:-1;14:226:6:o;245:418::-;394:2;383:9;376:21;357:4;426:6;420:13;469:6;464:2;453:9;449:18;442:34;528:6;523:2;515:6;511:15;506:2;495:9;491:18;485:50;584:1;579:2;570:6;559:9;555:22;551:31;544:42;654:2;647;643:7;638:2;630:6;626:15;622:29;611:9;607:45;603:54;595:62;;;245:418;;;;:::o;668:173::-;736:20;;-1:-1:-1;;;;;785:31:6;;775:42;;765:70;;831:1;828;821:12;765:70;668:173;;;:::o;846:300::-;914:6;922;975:2;963:9;954:7;950:23;946:32;943:52;;;991:1;988;981:12;943:52;1014:29;1033:9;1014:29;:::i;:::-;1004:39;1112:2;1097:18;;;;1084:32;;-1:-1:-1;;;846:300:6:o;1733:374::-;1810:6;1818;1826;1879:2;1867:9;1858:7;1854:23;1850:32;1847:52;;;1895:1;1892;1885:12;1847:52;1918:29;1937:9;1918:29;:::i;:::-;1908:39;;1966:38;2000:2;1989:9;1985:18;1966:38;:::i;:::-;1733:374;;1956:48;;-1:-1:-1;;;2073:2:6;2058:18;;;;2045:32;;1733:374::o;2301:186::-;2360:6;2413:2;2401:9;2392:7;2388:23;2384:32;2381:52;;;2429:1;2426;2419:12;2381:52;2452:29;2471:9;2452:29;:::i;2492:395::-;2557:6;2565;2618:2;2606:9;2597:7;2593:23;2589:32;2586:52;;;2634:1;2631;2624:12;2586:52;2679:23;;;-1:-1:-1;2778:2:6;2763:18;;2750:32;2820:15;;2813:23;2801:36;;2791:64;;2851:1;2848;2841:12;2791:64;2874:7;2864:17;;;2492:395;;;;;:::o;2892:260::-;2960:6;2968;3021:2;3009:9;3000:7;2996:23;2992:32;2989:52;;;3037:1;3034;3027:12;2989:52;3060:29;3079:9;3060:29;:::i;:::-;3050:39;;3108:38;3142:2;3131:9;3127:18;3108:38;:::i;:::-;3098:48;;2892:260;;;;;:::o;3570:127::-;3631:10;3626:3;3622:20;3619:1;3612:31;3662:4;3659:1;3652:15;3686:4;3683:1;3676:15;3702:128;3769:9;;;3790:11;;;3787:37;;;3804:18;;:::i;3835:125::-;3900:9;;;3921:10;;;3918:36;;;3934:18;;:::i;3965:380::-;4044:1;4040:12;;;;4087;;;4108:61;;4162:4;4154:6;4150:17;4140:27;;4108:61;4215:2;4207:6;4204:14;4184:18;4181:38;4178:161;;4261:10;4256:3;4252:20;4249:1;4242:31;4296:4;4293:1;4286:15;4324:4;4321:1;4314:15;4178:161;;3965:380;;;:::o;5066:402::-;5268:2;5250:21;;;5307:2;5287:18;;;5280:30;5346:34;5341:2;5326:18;;5319:62;-1:-1:-1;;;5412:2:6;5397:18;;5390:36;5458:3;5443:19;;5066:402::o;6188:127::-;6249:10;6244:3;6240:20;6237:1;6230:31;6280:4;6277:1;6270:15;6304:4;6301:1;6294:15;6320:127;6381:10;6376:3;6372:20;6369:1;6362:31;6412:4;6409:1;6402:15;6436:4;6433:1;6426:15;6452:168;6525:9;;;6556;;6573:15;;;6567:22;;6553:37;6543:71;;6594:18;;:::i;9703:217::-;9743:1;9769;9759:132;;9813:10;9808:3;9804:20;9801:1;9794:31;9848:4;9845:1;9838:15;9876:4;9873:1;9866:15;9759:132;-1:-1:-1;9905:9:6;;9703:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1485400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24802",
								"balanceOf(address)": "infinite",
								"changeDevelopmentAccount(address)": "26857",
								"changeMarketingAccount(address)": "26813",
								"changePairAddress(address)": "26823",
								"decimals()": "2378",
								"excludeAccountFromReward(address)": "infinite",
								"excludeFromFee(address)": "26852",
								"getDevelopmentAccount()": "2365",
								"getMarketingAccount()": "2376",
								"getTaxFee()": "2357",
								"includeAccountinReward(address)": "infinite",
								"isExcluded(address)": "2635",
								"isExcludedFromFee(address)": "2658",
								"isWhitelisted(address)": "2574",
								"isWhitelistedAddress(address)": "2591",
								"launchBlock()": "2405",
								"name()": "infinite",
								"openTrading()": "48711",
								"owner()": "2453",
								"pairAddress()": "2403",
								"reflect(uint256)": "infinite",
								"reflectionFee()": "2359",
								"reflectionFromToken(uint256,bool)": "infinite",
								"symbol()": "infinite",
								"totalFeesRedistributed()": "2403",
								"totalSupply()": "2393",
								"tradingOpen()": "2419",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"whitelistedAddress(address)": "29106"
							},
							"internal": {
								"_getCompleteTaxValue(uint256)": "infinite",
								"_getCurrentSupply()": "infinite",
								"_getRate()": "infinite",
								"_getTransferValues(uint256)": "infinite",
								"_reflectFee(uint256,uint256)": "infinite",
								"_tokenTransfer(address,address,uint256,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_transferBothExcluded(address,address,uint256)": "infinite",
								"_transferFromExcluded(address,address,uint256)": "infinite",
								"_transferStandard(address,address,uint256)": "infinite",
								"_transferToExcluded(address,address,uint256)": "infinite",
								"removeAllFee()": "62689",
								"restoreAllFee()": "infinite",
								"taxFeeTransfer(address,uint256,uint256)": "infinite",
								"tokenFromReflection(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 128,
									"end": 14009,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 128,
									"end": 14009,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 128,
									"end": 14009,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 478,
									"end": 513,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 478,
									"end": 513,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 478,
									"end": 513,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 478,
									"end": 513,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 503,
									"end": 513,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 478,
									"end": 513,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 478,
									"end": 513,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 478,
									"end": 513,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 478,
									"end": 513,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 478,
									"end": 513,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 478,
									"end": 513,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 478,
									"end": 513,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 478,
									"end": 513,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 625,
									"end": 655,
									"name": "PUSH",
									"source": 5,
									"value": "E"
								},
								{
									"begin": 625,
									"end": 655,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 969,
									"end": 991,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 969,
									"end": 991,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 981,
									"end": 990,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 981,
									"end": 990,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 981,
									"end": 990,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 981,
									"end": 990,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 981,
									"end": 990,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 981,
									"end": 990,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 981,
									"end": 990,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 969,
									"end": 971,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 969,
									"end": 991,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 969,
									"end": 991,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 969,
									"end": 991,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 969,
									"end": 991,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 958,
									"end": 991,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 958,
									"end": 991,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 958,
									"end": 966,
									"name": "PUSH",
									"source": 5,
									"value": "989680"
								},
								{
									"begin": 958,
									"end": 991,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 958,
									"end": 991,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 958,
									"end": 991,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 958,
									"end": 991,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 924,
									"end": 991,
									"name": "PUSH",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 924,
									"end": 991,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1030,
									"end": 1061,
									"name": "PUSH",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1030,
									"end": 1061,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1030,
									"end": 1061,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1030,
									"end": 1061,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1030,
									"end": 1061,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1030,
									"end": 1061,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1068,
									"end": 1893,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1068,
									"end": 1893,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1068,
									"end": 1893,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1068,
									"end": 1893,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1068,
									"end": 1893,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1068,
									"end": 1893,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1068,
									"end": 1893,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1068,
									"end": 1893,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1068,
									"end": 1893,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1068,
									"end": 1893,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1068,
									"end": 1893,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "D"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "21ACA122A921A0AA29A1A7A4A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "99"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4359424343"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1124,
									"end": 1133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1124,
									"end": 1138,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1138,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1124,
									"end": 1138,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1136,
									"end": 1138,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1124,
									"end": 1138,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1138,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1138,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1138,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1138,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1138,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1171,
									"end": 1193,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1171,
									"end": 1193,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1171,
									"end": 1173,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 1171,
									"end": 1193,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1171,
									"end": 1193,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1171,
									"end": 1193,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1171,
									"end": 1193,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1158,
									"end": 1193,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1158,
									"end": 1193,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1158,
									"end": 1168,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "3B9ACA00"
								},
								{
									"begin": 1158,
									"end": 1193,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1158,
									"end": 1193,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1158,
									"end": 1193,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1158,
									"end": 1193,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1155,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "C"
								},
								{
									"begin": 1148,
									"end": 1193,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1193,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1193,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1221,
									"end": 1234,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1221,
									"end": 1234,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1221,
									"end": 1234,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1221,
									"end": 1234,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1221,
									"end": 1234,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1221,
									"end": 1234,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1214,
									"end": 1235,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1214,
									"end": 1235,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1214,
									"end": 1235,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1214,
									"end": 1235,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1214,
									"end": 1235,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1214,
									"end": 1235,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1203,
									"end": 1210,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "D"
								},
								{
									"begin": 1203,
									"end": 1236,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1203,
									"end": 1236,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1203,
									"end": 1236,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1264,
									"end": 1265,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1247,
									"end": 1261,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "F"
								},
								{
									"begin": 1247,
									"end": 1265,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1247,
									"end": 1265,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1247,
									"end": 1265,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1275,
									"end": 1297,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1275,
									"end": 1314,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1275,
									"end": 1314,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1275,
									"end": 1314,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1325,
									"end": 1332,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1325,
									"end": 1336,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1325,
									"end": 1336,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1325,
									"end": 1336,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1346,
									"end": 1361,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1346,
									"end": 1371,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1408,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1402,
									"end": 1408,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1408,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1399,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1382,
									"end": 1408,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1408,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1382,
									"end": 1408,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1402,
									"end": 1408,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1402,
									"end": 1408,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1408,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1408,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1408,
									"modifierDepth": 1,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1408,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1402,
									"end": 1408,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1408,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1408,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1408,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1408,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1408,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 1509,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1509,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1509,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1500,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1482,
									"end": 1509,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1482,
									"end": 1509,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1509,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1509,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1509,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1482,
									"end": 1509,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1509,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1509,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1516,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1516,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1482,
									"end": 1516,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1516,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1516,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 1482,
									"end": 1516,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1516,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1516,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1516,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1516,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1516,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1545,
									"end": 1562,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1545,
									"end": 1562,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1545,
									"end": 1562,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1545,
									"end": 1562,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1563,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1563,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1563,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1563,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1563,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1570,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1570,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1570,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1570,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1570,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1570,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1570,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1570,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 1618,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1599,
									"end": 1618,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 1618,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 1618,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 1618,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1580,
									"end": 1619,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1580,
									"end": 1619,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1580,
									"end": 1619,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1580,
									"end": 1619,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1580,
									"end": 1619,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1580,
									"end": 1626,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1580,
									"end": 1626,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1580,
									"end": 1626,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1580,
									"end": 1626,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1580,
									"end": 1626,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1580,
									"end": 1626,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1580,
									"end": 1626,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1580,
									"end": 1626,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1663,
									"end": 1667,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 1636,
									"end": 1669,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1636,
									"end": 1669,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1636,
									"end": 1669,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1636,
									"end": 1669,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1636,
									"end": 1669,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1636,
									"end": 1676,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1636,
									"end": 1676,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1636,
									"end": 1676,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1636,
									"end": 1676,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1636,
									"end": 1676,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1636,
									"end": 1676,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1636,
									"end": 1676,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1636,
									"end": 1676,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2006,
									"end": 2012,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 2006,
									"end": 2012,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2006,
									"end": 2012,
									"name": "DUP10",
									"source": 5
								},
								{
									"begin": 2006,
									"end": 2012,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2006,
									"end": 2012,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 2006,
									"end": 2012,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2006,
									"end": 2012,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1686,
									"end": 1708,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1686,
									"end": 1708,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1686,
									"end": 1699,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1686,
									"end": 1708,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1686,
									"end": 1708,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1686,
									"end": 1708,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1686,
									"end": 1708,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1686,
									"end": 1708,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1686,
									"end": 1715,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1686,
									"end": 1715,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1686,
									"end": 1715,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1686,
									"end": 1715,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1686,
									"end": 1715,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1686,
									"end": 1715,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1686,
									"end": 1715,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1686,
									"end": 1715,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1739,
									"end": 1756,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": 1739,
									"end": 1756,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1739,
									"end": 1756,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1739,
									"end": 1756,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1757,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1757,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1757,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1757,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1757,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1764,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1764,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1764,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1764,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1764,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1764,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1764,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1725,
									"end": 1764,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1788,
									"end": 1807,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 1788,
									"end": 1807,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1788,
									"end": 1807,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1788,
									"end": 1807,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1774,
									"end": 1808,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1774,
									"end": 1808,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1774,
									"end": 1808,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1774,
									"end": 1808,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1774,
									"end": 1808,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1774,
									"end": 1815,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1774,
									"end": 1815,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1774,
									"end": 1815,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1774,
									"end": 1815,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": 1774,
									"end": 1815,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1774,
									"end": 1815,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1774,
									"end": 1815,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1774,
									"end": 1815,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1774,
									"end": 1815,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1833,
									"end": 1839,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1833,
									"end": 1839,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1833,
									"end": 1839,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1833,
									"end": 1839,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1833,
									"end": 1839,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1833,
									"end": 1839,
									"modifierDepth": 1,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 1833,
									"end": 1839,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1833,
									"end": 1839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1833,
									"end": 1839,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1825,
									"end": 1840,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1825,
									"end": 1840,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1825,
									"end": 1832,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1825,
									"end": 1840,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1825,
									"end": 1840,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1825,
									"end": 1840,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1825,
									"end": 1840,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1825,
									"end": 1840,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1825,
									"end": 1840,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1825,
									"end": 1840,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1825,
									"end": 1850,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1825,
									"end": 1850,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1825,
									"end": 1850,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1860,
									"end": 1886,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1860,
									"end": 1886,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1876,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 1866,
									"end": 1876,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1860,
									"end": 1865,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 1860,
									"end": 1886,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1860,
									"end": 1886,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1860,
									"end": 1886,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 128,
									"end": 14009,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 128,
									"end": 14009,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7447,
									"end": 7655,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 7447,
									"end": 7655,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7517,
									"end": 7538,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7517,
									"end": 7538,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7513,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 7513,
									"end": 7604,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7590,
									"end": 7591,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4876,
									"end": 4927,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4849,
									"end": 4867,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4849,
									"end": 4867,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7561,
									"end": 7593,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7513,
									"end": 7604,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 7513,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7613,
									"end": 7648,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 7629,
									"end": 7630,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7633,
									"end": 7640,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7642,
									"end": 7647,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7613,
									"end": 7620,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 7613,
									"end": 7648,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7613,
									"end": 7648,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 7613,
									"end": 7648,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7447,
									"end": 7655,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7447,
									"end": 7655,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7447,
									"end": 7655,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 7104,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 5997,
									"end": 7104,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6086,
									"end": 6104,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6086,
									"end": 6104,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6238,
									"end": 6243,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6234,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6222,
									"end": 6234,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6222,
									"end": 6243,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6243,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6274,
									"end": 6293,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6296,
									"end": 6311,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6329,
									"end": 6348,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6329,
									"end": 6348,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6329,
									"end": 6348,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6325,
									"end": 6440,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6325,
									"end": 6440,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 6325,
									"end": 6440,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5288,
									"end": 5320,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5288,
									"end": 5320,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5270,
									"end": 5321,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5337,
									"end": 5355,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 5337,
									"end": 5355,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5337,
									"end": 5355,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5330,
									"end": 5364,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5330,
									"end": 5364,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5330,
									"end": 5364,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5380,
									"end": 5398,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 5380,
									"end": 5398,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5380,
									"end": 5398,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5373,
									"end": 5407,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5373,
									"end": 5407,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5373,
									"end": 5407,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5243,
									"end": 5261,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 5243,
									"end": 5261,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6375,
									"end": 6425,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 5068,
									"end": 5413,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6325,
									"end": 6440,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 6325,
									"end": 6440,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6569,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6575,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6578,
									"end": 6597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6578,
									"end": 6597,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6578,
									"end": 6597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6578,
									"end": 6597,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6560,
									"end": 6597,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6082,
									"end": 6622,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6636,
									"end": 6652,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6636,
									"end": 6652,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6799,
									"end": 6811,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6799,
									"end": 6820,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6799,
									"end": 6820,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6799,
									"end": 6820,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6799,
									"end": 6820,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6799,
									"end": 6820,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6799,
									"end": 6820,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6799,
									"end": 6820,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7019,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7023,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7032,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7032,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7032,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7032,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7032,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7032,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 6632,
									"end": 7057,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7087,
									"end": 7089,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7081,
									"end": 7085,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7091,
									"end": 7096,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5564,
									"end": 5589,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5564,
									"end": 5589,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5552,
									"end": 5554,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5537,
									"end": 5555,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5537,
									"end": 5555,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5418,
									"end": 5595,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7072,
									"end": 7097,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 7104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 7104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 7104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 7104,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 521,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 146,
									"end": 521,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 234,
									"end": 235,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 257,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 266,
									"end": 515,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 266,
									"end": 515,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 287,
									"end": 288,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 277,
									"end": 285,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 274,
									"end": 289,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 266,
									"end": 515,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 266,
									"end": 515,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 266,
									"end": 515,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 337,
									"end": 341,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 332,
									"end": 335,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 328,
									"end": 342,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 322,
									"end": 326,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 319,
									"end": 343,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 316,
									"end": 366,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 316,
									"end": 366,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 316,
									"end": 366,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 346,
									"end": 364,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 346,
									"end": 364,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 346,
									"end": 364,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 346,
									"end": 364,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 346,
									"end": 364,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 396,
									"end": 397,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 394,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 382,
									"end": 398,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 379,
									"end": 428,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 379,
									"end": 428,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 379,
									"end": 428,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 410,
									"end": 426,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 410,
									"end": 426,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 410,
									"end": 426,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 410,
									"end": 426,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 379,
									"end": 428,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 379,
									"end": 428,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 493,
									"end": 494,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 489,
									"end": 505,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 489,
									"end": 505,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 489,
									"end": 505,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 489,
									"end": 505,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 489,
									"end": 505,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 449,
									"end": 464,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 449,
									"end": 464,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 266,
									"end": 515,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 266,
									"end": 515,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 266,
									"end": 515,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 266,
									"end": 515,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 146,
									"end": 521,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 146,
									"end": 521,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 521,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 146,
									"end": 521,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 521,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 521,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 521,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 526,
									"end": 1428,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 526,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 575,
									"end": 580,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 605,
									"end": 613,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 595,
									"end": 675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 595,
									"end": 675,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 646,
									"end": 647,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 660,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 660,
									"end": 665,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 595,
									"end": 675,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 595,
									"end": 675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 694,
									"end": 698,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 684,
									"end": 760,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 684,
									"end": 760,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 731,
									"end": 732,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 745,
									"end": 750,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 745,
									"end": 750,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 684,
									"end": 760,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 684,
									"end": 760,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 776,
									"end": 780,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 794,
									"end": 795,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 789,
									"end": 848,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 789,
									"end": 848,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 789,
									"end": 848,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 789,
									"end": 848,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 862,
									"end": 863,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 857,
									"end": 1031,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 857,
									"end": 1031,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 857,
									"end": 1031,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 857,
									"end": 1031,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 769,
									"end": 1031,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 769,
									"end": 1031,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 789,
									"end": 848,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 789,
									"end": 848,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 819,
									"end": 820,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 810,
									"end": 820,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 810,
									"end": 820,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 833,
									"end": 838,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 833,
									"end": 838,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 833,
									"end": 838,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 857,
									"end": 1031,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 857,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 894,
									"end": 897,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 884,
									"end": 892,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 881,
									"end": 898,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 878,
									"end": 921,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 878,
									"end": 921,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 878,
									"end": 921,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 901,
									"end": 919,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 901,
									"end": 919,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 901,
									"end": 919,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 901,
									"end": 919,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 901,
									"end": 919,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 957,
									"end": 958,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 943,
									"end": 959,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 943,
									"end": 959,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1016,
									"end": 1021,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1016,
									"end": 1021,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 769,
									"end": 1031,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 769,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 769,
									"end": 1031,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1117,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1105,
									"end": 1113,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1102,
									"end": 1118,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1096,
									"end": 1099,
									"name": "PUSH",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 1090,
									"end": 1094,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1100,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1083,
									"end": 1119,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1077,
									"end": 1079,
									"name": "PUSH",
									"source": 6,
									"value": "4E"
								},
								{
									"begin": 1067,
									"end": 1075,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1064,
									"end": 1080,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1059,
									"end": 1061,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1053,
									"end": 1057,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1046,
									"end": 1081,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1043,
									"end": 1120,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1243,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 1040,
									"end": 1243,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1152,
									"end": 1171,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1152,
									"end": 1171,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1152,
									"end": 1171,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1228,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1228,
									"end": 1233,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1243,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 1040,
									"end": 1243,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1275,
									"end": 1317,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1300,
									"end": 1308,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1294,
									"end": 1298,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1275,
									"end": 1317,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1275,
									"end": 1317,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1275,
									"end": 1317,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 1275,
									"end": 1317,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1349,
									"end": 1350,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1351,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1341,
									"end": 1360,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1332,
									"end": 1339,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1384,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1384,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 1326,
									"end": 1384,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1364,
									"end": 1382,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 1364,
									"end": 1382,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1364,
									"end": 1382,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1364,
									"end": 1382,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 1364,
									"end": 1382,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1402,
									"end": 1422,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1402,
									"end": 1422,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 526,
									"end": 1428,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 526,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 526,
									"end": 1428,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 526,
									"end": 1428,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 526,
									"end": 1428,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 526,
									"end": 1428,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 526,
									"end": 1428,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1433,
									"end": 1564,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1433,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1493,
									"end": 1498,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1522,
									"end": 1558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 1549,
									"end": 1557,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1543,
									"end": 1547,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1522,
									"end": 1558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1522,
									"end": 1558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1522,
									"end": 1558,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 1522,
									"end": 1558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1513,
									"end": 1558,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1433,
									"end": 1564,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1433,
									"end": 1564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1569,
									"end": 1737,
									"name": "tag",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1569,
									"end": 1737,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1642,
									"end": 1651,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1642,
									"end": 1651,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1642,
									"end": 1651,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1673,
									"end": 1682,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1673,
									"end": 1682,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1705,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1705,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1705,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1706,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1706,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1670,
									"end": 1707,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1660,
									"end": 1731,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1660,
									"end": 1731,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1711,
									"end": 1729,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 1711,
									"end": 1729,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1711,
									"end": 1729,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1742,
									"end": 1869,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1742,
									"end": 1869,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1803,
									"end": 1813,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1798,
									"end": 1801,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1794,
									"end": 1814,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1791,
									"end": 1792,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1784,
									"end": 1815,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 1838,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1831,
									"end": 1832,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1824,
									"end": 1839,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1858,
									"end": 1862,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1855,
									"end": 1856,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1848,
									"end": 1863,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1874,
									"end": 2254,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1874,
									"end": 2254,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1953,
									"end": 1954,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1949,
									"end": 1961,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1949,
									"end": 1961,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1949,
									"end": 1961,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1949,
									"end": 1961,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1996,
									"end": 2008,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1996,
									"end": 2008,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1996,
									"end": 2008,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2017,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 2017,
									"end": 2078,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2071,
									"end": 2075,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 2063,
									"end": 2069,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2059,
									"end": 2076,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2049,
									"end": 2076,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2049,
									"end": 2076,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2017,
									"end": 2078,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 2017,
									"end": 2078,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2124,
									"end": 2126,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2116,
									"end": 2122,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2113,
									"end": 2127,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2093,
									"end": 2111,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2090,
									"end": 2128,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2087,
									"end": 2248,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 2087,
									"end": 2248,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2170,
									"end": 2180,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 2165,
									"end": 2168,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 2161,
									"end": 2181,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2158,
									"end": 2159,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2151,
									"end": 2182,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2205,
									"end": 2209,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2202,
									"end": 2203,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2195,
									"end": 2210,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2233,
									"end": 2237,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2230,
									"end": 2231,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2223,
									"end": 2238,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2087,
									"end": 2248,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 2087,
									"end": 2248,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2087,
									"end": 2248,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1874,
									"end": 2254,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1874,
									"end": 2254,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1874,
									"end": 2254,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1874,
									"end": 2254,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2385,
									"end": 2903,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2385,
									"end": 2903,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2487,
									"end": 2489,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2482,
									"end": 2485,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2479,
									"end": 2490,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2476,
									"end": 2897,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2476,
									"end": 2897,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 2476,
									"end": 2897,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2523,
									"end": 2528,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2520,
									"end": 2521,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2513,
									"end": 2529,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2567,
									"end": 2571,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2564,
									"end": 2565,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2554,
									"end": 2572,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2637,
									"end": 2639,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2625,
									"end": 2635,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2621,
									"end": 2640,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2618,
									"end": 2619,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2614,
									"end": 2641,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2612,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2604,
									"end": 2642,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2673,
									"end": 2677,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2661,
									"end": 2671,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2658,
									"end": 2678,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2655,
									"end": 2702,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2655,
									"end": 2702,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 2655,
									"end": 2702,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2655,
									"end": 2702,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 2655,
									"end": 2702,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2751,
									"end": 2753,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2746,
									"end": 2749,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2742,
									"end": 2754,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2739,
									"end": 2740,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2735,
									"end": 2755,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2729,
									"end": 2733,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2725,
									"end": 2756,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2756,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2756,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2806,
									"end": 2887,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 2806,
									"end": 2887,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2824,
									"end": 2826,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2817,
									"end": 2822,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2814,
									"end": 2827,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2806,
									"end": 2887,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2806,
									"end": 2887,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 2806,
									"end": 2887,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2883,
									"end": 2884,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2885,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2869,
									"end": 2885,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2850,
									"end": 2851,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2839,
									"end": 2852,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2806,
									"end": 2887,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 2806,
									"end": 2887,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2806,
									"end": 2887,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 2806,
									"end": 2887,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2810,
									"end": 2813,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2810,
									"end": 2813,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2476,
									"end": 2897,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 2476,
									"end": 2897,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2385,
									"end": 2903,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2385,
									"end": 2903,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2385,
									"end": 2903,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2385,
									"end": 2903,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3079,
									"end": 4378,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 3079,
									"end": 4378,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3209,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3199,
									"end": 3209,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3221,
									"end": 3251,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3221,
									"end": 3251,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3218,
									"end": 3274,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3218,
									"end": 3274,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3218,
									"end": 3274,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3254,
									"end": 3272,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3254,
									"end": 3272,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 3254,
									"end": 3272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3254,
									"end": 3272,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3254,
									"end": 3272,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3283,
									"end": 3380,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 3373,
									"end": 3379,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3333,
									"end": 3371,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 3365,
									"end": 3369,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3370,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3333,
									"end": 3371,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 3333,
									"end": 3371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3333,
									"end": 3371,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 3333,
									"end": 3371,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3327,
									"end": 3331,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3283,
									"end": 3380,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3283,
									"end": 3380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3283,
									"end": 3380,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 3283,
									"end": 3380,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3433,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3460,
									"end": 3462,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3449,
									"end": 3463,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3449,
									"end": 3463,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3477,
									"end": 3478,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3472,
									"end": 4121,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3472,
									"end": 4121,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3472,
									"end": 4121,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 3472,
									"end": 4121,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4165,
									"end": 4166,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4182,
									"end": 4188,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4179,
									"end": 4268,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4179,
									"end": 4268,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4179,
									"end": 4268,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4234,
									"end": 4253,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4234,
									"end": 4253,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4234,
									"end": 4253,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4228,
									"end": 4254,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4179,
									"end": 4268,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4179,
									"end": 4268,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3036,
									"end": 3037,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3032,
									"end": 3043,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3032,
									"end": 3043,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3032,
									"end": 3043,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3028,
									"end": 3052,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3024,
									"end": 3053,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3014,
									"end": 3054,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3060,
									"end": 3061,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3056,
									"end": 3067,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3056,
									"end": 3067,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3056,
									"end": 3067,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3011,
									"end": 3068,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4281,
									"end": 4362,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4281,
									"end": 4362,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3442,
									"end": 4372,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 3442,
									"end": 4372,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3472,
									"end": 4121,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 3472,
									"end": 4121,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2332,
									"end": 2333,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2339,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2325,
									"end": 2339,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2325,
									"end": 2339,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2369,
									"end": 2373,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2356,
									"end": 2374,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2356,
									"end": 2374,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3508,
									"end": 3528,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3508,
									"end": 3528,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3508,
									"end": 3528,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3626,
									"end": 3848,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3626,
									"end": 3848,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3640,
									"end": 3647,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3637,
									"end": 3638,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3634,
									"end": 3648,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3626,
									"end": 3848,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3626,
									"end": 3848,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 3626,
									"end": 3848,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3722,
									"end": 3741,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3722,
									"end": 3741,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3722,
									"end": 3741,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3716,
									"end": 3742,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3701,
									"end": 3743,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3701,
									"end": 3743,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3829,
									"end": 3833,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3814,
									"end": 3834,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3814,
									"end": 3834,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3814,
									"end": 3834,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3814,
									"end": 3834,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3782,
									"end": 3783,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3770,
									"end": 3784,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3770,
									"end": 3784,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3770,
									"end": 3784,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3770,
									"end": 3784,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3656,
									"end": 3668,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3626,
									"end": 3848,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3626,
									"end": 3848,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3626,
									"end": 3848,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 3626,
									"end": 3848,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3630,
									"end": 3633,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3876,
									"end": 3882,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3874,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3864,
									"end": 3883,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3861,
									"end": 4062,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3861,
									"end": 4062,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 3861,
									"end": 4062,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3937,
									"end": 3956,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3937,
									"end": 3956,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3937,
									"end": 3956,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3931,
									"end": 3957,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4020,
									"end": 4021,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 4016,
									"end": 4030,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 4016,
									"end": 4030,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4016,
									"end": 4030,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4032,
									"end": 4035,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 4012,
									"end": 4036,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4008,
									"end": 4045,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 4004,
									"end": 4046,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3989,
									"end": 4047,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3974,
									"end": 4048,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3974,
									"end": 4048,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3861,
									"end": 4062,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 3861,
									"end": 4062,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4108,
									"end": 4109,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4092,
									"end": 4106,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4092,
									"end": 4106,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4092,
									"end": 4106,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4088,
									"end": 4110,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4075,
									"end": 4111,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4075,
									"end": 4111,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3079,
									"end": 4378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4383,
									"end": 4592,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 4383,
									"end": 4592,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4415,
									"end": 4416,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4441,
									"end": 4442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4431,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 4431,
									"end": 4563,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4485,
									"end": 4495,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 4480,
									"end": 4483,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 4476,
									"end": 4496,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4473,
									"end": 4474,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4466,
									"end": 4497,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4520,
									"end": 4524,
									"name": "PUSH",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 4517,
									"end": 4518,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 4510,
									"end": 4525,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4548,
									"end": 4552,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4545,
									"end": 4546,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4538,
									"end": 4553,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4431,
									"end": 4563,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 4431,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4577,
									"end": 4586,
									"name": "MOD",
									"source": 6
								},
								{
									"begin": 4577,
									"end": 4586,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4383,
									"end": 4592,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4597,
									"end": 4725,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 4597,
									"end": 4725,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4664,
									"end": 4673,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4664,
									"end": 4673,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4664,
									"end": 4673,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 4685,
									"end": 4696,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4685,
									"end": 4696,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4685,
									"end": 4696,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4682,
									"end": 4719,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4682,
									"end": 4719,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 4682,
									"end": 4719,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4699,
									"end": 4717,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 4699,
									"end": 4717,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 4699,
									"end": 4717,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4938,
									"end": 5063,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 4938,
									"end": 5063,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5024,
									"end": 5034,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5024,
									"end": 5034,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5024,
									"end": 5034,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5021,
									"end": 5057,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5021,
									"end": 5057,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 5021,
									"end": 5057,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5037,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 5037,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 5037,
									"end": 5055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5418,
									"end": 5595,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 5418,
									"end": 5595,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 128,
									"end": 14009,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 14009,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 128,
									"end": 14009,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 14009,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 14009,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 128,
									"end": 14009,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 14009,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207bb390c0fe449a171cfc6aba242f295677db9e2a72560f4731b0f5aebd363d1064736f6c634300081d0033",
									".code": [
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "838FCC90"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "C4863770"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "F66608FE"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "FDEB889F"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "FFB54A99"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "C4863770"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "C9567BF9"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "CBA0E996"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "D00EFB2F"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "A8B08982"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "C30796AB"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "838FCC90"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "83AD7994"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "8873B15F"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "3AF32ABF"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "5FAE0576"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "5FAE0576"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "6049876E"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "706407FD"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "3AF32ABF"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "437823EC"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "4549B039"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "5342ACB4"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "1CF8FEF5"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "1CF8FEF5"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "32035504"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "53AB182"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 14009,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4068,
											"end": 4472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4068,
											"end": 4472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1330,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1316,
											"end": 1330,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1332,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1332,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1281,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1151,
											"end": 1338,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2201,
											"end": 2302,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2201,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2302,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2302,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2302,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2201,
											"end": 2302,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2302,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2302,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2302,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2302,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2201,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2302,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2201,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2302,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2201,
											"end": 2302,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1479,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2201,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1343,
											"end": 1520,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2603,
											"end": 2709,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2603,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2709,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2709,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2709,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2603,
											"end": 2709,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2709,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2603,
											"end": 2709,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2603,
											"end": 2709,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2709,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2603,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2683,
											"end": 2702,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2683,
											"end": 2702,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2683,
											"end": 2702,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2709,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2603,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2709,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2603,
											"end": 2709,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1689,
											"end": 1721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1721,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1721,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1722,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1661,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2603,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1525,
											"end": 1728,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2195,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2097,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2195,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2195,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2097,
											"end": 2195,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2195,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2195,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2195,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2195,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2097,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2179,
											"end": 2188,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2179,
											"end": 2188,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2195,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2195,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2188,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2179,
											"end": 2188,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2188,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2188,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2290,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2290,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2242,
											"end": 2244,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2227,
											"end": 2245,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2097,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2112,
											"end": 2296,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3328,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 3230,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3328,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3328,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3328,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3230,
											"end": 3328,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3328,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3230,
											"end": 3328,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3230,
											"end": 3328,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3328,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3230,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3311,
											"end": 3321,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 3311,
											"end": 3321,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3230,
											"end": 3328,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 313,
											"end": 358,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 313,
											"end": 358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 313,
											"end": 358,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 313,
											"end": 358,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 358,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 313,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 313,
											"end": 358,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 313,
											"end": 358,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 358,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 358,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 313,
											"end": 358,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 313,
											"end": 358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 313,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 313,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 313,
											"end": 358,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 313,
											"end": 358,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 313,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 313,
											"end": 358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 313,
											"end": 358,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 313,
											"end": 358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 313,
											"end": 358,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 313,
											"end": 358,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 358,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 313,
											"end": 358,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 358,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 313,
											"end": 358,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 313,
											"end": 358,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 313,
											"end": 358,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 313,
											"end": 358,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 313,
											"end": 358,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 313,
											"end": 358,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 313,
											"end": 358,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 313,
											"end": 358,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3334,
											"end": 3443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3334,
											"end": 3443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4478,
											"end": 4952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4478,
											"end": 4952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2715,
											"end": 2837,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2715,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2715,
											"end": 2837,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2715,
											"end": 2837,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2715,
											"end": 2837,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2715,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2715,
											"end": 2837,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2715,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2715,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2715,
											"end": 2837,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2715,
											"end": 2837,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2715,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2715,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2715,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2715,
											"end": 2837,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2715,
											"end": 2837,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2715,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2715,
											"end": 2837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2715,
											"end": 2837,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2715,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2784,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2821,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2715,
											"end": 2837,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6088,
											"end": 6208,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 6088,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6088,
											"end": 6208,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 6088,
											"end": 6208,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6088,
											"end": 6208,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6088,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 6088,
											"end": 6208,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6088,
											"end": 6208,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6088,
											"end": 6208,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6088,
											"end": 6208,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6088,
											"end": 6208,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 6088,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6088,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 6088,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 6088,
											"end": 6208,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6088,
											"end": 6208,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6088,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 6088,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6088,
											"end": 6208,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 6088,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6156,
											"end": 6160,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6192,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6088,
											"end": 6208,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 5273,
											"end": 5605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 5273,
											"end": 5605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3699,
											"end": 3947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3699,
											"end": 3947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2843,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2843,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2495,
											"end": 2597,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2495,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2495,
											"end": 2597,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2495,
											"end": 2597,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2495,
											"end": 2597,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2495,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2495,
											"end": 2597,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2495,
											"end": 2597,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2597,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2597,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2495,
											"end": 2597,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2495,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2573,
											"end": 2590,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2573,
											"end": 2590,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2573,
											"end": 2590,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2495,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2495,
											"end": 2597,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2401,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2308,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2401,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2401,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2401,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2308,
											"end": 2401,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2401,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2401,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2401,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2401,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2308,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2380,
											"end": 2394,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 2380,
											"end": 2394,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2308,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2308,
											"end": 2401,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3953,
											"end": 4062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3953,
											"end": 4062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1934,
											"end": 2019,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 891,
											"end": 917,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 891,
											"end": 917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 891,
											"end": 917,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 891,
											"end": 917,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 891,
											"end": 917,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 891,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 891,
											"end": 917,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 891,
											"end": 917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 917,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 891,
											"end": 917,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 891,
											"end": 917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 891,
											"end": 917,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 891,
											"end": 917,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 891,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 891,
											"end": 917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 891,
											"end": 917,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 891,
											"end": 917,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 891,
											"end": 917,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 6214,
											"end": 6398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 6214,
											"end": 6398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3449,
											"end": 3693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 3449,
											"end": 3693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6404,
											"end": 6517,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 6404,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6404,
											"end": 6517,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 6404,
											"end": 6517,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6404,
											"end": 6517,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6404,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 6404,
											"end": 6517,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6404,
											"end": 6517,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6404,
											"end": 6517,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6404,
											"end": 6517,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6404,
											"end": 6517,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 6404,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6404,
											"end": 6517,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6404,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 6404,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 6404,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3116,
											"end": 3224,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3116,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3116,
											"end": 3224,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3116,
											"end": 3224,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3116,
											"end": 3224,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3116,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3116,
											"end": 3224,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3116,
											"end": 3224,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3224,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3224,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3116,
											"end": 3224,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3116,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3116,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3116,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3116,
											"end": 3224,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3116,
											"end": 3224,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3116,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3116,
											"end": 3224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3116,
											"end": 3224,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3116,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3197,
											"end": 3217,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3217,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3217,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3208,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3197,
											"end": 3217,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3197,
											"end": 3217,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3217,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3197,
											"end": 3217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3217,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3217,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3217,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3197,
											"end": 3217,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3116,
											"end": 3224,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 998,
											"end": 1024,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 998,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 998,
											"end": 1024,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 998,
											"end": 1024,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 998,
											"end": 1024,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 998,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 998,
											"end": 1024,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 998,
											"end": 1024,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1024,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1024,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 998,
											"end": 1024,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 998,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 998,
											"end": 1024,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 998,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 998,
											"end": 1024,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 998,
											"end": 1024,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 998,
											"end": 1024,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 998,
											"end": 1024,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2489,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2407,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2489,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2489,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2489,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2407,
											"end": 2489,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2489,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2489,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2407,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2475,
											"end": 2482,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2475,
											"end": 2482,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2407,
											"end": 2489,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 5611,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 5611,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1061,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4068,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4119,
											"end": 4133,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4191,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4180,
											"end": 4199,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4158,
											"end": 4269,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4269,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4158,
											"end": 4269,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4158,
											"end": 4269,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4269,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3361,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4158,
											"end": 4269,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4269,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4269,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3362,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3400,
											"name": "PUSH",
											"source": 6,
											"value": "2C"
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3371,
											"end": 3401,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3471,
											"name": "PUSH",
											"source": 6,
											"value": "4578636C75646564206164647265737365732063616E6E6F742063616C6C2074"
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3410,
											"end": 3472,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3434B990333AB731BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3481,
											"end": 3523,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3559,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3540,
											"end": 3559,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4158,
											"end": 4269,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4158,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4269,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4158,
											"end": 4269,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4269,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4269,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4269,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4269,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4269,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4269,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4158,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4280,
											"end": 4295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4305,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 4324,
											"end": 4331,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4305,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 4305,
											"end": 4332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4305,
											"end": 4332,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 4305,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4360,
											"end": 4375,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4375,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4375,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4360,
											"end": 4375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4375,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4375,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4367,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4360,
											"end": 4375,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4375,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4375,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4360,
											"end": 4375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4375,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4375,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4279,
											"end": 4332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4279,
											"end": 4332,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4360,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 4360,
											"end": 4385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4279,
											"end": 4332,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4279,
											"end": 4332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 4360,
											"end": 4385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4385,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 4360,
											"end": 4385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4342,
											"end": 4357,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4342,
											"end": 4357,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4342,
											"end": 4357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4342,
											"end": 4357,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4342,
											"end": 4357,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4342,
											"end": 4349,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4342,
											"end": 4357,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4342,
											"end": 4357,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4342,
											"end": 4357,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4342,
											"end": 4357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4342,
											"end": 4357,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4342,
											"end": 4385,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4405,
											"end": 4412,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 4405,
											"end": 4412,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4405,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4405,
											"end": 4422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4415,
											"end": 4422,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4415,
											"end": 4422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4405,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 4405,
											"end": 4422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4405,
											"end": 4422,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4405,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4395,
											"end": 4402,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 4395,
											"end": 4422,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4445,
											"end": 4455,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 4445,
											"end": 4455,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4445,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4445,
											"end": 4465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4445,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 4445,
											"end": 4465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4445,
											"end": 4465,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4445,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4432,
											"end": 4442,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 4432,
											"end": 4465,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4068,
											"end": 4472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2060,
											"end": 2081,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2056,
											"end": 2084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3402,
											"end": 3429,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3402,
											"end": 3429,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3402,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3429,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3402,
											"end": 3429,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3402,
											"end": 3429,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3402,
											"end": 3420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3402,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3402,
											"end": 3429,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3402,
											"end": 3429,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3402,
											"end": 3429,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3402,
											"end": 3429,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3402,
											"end": 3436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3402,
											"end": 3436,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3402,
											"end": 3436,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3402,
											"end": 3436,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3402,
											"end": 3436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3402,
											"end": 3436,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2084,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2056,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4478,
											"end": 4952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4600,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4635,
											"end": 4642,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 4635,
											"end": 4642,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4624,
											"end": 4642,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4624,
											"end": 4642,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4616,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 4616,
											"end": 4678,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4616,
											"end": 4678,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4616,
											"end": 4678,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4616,
											"end": 4678,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4616,
											"end": 4678,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4552,
											"end": 4554,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4616,
											"end": 4678,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4616,
											"end": 4678,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4616,
											"end": 4678,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4534,
											"end": 4555,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4593,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4594,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4663,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E74206D757374206265206C657373207468616E20737570706C7900"
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4664,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4616,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4350,
											"end": 4705,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4616,
											"end": 4678,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 4616,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4693,
											"end": 4710,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4688,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 4688,
											"end": 4946,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4727,
											"end": 4742,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4752,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 4771,
											"end": 4778,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4752,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 4752,
											"end": 4779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4752,
											"end": 4779,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 4752,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4726,
											"end": 4779,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4779,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4793,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4793,
											"end": 4807,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4793,
											"end": 4807,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4688,
											"end": 4946,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 4688,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4841,
											"end": 4864,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4872,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 4891,
											"end": 4898,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 4872,
											"end": 4899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4899,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 4872,
											"end": 4899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4838,
											"end": 4899,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4899,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4913,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4913,
											"end": 4935,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4913,
											"end": 4935,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2060,
											"end": 2081,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2056,
											"end": 2084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5360,
											"end": 5380,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5380,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5360,
											"end": 5380,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5380,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5380,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 5360,
											"end": 5380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5360,
											"end": 5380,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5380,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5360,
											"end": 5380,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5380,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5380,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5360,
											"end": 5380,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5380,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5351,
											"end": 5412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 5351,
											"end": 5412,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5351,
											"end": 5412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5351,
											"end": 5412,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5351,
											"end": 5412,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5351,
											"end": 5412,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 4914,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5351,
											"end": 5412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5351,
											"end": 5412,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5351,
											"end": 5412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4894,
											"end": 4915,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 4953,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4924,
											"end": 4954,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4990,
											"end": 5019,
											"name": "PUSH",
											"source": 6,
											"value": "4163636F756E7420697320616C7265616479206578636C756465640000000000"
										},
										{
											"begin": 4970,
											"end": 4988,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4970,
											"end": 4988,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4970,
											"end": 4988,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4963,
											"end": 5020,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5037,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5037,
											"end": 5055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5351,
											"end": 5412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4710,
											"end": 5061,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5351,
											"end": 5412,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 5351,
											"end": 5412,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5426,
											"end": 5442,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5426,
											"end": 5442,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5426,
											"end": 5442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5426,
											"end": 5442,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5426,
											"end": 5442,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5426,
											"end": 5433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5426,
											"end": 5442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5426,
											"end": 5442,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5426,
											"end": 5442,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5426,
											"end": 5442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5426,
											"end": 5442,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5426,
											"end": 5442,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5426,
											"end": 5446,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 5422,
											"end": 5529,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5501,
											"end": 5517,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5501,
											"end": 5517,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5501,
											"end": 5517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5501,
											"end": 5517,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5501,
											"end": 5517,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5501,
											"end": 5517,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5501,
											"end": 5508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5501,
											"end": 5517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5501,
											"end": 5517,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5501,
											"end": 5517,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5501,
											"end": 5517,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5501,
											"end": 5517,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5501,
											"end": 5517,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5481,
											"end": 5518,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 5481,
											"end": 5518,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5481,
											"end": 5500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 5481,
											"end": 5518,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5481,
											"end": 5518,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 5481,
											"end": 5518,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5478,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5462,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5478,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5462,
											"end": 5518,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 5422,
											"end": 5529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5538,
											"end": 5558,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5538,
											"end": 5558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5538,
											"end": 5549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 5538,
											"end": 5558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5538,
											"end": 5558,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5538,
											"end": 5565,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5538,
											"end": 5565,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5538,
											"end": 5565,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5561,
											"end": 5565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5538,
											"end": 5565,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5538,
											"end": 5565,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5538,
											"end": 5565,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 5538,
											"end": 5565,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5538,
											"end": 5565,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5538,
											"end": 5565,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 5575,
											"end": 5598,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5598,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5598,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5598,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5598,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5598,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5598,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5598,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5598,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5598,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5598,
											"name": "PUSH",
											"source": 5,
											"value": "C65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8"
										},
										{
											"begin": 5575,
											"end": 5598,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5598,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5598,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5575,
											"end": 5598,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5598,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5598,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5598,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5598,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5598,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5273,
											"end": 5605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2060,
											"end": 2081,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2056,
											"end": 2084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3804,
											"end": 3831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3804,
											"end": 3831,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3783,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 3783,
											"end": 3895,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3783,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3783,
											"end": 3895,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3783,
											"end": 3895,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3783,
											"end": 3895,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3783,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3783,
											"end": 3895,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3783,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 3783,
											"end": 3895,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3783,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 3783,
											"end": 3895,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3783,
											"end": 3895,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 3783,
											"end": 3895,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 3924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3905,
											"end": 3940,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 3940,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3905,
											"end": 3940,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 3940,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3905,
											"end": 3940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 3940,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 3940,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 3940,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 3940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3905,
											"end": 3940,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3947,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2843,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2983,
											"end": 3002,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3002,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2956,
											"end": 2963,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2983,
											"end": 3002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3002,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3002,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 2994,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2983,
											"end": 3002,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2983,
											"end": 3002,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3002,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2983,
											"end": 3002,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3002,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3002,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3002,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2983,
											"end": 3002,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3051,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 2979,
											"end": 3051,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3025,
											"end": 3040,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3040,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3040,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3040,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3040,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3032,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3025,
											"end": 3040,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3040,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3040,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3025,
											"end": 3040,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3040,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3040,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3040,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 3110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3051,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 2979,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3094,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3102,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3067,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3067,
											"end": 3103,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3067,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 3067,
											"end": 3103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2060,
											"end": 2081,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2056,
											"end": 2084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4029,
											"end": 4040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 4029,
											"end": 4055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4029,
											"end": 4055,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4029,
											"end": 4055,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4029,
											"end": 4055,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4029,
											"end": 4055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4029,
											"end": 4055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4029,
											"end": 4055,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4029,
											"end": 4055,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4029,
											"end": 4055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4029,
											"end": 4055,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4062,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2060,
											"end": 2081,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2056,
											"end": 2084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6317,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6308,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 6295,
											"end": 6317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6317,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6295,
											"end": 6317,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6294,
											"end": 6317,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6286,
											"end": 6352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 6286,
											"end": 6352,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6286,
											"end": 6352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6286,
											"end": 6352,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6286,
											"end": 6352,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6286,
											"end": 6352,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5675,
											"end": 5677,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6286,
											"end": 6352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6286,
											"end": 6352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6286,
											"end": 6352,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5657,
											"end": 5678,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5714,
											"end": 5716,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5687,
											"end": 5717,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5785,
											"name": "PUSH",
											"source": 6,
											"value": "4164647265737320697320616C72656164792077686974656C69737465640000"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5726,
											"end": 5786,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5803,
											"end": 5821,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5803,
											"end": 5821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 5473,
											"end": 5827,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6286,
											"end": 6352,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 6286,
											"end": 6352,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6362,
											"end": 6384,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6362,
											"end": 6384,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6362,
											"end": 6384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6362,
											"end": 6384,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6362,
											"end": 6384,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6362,
											"end": 6384,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6362,
											"end": 6375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 6362,
											"end": 6384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6362,
											"end": 6384,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6362,
											"end": 6384,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6384,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6362,
											"end": 6384,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6362,
											"end": 6391,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6362,
											"end": 6391,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6362,
											"end": 6391,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6387,
											"end": 6391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6362,
											"end": 6391,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6362,
											"end": 6391,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6362,
											"end": 6391,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6398,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2060,
											"end": 2081,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2056,
											"end": 2084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3552,
											"end": 3579,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3552,
											"end": 3579,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 3531,
											"end": 3643,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3643,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3531,
											"end": 3643,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3643,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3531,
											"end": 3643,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 3531,
											"end": 3643,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 3531,
											"end": 3643,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3643,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 3531,
											"end": 3643,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3653,
											"end": 3670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3653,
											"end": 3686,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3653,
											"end": 3686,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3653,
											"end": 3686,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3449,
											"end": 3693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6404,
											"end": 6517,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 6404,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2060,
											"end": 2081,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 2056,
											"end": 2084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6456,
											"end": 6467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 6456,
											"end": 6474,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6456,
											"end": 6474,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6456,
											"end": 6474,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6470,
											"end": 6474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6456,
											"end": 6474,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6456,
											"end": 6474,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6456,
											"end": 6474,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6498,
											"end": 6510,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 6484,
											"end": 6495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 6484,
											"end": 6510,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2084,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 2056,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6404,
											"end": 6517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2060,
											"end": 2081,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2056,
											"end": 2084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5695,
											"end": 5715,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5715,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5695,
											"end": 5715,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5715,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5715,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 5695,
											"end": 5715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5695,
											"end": 5715,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5715,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5695,
											"end": 5715,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5715,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5715,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5695,
											"end": 5715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5695,
											"end": 5715,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5687,
											"end": 5747,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 5687,
											"end": 5747,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5687,
											"end": 5747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5687,
											"end": 5747,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5687,
											"end": 5747,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5687,
											"end": 5747,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6036,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5687,
											"end": 5747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5687,
											"end": 5747,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5687,
											"end": 5747,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6075,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 6053,
											"end": 6071,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6053,
											"end": 6071,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6053,
											"end": 6071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6046,
											"end": 6076,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6112,
											"end": 6141,
											"name": "PUSH",
											"source": 6,
											"value": "4163636F756E7420697320616C726561647920696E636C756465640000000000"
										},
										{
											"begin": 6092,
											"end": 6110,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6092,
											"end": 6110,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6110,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6085,
											"end": 6142,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6159,
											"end": 6177,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6159,
											"end": 6177,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5687,
											"end": 5747,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 5832,
											"end": 6183,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5687,
											"end": 5747,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 5687,
											"end": 5747,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5762,
											"end": 5771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5757,
											"end": 6076,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 5757,
											"end": 6076,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5781,
											"end": 5790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 5781,
											"end": 5797,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5777,
											"end": 5797,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5777,
											"end": 5797,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 6076,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 6076,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 5757,
											"end": 6076,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5838,
											"end": 5845,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5822,
											"end": 5845,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 5832,
											"end": 5833,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5834,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5834,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5834,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5834,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 5822,
											"end": 5834,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 5822,
											"end": 5834,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 5822,
											"end": 5834,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5834,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 5822,
											"end": 5834,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5822,
											"end": 5834,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5834,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5834,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5822,
											"end": 5834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5834,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5834,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5834,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5834,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5822,
											"end": 5834,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5845,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5818,
											"end": 6066,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 5818,
											"end": 6066,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 5890,
											"end": 5906,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5890,
											"end": 5906,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5890,
											"end": 5910,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 5890,
											"end": 5910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5909,
											"end": 5910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5909,
											"end": 5910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5890,
											"end": 5910,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 5890,
											"end": 5910,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5890,
											"end": 5910,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 5890,
											"end": 5910,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5911,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5911,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 5880,
											"end": 5911,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 5880,
											"end": 5911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 5880,
											"end": 5911,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 5880,
											"end": 5911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5880,
											"end": 5911,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5911,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5911,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5880,
											"end": 5911,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5911,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5911,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5911,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 5865,
											"end": 5877,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5877,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5880,
											"end": 5911,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5911,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5911,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5875,
											"end": 5876,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5875,
											"end": 5876,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5877,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5877,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 5865,
											"end": 5877,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 5865,
											"end": 5877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 5865,
											"end": 5877,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5877,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 5865,
											"end": 5877,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5865,
											"end": 5877,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5877,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5877,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5865,
											"end": 5877,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5877,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5877,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5877,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5877,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5877,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5877,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5911,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5911,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5865,
											"end": 5911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5865,
											"end": 5911,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5911,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5911,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5911,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5911,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5929,
											"end": 5945,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5929,
											"end": 5945,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5929,
											"end": 5945,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5929,
											"end": 5945,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5929,
											"end": 5945,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5929,
											"end": 5936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5929,
											"end": 5945,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5929,
											"end": 5945,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5929,
											"end": 5945,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5929,
											"end": 5945,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5929,
											"end": 5945,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5929,
											"end": 5945,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5929,
											"end": 5949,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5929,
											"end": 5949,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5929,
											"end": 5949,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5967,
											"end": 5978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 5967,
											"end": 5987,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5967,
											"end": 5987,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5967,
											"end": 5987,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5967,
											"end": 5987,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5967,
											"end": 5995,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5967,
											"end": 5995,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5967,
											"end": 5995,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5967,
											"end": 5995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5967,
											"end": 5995,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6028,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 6013,
											"end": 6028,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6028,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 6013,
											"end": 6028,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 6013,
											"end": 6028,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6028,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 6013,
											"end": 6028,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6013,
											"end": 6028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6028,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 6076,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 6082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5818,
											"end": 6066,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 5818,
											"end": 6066,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5799,
											"end": 5802,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 6076,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 5757,
											"end": 6076,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 6076,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 5757,
											"end": 6076,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 6076,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 6082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 6082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11803,
											"end": 12340,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 11803,
											"end": 12340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11907,
											"end": 11914,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11928,
											"end": 11935,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11949,
											"end": 11956,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11970,
											"end": 11977,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12002,
											"end": 12018,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12021,
											"end": 12050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 12042,
											"end": 12049,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 12021,
											"end": 12041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 12021,
											"end": 12050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12021,
											"end": 12050,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 12021,
											"end": 12050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12002,
											"end": 12050,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12060,
											"end": 12083,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12086,
											"end": 12104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 12002,
											"end": 12050,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12086,
											"end": 12093,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 12086,
											"end": 12104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 12086,
											"end": 12104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12086,
											"end": 12104,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 12086,
											"end": 12104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12060,
											"end": 12104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12060,
											"end": 12104,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12114,
											"end": 12133,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12136,
											"end": 12146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 12136,
											"end": 12144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 12136,
											"end": 12146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12136,
											"end": 12146,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 12136,
											"end": 12146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12114,
											"end": 12146,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12156,
											"end": 12179,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12182,
											"end": 12211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 12114,
											"end": 12146,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12182,
											"end": 12197,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12182,
											"end": 12211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 12182,
											"end": 12211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12182,
											"end": 12211,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 12182,
											"end": 12211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12156,
											"end": 12211,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12221,
											"end": 12236,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12239,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 12249,
											"end": 12260,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12239,
											"end": 12246,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 12239,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 12239,
											"end": 12260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12239,
											"end": 12260,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 12239,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12221,
											"end": 12260,
											"name": "SWAP11",
											"source": 5
										},
										{
											"begin": 12287,
											"end": 12302,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12287,
											"end": 12302,
											"name": "SWAP10",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12304,
											"end": 12319,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12304,
											"end": 12319,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12321,
											"end": 12332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12321,
											"end": 12332,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11803,
											"end": 12340,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11803,
											"end": 12340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8715,
											"end": 8843,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 8715,
											"end": 8843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8799,
											"end": 8836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 8808,
											"end": 8813,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8815,
											"end": 8822,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8824,
											"end": 8829,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8831,
											"end": 8835,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8799,
											"end": 8807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 8799,
											"end": 8836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8799,
											"end": 8836,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 8799,
											"end": 8836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8715,
											"end": 8843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8715,
											"end": 8843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8715,
											"end": 8843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8715,
											"end": 8843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10880,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 10404,
											"end": 10880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10503,
											"end": 10527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10569,
											"end": 10605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10569,
											"end": 10605,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10565,
											"end": 10874,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10565,
											"end": 10874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 10565,
											"end": 10874,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10644,
											"end": 10649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10649,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10621,
											"end": 10751,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10621,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 10621,
											"end": 10751,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6845,
											"end": 6877,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6845,
											"end": 6877,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6878,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6912,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6894,
											"end": 6912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6912,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6921,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6921,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6921,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6937,
											"end": 6955,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6937,
											"end": 6955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6937,
											"end": 6955,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6930,
											"end": 6964,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6930,
											"end": 6964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6930,
											"end": 6964,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6800,
											"end": 6818,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6800,
											"end": 6818,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10676,
											"end": 10736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6625,
											"end": 6970,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10621,
											"end": 10751,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 10621,
											"end": 10751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10792,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 10801,
											"end": 10806,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10808,
											"end": 10815,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10836,
											"end": 10841,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10841,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10843,
											"end": 10848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10792,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 10792,
											"end": 10849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10792,
											"end": 10849,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 10792,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10493,
											"end": 10880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 7776,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 6897,
											"end": 7776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6590,
											"end": 6601,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 6590,
											"end": 6601,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7040,
											"end": 7046,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7040,
											"end": 7046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7048,
											"end": 7057,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7048,
											"end": 7057,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6590,
											"end": 6601,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6590,
											"end": 6601,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6585,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 6585,
											"end": 6874,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6625,
											"end": 6638,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6617,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 6617,
											"end": 6670,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6617,
											"end": 6670,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6617,
											"end": 6670,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6617,
											"end": 6670,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6617,
											"end": 6670,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7177,
											"end": 7179,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6617,
											"end": 6670,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6617,
											"end": 6670,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6617,
											"end": 6670,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7159,
											"end": 7180,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7216,
											"end": 7218,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 7196,
											"end": 7214,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7196,
											"end": 7214,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7214,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7189,
											"end": 7219,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7255,
											"end": 7280,
											"name": "PUSH",
											"source": 6,
											"value": "54726164696E67206E6F742079657420656E61626C6564000000000000000000"
										},
										{
											"begin": 7235,
											"end": 7253,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7235,
											"end": 7253,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7235,
											"end": 7253,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7228,
											"end": 7281,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7316,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7298,
											"end": 7316,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6617,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 6975,
											"end": 7322,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6617,
											"end": 6670,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 6617,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6585,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 6585,
											"end": 6874,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6585,
											"end": 6874,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 6585,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6707,
											"end": 6718,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 6707,
											"end": 6718,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6707,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 6707,
											"end": 6722,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6721,
											"end": 6722,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6707,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 6707,
											"end": 6722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6707,
											"end": 6722,
											"name": "tag",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 6707,
											"end": 6722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6691,
											"end": 6703,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 6691,
											"end": 6722,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6687,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 6687,
											"end": 6874,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6807,
											"end": 6824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6807,
											"end": 6824,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6807,
											"end": 6824,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6807,
											"end": 6824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6807,
											"end": 6824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6807,
											"end": 6824,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6807,
											"end": 6820,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 6807,
											"end": 6824,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6807,
											"end": 6824,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6807,
											"end": 6824,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6807,
											"end": 6824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6807,
											"end": 6824,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6807,
											"end": 6824,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6807,
											"end": 6824,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6807,
											"end": 6824,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6799,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 6799,
											"end": 6863,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6799,
											"end": 6863,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6799,
											"end": 6863,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6799,
											"end": 6863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6799,
											"end": 6863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7531,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6799,
											"end": 6863,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6799,
											"end": 6863,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6799,
											"end": 6863,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7511,
											"end": 7532,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7568,
											"end": 7570,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 7548,
											"end": 7566,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7548,
											"end": 7566,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7548,
											"end": 7566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7541,
											"end": 7571,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7607,
											"end": 7641,
											"name": "PUSH",
											"source": 6,
											"value": "4C61756E63682070726F74656374696F6E3A206E6F742077686974656C697374"
										},
										{
											"begin": 7587,
											"end": 7605,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7587,
											"end": 7605,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7587,
											"end": 7605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7580,
											"end": 7642,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7658,
											"end": 7676,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7658,
											"end": 7676,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7658,
											"end": 7676,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7651,
											"end": 7683,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7700,
											"end": 7719,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 7700,
											"end": 7719,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6799,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 7327,
											"end": 7725,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6799,
											"end": 6863,
											"name": "tag",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 6799,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7077,
											"end": 7097,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7077,
											"end": 7097,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7139,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 7069,
											"end": 7139,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7069,
											"end": 7139,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7069,
											"end": 7139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7139,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 7934,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7069,
											"end": 7139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7069,
											"end": 7139,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7069,
											"end": 7139,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7914,
											"end": 7935,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7971,
											"end": 7973,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 7951,
											"end": 7969,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7951,
											"end": 7969,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7951,
											"end": 7969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7944,
											"end": 7974,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8010,
											"end": 8044,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7983,
											"end": 8045,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8061,
											"end": 8079,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8061,
											"end": 8079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8061,
											"end": 8079,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8054,
											"end": 8089,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8106,
											"end": 8125,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 8106,
											"end": 8125,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7139,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 7730,
											"end": 8131,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7139,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 7069,
											"end": 7139,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7157,
											"end": 7180,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7157,
											"end": 7180,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7149,
											"end": 7220,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 7149,
											"end": 7220,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7149,
											"end": 7220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7149,
											"end": 7220,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7149,
											"end": 7220,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7149,
											"end": 7220,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8338,
											"end": 8340,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7149,
											"end": 7220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7149,
											"end": 7220,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7149,
											"end": 7220,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8320,
											"end": 8341,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8377,
											"end": 8379,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8350,
											"end": 8380,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8416,
											"end": 8450,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 8396,
											"end": 8414,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8396,
											"end": 8414,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8396,
											"end": 8414,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8389,
											"end": 8451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8467,
											"end": 8485,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8467,
											"end": 8485,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8467,
											"end": 8485,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8460,
											"end": 8493,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8510,
											"end": 8529,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 8510,
											"end": 8529,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7149,
											"end": 7220,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 8136,
											"end": 8535,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7149,
											"end": 7220,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 7149,
											"end": 7220,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7254,
											"end": 7271,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 7264,
											"end": 7270,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7254,
											"end": 7263,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 7254,
											"end": 7271,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7254,
											"end": 7271,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 7254,
											"end": 7271,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7271,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7271,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7319,
											"end": 7325,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7302,
											"end": 7315,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7302,
											"end": 7325,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7302,
											"end": 7325,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7281,
											"end": 7389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 7281,
											"end": 7389,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7281,
											"end": 7389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7281,
											"end": 7389,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7281,
											"end": 7389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7281,
											"end": 7389,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8742,
											"end": 8744,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7281,
											"end": 7389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7281,
											"end": 7389,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7281,
											"end": 7389,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8724,
											"end": 8745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8781,
											"end": 8783,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8754,
											"end": 8784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8820,
											"end": 8854,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 8800,
											"end": 8818,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8800,
											"end": 8818,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8800,
											"end": 8818,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8793,
											"end": 8855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8871,
											"end": 8889,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8871,
											"end": 8889,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8871,
											"end": 8889,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8864,
											"end": 8900,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8917,
											"end": 8936,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 8917,
											"end": 8936,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7281,
											"end": 7389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 8540,
											"end": 8942,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7281,
											"end": 7389,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 7281,
											"end": 7389,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2784,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2821,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2803,
											"end": 2830,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7400,
											"end": 7583,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 7400,
											"end": 7583,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7507,
											"end": 7522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 7507,
											"end": 7522,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7497,
											"end": 7503,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7474,
											"end": 7494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 7484,
											"end": 7493,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7474,
											"end": 7483,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 7474,
											"end": 7494,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7474,
											"end": 7494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 7474,
											"end": 7494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7474,
											"end": 7503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 7474,
											"end": 7503,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7474,
											"end": 7503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7474,
											"end": 7503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 7474,
											"end": 7503,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7474,
											"end": 7503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 7474,
											"end": 7503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7474,
											"end": 7522,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7474,
											"end": 7522,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7449,
											"end": 7572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 7449,
											"end": 7572,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7449,
											"end": 7572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7449,
											"end": 7572,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7449,
											"end": 7572,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7449,
											"end": 7572,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9149,
											"end": 9151,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7449,
											"end": 7572,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7449,
											"end": 7572,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9131,
											"end": 9152,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9188,
											"end": 9190,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 9168,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9168,
											"end": 9186,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9168,
											"end": 9186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9161,
											"end": 9191,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5768616C652064657465637465642121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9207,
											"end": 9225,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9207,
											"end": 9225,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9207,
											"end": 9225,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9200,
											"end": 9246,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9263,
											"end": 9281,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9263,
											"end": 9281,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7449,
											"end": 7572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 8947,
											"end": 9287,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7449,
											"end": 7572,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 7449,
											"end": 7572,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7629,
											"end": 7640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 7629,
											"end": 7640,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7592,
											"end": 7604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7592,
											"end": 7604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7619,
											"end": 7640,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7619,
											"end": 7640,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7619,
											"end": 7640,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7629,
											"end": 7640,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7629,
											"end": 7640,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7619,
											"end": 7640,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7619,
											"end": 7640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7619,
											"end": 7668,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 7619,
											"end": 7668,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7657,
											"end": 7668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 7657,
											"end": 7668,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7644,
											"end": 7668,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7644,
											"end": 7668,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7644,
											"end": 7668,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7657,
											"end": 7668,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7657,
											"end": 7668,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7644,
											"end": 7668,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7619,
											"end": 7668,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 7619,
											"end": 7668,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7615,
											"end": 7709,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7615,
											"end": 7709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 7615,
											"end": 7709,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7694,
											"end": 7698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7615,
											"end": 7709,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 7615,
											"end": 7709,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7719,
											"end": 7769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 7734,
											"end": 7740,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7742,
											"end": 7751,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7753,
											"end": 7759,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7761,
											"end": 7768,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7719,
											"end": 7733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 7719,
											"end": 7769,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7719,
											"end": 7769,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 7719,
											"end": 7769,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 7776,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 7776,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6897,
											"end": 7776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6897,
											"end": 7776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6897,
											"end": 7776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6897,
											"end": 7776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6897,
											"end": 7776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6897,
											"end": 7776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4958,
											"end": 5267,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 4958,
											"end": 5267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5105,
											"end": 5112,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 5105,
											"end": 5112,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5101,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5112,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5094,
											"end": 5112,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5073,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 5073,
											"end": 5180,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5073,
											"end": 5180,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5073,
											"end": 5180,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5073,
											"end": 5180,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5073,
											"end": 5180,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9494,
											"end": 9496,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5073,
											"end": 5180,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5073,
											"end": 5180,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5073,
											"end": 5180,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9476,
											"end": 9497,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9533,
											"end": 9535,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9513,
											"end": 9531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9506,
											"end": 9536,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9572,
											"end": 9606,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E74206D757374206265206C657373207468616E20746F74616C2072"
										},
										{
											"begin": 9552,
											"end": 9570,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9552,
											"end": 9570,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9552,
											"end": 9570,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9545,
											"end": 9607,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65666C656374696F6E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9623,
											"end": 9641,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9623,
											"end": 9641,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9623,
											"end": 9641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9616,
											"end": 9656,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9673,
											"end": 9692,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 9673,
											"end": 9692,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5073,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 9292,
											"end": 9698,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5073,
											"end": 5180,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 5073,
											"end": 5180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5190,
											"end": 5209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5212,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 5212,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 5212,
											"end": 5222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5212,
											"end": 5222,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 5212,
											"end": 5222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5190,
											"end": 5222,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5239,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 5190,
											"end": 5222,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5246,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 5239,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5260,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 5239,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5232,
											"end": 5260,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4958,
											"end": 5267,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4958,
											"end": 5267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11551,
											"end": 11797,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 11551,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11644,
											"end": 11651,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11667,
											"end": 11683,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11703,
											"end": 11710,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 11703,
											"end": 11710,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11686,
											"end": 11700,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 11686,
											"end": 11700,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11686,
											"end": 11710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 11686,
											"end": 11710,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11686,
											"end": 11710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11686,
											"end": 11710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 11686,
											"end": 11710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11686,
											"end": 11710,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 11686,
											"end": 11710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11667,
											"end": 11710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11720,
											"end": 11736,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11762,
											"end": 11765,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 11667,
											"end": 11710,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11740,
											"end": 11747,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 11740,
											"end": 11758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "tag",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 11740,
											"end": 11758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11739,
											"end": 11765,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 11739,
											"end": 11765,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11739,
											"end": 11765,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11739,
											"end": 11765,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 11739,
											"end": 11765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11739,
											"end": 11765,
											"name": "tag",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 11739,
											"end": 11765,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11720,
											"end": 11765,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 11551,
											"end": 11797,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11551,
											"end": 11797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12601,
											"end": 12759,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 12601,
											"end": 12759,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12643,
											"end": 12650,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12663,
											"end": 12678,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12680,
											"end": 12695,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 12699,
											"end": 12716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 12699,
											"end": 12718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12699,
											"end": 12718,
											"name": "tag",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 12699,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12662,
											"end": 12718,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12662,
											"end": 12718,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12662,
											"end": 12718,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12735,
											"end": 12752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 12662,
											"end": 12718,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12662,
											"end": 12718,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12735,
											"end": 12752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 12735,
											"end": 12752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12735,
											"end": 12752,
											"name": "tag",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 12735,
											"end": 12752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12728,
											"end": 12752,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12728,
											"end": 12752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12728,
											"end": 12752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12728,
											"end": 12752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12601,
											"end": 12759,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12601,
											"end": 12759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9690,
											"end": 10122,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 9690,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9802,
											"end": 9821,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9802,
											"end": 9821,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9798,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 9798,
											"end": 9887,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9873,
											"end": 9874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9844,
											"end": 9876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 1525,
											"end": 1728,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9798,
											"end": 9887,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 9798,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9900,
											"end": 9921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9900,
											"end": 9921,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9896,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 9896,
											"end": 9986,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9972,
											"end": 9973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9944,
											"end": 9975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 1525,
											"end": 1728,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 9986,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 9896,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10006,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10022,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10030,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10116,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 10040,
											"end": 10116,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10090,
											"end": 10097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10083,
											"end": 10088,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10099,
											"end": 10104,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1479,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1520,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10105,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 10122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 10122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 10122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 10122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 10122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7782,
											"end": 8551,
											"name": "tag",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 7782,
											"end": 8551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7922,
											"end": 7929,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7917,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "400"
										},
										{
											"begin": 7917,
											"end": 7970,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7945,
											"end": 7959,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "400"
										},
										{
											"begin": 7945,
											"end": 7957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 7945,
											"end": 7959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7945,
											"end": 7959,
											"name": "tag",
											"source": 5,
											"value": "400"
										},
										{
											"begin": 7945,
											"end": 7959,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7984,
											"end": 8001,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8001,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7984,
											"end": 8001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8001,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8001,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 7995,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 7984,
											"end": 8001,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7984,
											"end": 8001,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8001,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7984,
											"end": 8001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8001,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8001,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8001,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 7984,
											"end": 8001,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8021,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8021,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 7984,
											"end": 8021,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8006,
											"end": 8021,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8006,
											"end": 8021,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8006,
											"end": 8021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8006,
											"end": 8021,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8006,
											"end": 8021,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8006,
											"end": 8021,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8006,
											"end": 8017,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 8006,
											"end": 8021,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8006,
											"end": 8021,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8006,
											"end": 8021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8006,
											"end": 8021,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8006,
											"end": 8021,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8006,
											"end": 8021,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8006,
											"end": 8021,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 8006,
											"end": 8021,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8005,
											"end": 8021,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8021,
											"name": "tag",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 7984,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7980,
											"end": 8481,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7980,
											"end": 8481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 7980,
											"end": 8481,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8037,
											"end": 8075,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 8059,
											"end": 8063,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8065,
											"end": 8067,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8069,
											"end": 8074,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8037,
											"end": 8058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 8037,
											"end": 8075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8037,
											"end": 8075,
											"name": "tag",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 8037,
											"end": 8075,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7980,
											"end": 8481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 7980,
											"end": 8481,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7980,
											"end": 8481,
											"name": "tag",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 7980,
											"end": 8481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8097,
											"end": 8114,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8097,
											"end": 8114,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8097,
											"end": 8114,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8114,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8097,
											"end": 8114,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8097,
											"end": 8114,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8097,
											"end": 8108,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 8097,
											"end": 8114,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8097,
											"end": 8114,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8097,
											"end": 8114,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8097,
											"end": 8114,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8097,
											"end": 8114,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8097,
											"end": 8114,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8097,
											"end": 8114,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 8097,
											"end": 8114,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8096,
											"end": 8114,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8096,
											"end": 8133,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8096,
											"end": 8133,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8096,
											"end": 8133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 8096,
											"end": 8133,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8118,
											"end": 8129,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 8118,
											"end": 8133,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8096,
											"end": 8133,
											"name": "tag",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 8096,
											"end": 8133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8481,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 8092,
											"end": 8481,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8149,
											"end": 8185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 8169,
											"end": 8173,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8175,
											"end": 8177,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8179,
											"end": 8184,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8149,
											"end": 8168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 8149,
											"end": 8185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8092,
											"end": 8481,
											"name": "tag",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 8092,
											"end": 8481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8207,
											"end": 8224,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8207,
											"end": 8224,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8207,
											"end": 8224,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8207,
											"end": 8224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8207,
											"end": 8224,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8207,
											"end": 8224,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8207,
											"end": 8218,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 8207,
											"end": 8224,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8207,
											"end": 8224,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8207,
											"end": 8224,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8207,
											"end": 8224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8207,
											"end": 8224,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8207,
											"end": 8224,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8207,
											"end": 8224,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 8207,
											"end": 8224,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8206,
											"end": 8224,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8206,
											"end": 8244,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8206,
											"end": 8244,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8206,
											"end": 8244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 8206,
											"end": 8244,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8229,
											"end": 8244,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8244,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8244,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8229,
											"end": 8244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8244,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8244,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8240,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 8229,
											"end": 8244,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8229,
											"end": 8244,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8244,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8229,
											"end": 8244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8244,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8244,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8229,
											"end": 8244,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 8229,
											"end": 8244,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8228,
											"end": 8244,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8206,
											"end": 8244,
											"name": "tag",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 8206,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8202,
											"end": 8481,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8202,
											"end": 8481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 8202,
											"end": 8481,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8260,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 8278,
											"end": 8282,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8284,
											"end": 8286,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8288,
											"end": 8293,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8260,
											"end": 8277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 8260,
											"end": 8294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8202,
											"end": 8481,
											"name": "tag",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 8202,
											"end": 8481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8315,
											"end": 8332,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8315,
											"end": 8332,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8315,
											"end": 8332,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8315,
											"end": 8332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8315,
											"end": 8332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8315,
											"end": 8332,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8315,
											"end": 8326,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 8315,
											"end": 8332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8315,
											"end": 8332,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8315,
											"end": 8332,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8315,
											"end": 8332,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8315,
											"end": 8332,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8315,
											"end": 8332,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8315,
											"end": 8332,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 8315,
											"end": 8332,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8315,
											"end": 8351,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8315,
											"end": 8351,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8315,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 8315,
											"end": 8351,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8336,
											"end": 8351,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8336,
											"end": 8351,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8336,
											"end": 8351,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8351,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8336,
											"end": 8351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8336,
											"end": 8351,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8336,
											"end": 8347,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 8336,
											"end": 8351,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8336,
											"end": 8351,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8336,
											"end": 8351,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8336,
											"end": 8351,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8336,
											"end": 8351,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8336,
											"end": 8351,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8336,
											"end": 8351,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 8336,
											"end": 8351,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8315,
											"end": 8351,
											"name": "tag",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 8315,
											"end": 8351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8311,
											"end": 8481,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8311,
											"end": 8481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 8311,
											"end": 8481,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8367,
											"end": 8405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 8389,
											"end": 8393,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8395,
											"end": 8397,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8399,
											"end": 8404,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8367,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 8367,
											"end": 8405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8311,
											"end": 8481,
											"name": "tag",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 8311,
											"end": 8481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8436,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 8454,
											"end": 8458,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8460,
											"end": 8462,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8464,
											"end": 8469,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8436,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 8436,
											"end": 8470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8436,
											"end": 8470,
											"name": "tag",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 8436,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8496,
											"end": 8503,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8491,
											"end": 8545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 8491,
											"end": 8545,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8519,
											"end": 8534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 8854,
											"end": 8876,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 8854,
											"end": 8876,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8837,
											"end": 8851,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 8837,
											"end": 8876,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8896,
											"end": 8911,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 8896,
											"end": 8911,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8886,
											"end": 8893,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 8886,
											"end": 8911,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8794,
											"end": 8918,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12765,
											"end": 13407,
											"name": "tag",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 12765,
											"end": 13407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12862,
											"end": 12869,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 12862,
											"end": 12869,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12897,
											"end": 12904,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 12897,
											"end": 12904,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12816,
											"end": 12823,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12816,
											"end": 12823,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12816,
											"end": 12823,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12816,
											"end": 12823,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12816,
											"end": 12823,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12915,
											"end": 13272,
											"name": "tag",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 12915,
											"end": 13272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12939,
											"end": 12948,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 12939,
											"end": 12955,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12935,
											"end": 12955,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12935,
											"end": 12955,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 12915,
											"end": 13272,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12915,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 12915,
											"end": 13272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13021,
											"end": 13028,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12997,
											"end": 13004,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 12997,
											"end": 13018,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13005,
											"end": 13014,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 13015,
											"end": 13016,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 13005,
											"end": 13017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "tag",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13005,
											"end": 13017,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12997,
											"end": 13018,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12997,
											"end": 13018,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12997,
											"end": 13018,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12997,
											"end": 13018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12997,
											"end": 13018,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12997,
											"end": 13018,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12997,
											"end": 13018,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12997,
											"end": 13018,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12997,
											"end": 13018,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12997,
											"end": 13018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12997,
											"end": 13018,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12997,
											"end": 13018,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 12997,
											"end": 13018,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12997,
											"end": 13028,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 12997,
											"end": 13028,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12997,
											"end": 13079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 12997,
											"end": 13079,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12997,
											"end": 13079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13072,
											"end": 13079,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13048,
											"end": 13055,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 13048,
											"end": 13069,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13056,
											"end": 13065,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 13066,
											"end": 13067,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 13056,
											"end": 13068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "tag",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13056,
											"end": 13068,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13048,
											"end": 13069,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13048,
											"end": 13069,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13048,
											"end": 13069,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13048,
											"end": 13069,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13048,
											"end": 13069,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13048,
											"end": 13069,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13048,
											"end": 13069,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13048,
											"end": 13069,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13048,
											"end": 13069,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13048,
											"end": 13069,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13048,
											"end": 13069,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13048,
											"end": 13069,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 13048,
											"end": 13069,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13048,
											"end": 13079,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 12997,
											"end": 13079,
											"name": "tag",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 12997,
											"end": 13079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12976,
											"end": 13152,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12976,
											"end": 13152,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 12976,
											"end": 13152,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13120,
											"end": 13127,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 13120,
											"end": 13127,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13129,
											"end": 13136,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 13129,
											"end": 13136,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13112,
											"end": 13137,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 13112,
											"end": 13137,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13112,
											"end": 13137,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 13112,
											"end": 13137,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13112,
											"end": 13137,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13112,
											"end": 13137,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13112,
											"end": 13137,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12765,
											"end": 13407,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12765,
											"end": 13407,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12765,
											"end": 13407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12976,
											"end": 13152,
											"name": "tag",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 12976,
											"end": 13152,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13185,
											"end": 13192,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 13185,
											"end": 13206,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13193,
											"end": 13202,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 13203,
											"end": 13204,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 13193,
											"end": 13205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "tag",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13193,
											"end": 13205,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13185,
											"end": 13206,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13185,
											"end": 13206,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13185,
											"end": 13206,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13185,
											"end": 13206,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13185,
											"end": 13206,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13185,
											"end": 13206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13185,
											"end": 13206,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13185,
											"end": 13206,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13185,
											"end": 13206,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13185,
											"end": 13206,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13185,
											"end": 13206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13185,
											"end": 13206,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 13185,
											"end": 13206,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13175,
											"end": 13206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "441"
										},
										{
											"begin": 13175,
											"end": 13206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13175,
											"end": 13182,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13175,
											"end": 13206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 13175,
											"end": 13206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13175,
											"end": 13206,
											"name": "tag",
											"source": 5,
											"value": "441"
										},
										{
											"begin": 13175,
											"end": 13206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13165,
											"end": 13206,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13165,
											"end": 13206,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13240,
											"end": 13247,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 13240,
											"end": 13261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13248,
											"end": 13257,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 13258,
											"end": 13259,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 13248,
											"end": 13260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "tag",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13248,
											"end": 13260,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13240,
											"end": 13261,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13240,
											"end": 13261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13240,
											"end": 13261,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13240,
											"end": 13261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13240,
											"end": 13261,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13240,
											"end": 13261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13240,
											"end": 13261,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13240,
											"end": 13261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13240,
											"end": 13261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13240,
											"end": 13261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13240,
											"end": 13261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13240,
											"end": 13261,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 13240,
											"end": 13261,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13230,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "445"
										},
										{
											"begin": 13230,
											"end": 13261,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13230,
											"end": 13237,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13230,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 13230,
											"end": 13261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13230,
											"end": 13261,
											"name": "tag",
											"source": 5,
											"value": "445"
										},
										{
											"begin": 13230,
											"end": 13261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13220,
											"end": 13261,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12957,
											"end": 12960,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 12957,
											"end": 12960,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12915,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 12915,
											"end": 13272,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12915,
											"end": 13272,
											"name": "tag",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 12915,
											"end": 13272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12915,
											"end": 13272,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13306,
											"end": 13313,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 13306,
											"end": 13313,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13296,
											"end": 13303,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 13296,
											"end": 13303,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13296,
											"end": 13313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "446"
										},
										{
											"begin": 13296,
											"end": 13313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13296,
											"end": 13313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13296,
											"end": 13313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 13296,
											"end": 13313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13296,
											"end": 13313,
											"name": "tag",
											"source": 5,
											"value": "446"
										},
										{
											"begin": 13296,
											"end": 13313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13286,
											"end": 13293,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13286,
											"end": 13313,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 13282,
											"end": 13365,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13282,
											"end": 13365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "447"
										},
										{
											"begin": 13282,
											"end": 13365,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13337,
											"end": 13344,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 13337,
											"end": 13344,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13346,
											"end": 13353,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 13346,
											"end": 13353,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13329,
											"end": 13354,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 13329,
											"end": 13354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13329,
											"end": 13354,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 13329,
											"end": 13354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13329,
											"end": 13354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13329,
											"end": 13354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12765,
											"end": 13407,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12765,
											"end": 13407,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12765,
											"end": 13407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13282,
											"end": 13365,
											"name": "tag",
											"source": 5,
											"value": "447"
										},
										{
											"begin": 13282,
											"end": 13365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13383,
											"end": 13390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13383,
											"end": 13390,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 13392,
											"end": 13399,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13392,
											"end": 13399,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12765,
											"end": 13407,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12765,
											"end": 13407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8557,
											"end": 8788,
											"name": "tag",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 8557,
											"end": 8788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8603,
											"end": 8617,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 8603,
											"end": 8617,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8603,
											"end": 8622,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8603,
											"end": 8638,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8603,
											"end": 8638,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8603,
											"end": 8638,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "449"
										},
										{
											"begin": 8603,
											"end": 8638,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8626,
											"end": 8633,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 8626,
											"end": 8633,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8626,
											"end": 8638,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8603,
											"end": 8638,
											"name": "tag",
											"source": 5,
											"value": "449"
										},
										{
											"begin": 8603,
											"end": 8638,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8599,
											"end": 8647,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8599,
											"end": 8647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "450"
										},
										{
											"begin": 8599,
											"end": 8647,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8557,
											"end": 8788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8599,
											"end": 8647,
											"name": "tag",
											"source": 5,
											"value": "450"
										},
										{
											"begin": 8599,
											"end": 8647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8682,
											"end": 8696,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 8682,
											"end": 8696,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8682,
											"end": 8696,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8657,
											"end": 8679,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 8657,
											"end": 8696,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8724,
											"end": 8731,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 8724,
											"end": 8731,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8724,
											"end": 8731,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8706,
											"end": 8721,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 8706,
											"end": 8731,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8770,
											"end": 8781,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8557,
											"end": 8788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10182,
											"end": 10827,
											"name": "tag",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 10182,
											"end": 10827,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10327,
											"end": 10342,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10356,
											"end": 10379,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10393,
											"end": 10416,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10430,
											"end": 10449,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10462,
											"end": 10489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "452"
										},
										{
											"begin": 10481,
											"end": 10488,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10462,
											"end": 10480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 10462,
											"end": 10489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10462,
											"end": 10489,
											"name": "tag",
											"source": 5,
											"value": "452"
										},
										{
											"begin": 10462,
											"end": 10489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10517,
											"end": 10532,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 10517,
											"end": 10532,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10517,
											"end": 10532,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10517,
											"end": 10532,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10517,
											"end": 10532,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10517,
											"end": 10532,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10517,
											"end": 10524,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 10517,
											"end": 10532,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10517,
											"end": 10532,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10517,
											"end": 10532,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10517,
											"end": 10532,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10517,
											"end": 10532,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10517,
											"end": 10532,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10313,
											"end": 10489,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10313,
											"end": 10489,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10313,
											"end": 10489,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10313,
											"end": 10489,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10313,
											"end": 10489,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10313,
											"end": 10489,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10517,
											"end": 10542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "453"
										},
										{
											"begin": 10517,
											"end": 10542,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10535,
											"end": 10542,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10535,
											"end": 10542,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10517,
											"end": 10542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 10517,
											"end": 10542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10517,
											"end": 10542,
											"name": "tag",
											"source": 5,
											"value": "453"
										},
										{
											"begin": 10517,
											"end": 10542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10499,
											"end": 10514,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 10499,
											"end": 10514,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10499,
											"end": 10514,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10499,
											"end": 10514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10499,
											"end": 10514,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10499,
											"end": 10514,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10499,
											"end": 10506,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 10499,
											"end": 10514,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10499,
											"end": 10514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10499,
											"end": 10514,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10499,
											"end": 10514,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10499,
											"end": 10514,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10499,
											"end": 10514,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10499,
											"end": 10514,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10499,
											"end": 10514,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10499,
											"end": 10542,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10499,
											"end": 10542,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10499,
											"end": 10542,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10499,
											"end": 10542,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10570,
											"end": 10577,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 10570,
											"end": 10585,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10570,
											"end": 10585,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10570,
											"end": 10585,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10570,
											"end": 10585,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10570,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "454"
										},
										{
											"begin": 10570,
											"end": 10595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10588,
											"end": 10595,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10588,
											"end": 10595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10570,
											"end": 10595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 10570,
											"end": 10595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10570,
											"end": 10595,
											"name": "tag",
											"source": 5,
											"value": "454"
										},
										{
											"begin": 10570,
											"end": 10595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10552,
											"end": 10567,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10552,
											"end": 10567,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 10552,
											"end": 10567,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10552,
											"end": 10567,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10552,
											"end": 10567,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10552,
											"end": 10567,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10552,
											"end": 10567,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10552,
											"end": 10559,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 10552,
											"end": 10567,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10552,
											"end": 10567,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10552,
											"end": 10567,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10552,
											"end": 10567,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10552,
											"end": 10567,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10552,
											"end": 10567,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10552,
											"end": 10595,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10552,
											"end": 10595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10552,
											"end": 10595,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10552,
											"end": 10595,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10626,
											"end": 10644,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10626,
											"end": 10644,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 10626,
											"end": 10644,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10626,
											"end": 10644,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10626,
											"end": 10644,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10626,
											"end": 10644,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10626,
											"end": 10644,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10626,
											"end": 10662,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "455"
										},
										{
											"begin": 10626,
											"end": 10662,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10647,
											"end": 10662,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10647,
											"end": 10662,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10626,
											"end": 10662,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 10626,
											"end": 10662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10626,
											"end": 10662,
											"name": "tag",
											"source": 5,
											"value": "455"
										},
										{
											"begin": 10626,
											"end": 10662,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10605,
											"end": 10623,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 10605,
											"end": 10623,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10605,
											"end": 10623,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10605,
											"end": 10623,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10605,
											"end": 10623,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10605,
											"end": 10623,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10605,
											"end": 10612,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 10605,
											"end": 10623,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10605,
											"end": 10623,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10605,
											"end": 10623,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10605,
											"end": 10623,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10605,
											"end": 10623,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10605,
											"end": 10662,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10673,
											"end": 10717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "456"
										},
										{
											"begin": 10688,
											"end": 10694,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10703,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10705,
											"end": 10716,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10673,
											"end": 10687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "457"
										},
										{
											"begin": 10673,
											"end": 10717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10673,
											"end": 10717,
											"name": "tag",
											"source": 5,
											"value": "456"
										},
										{
											"begin": 10673,
											"end": 10717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10727,
											"end": 10760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "458"
										},
										{
											"begin": 10739,
											"end": 10746,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10748,
											"end": 10759,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10727,
											"end": 10738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "459"
										},
										{
											"begin": 10727,
											"end": 10760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10727,
											"end": 10760,
											"name": "tag",
											"source": 5,
											"value": "458"
										},
										{
											"begin": 10727,
											"end": 10760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10793,
											"end": 10802,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10776,
											"end": 10820,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10785,
											"end": 10791,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10776,
											"end": 10820,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10776,
											"end": 10820,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10804,
											"end": 10819,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10776,
											"end": 10820,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10776,
											"end": 10820,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10776,
											"end": 10820,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "460"
										},
										{
											"begin": 10776,
											"end": 10820,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1479,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1520,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10776,
											"end": 10820,
											"name": "tag",
											"source": 5,
											"value": "460"
										},
										{
											"begin": 10776,
											"end": 10820,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10776,
											"end": 10820,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10776,
											"end": 10820,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10776,
											"end": 10820,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10776,
											"end": 10820,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10776,
											"end": 10820,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10776,
											"end": 10820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10776,
											"end": 10820,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 10303,
											"end": 10827,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10303,
											"end": 10827,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10303,
											"end": 10827,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10303,
											"end": 10827,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10182,
											"end": 10827,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10182,
											"end": 10827,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10182,
											"end": 10827,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10182,
											"end": 10827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9519,
											"end": 10176,
											"name": "tag",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 9519,
											"end": 10176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9662,
											"end": 9677,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9691,
											"end": 9714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9728,
											"end": 9751,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9765,
											"end": 9784,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9797,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "462"
										},
										{
											"begin": 9816,
											"end": 9823,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9797,
											"end": 9815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 9797,
											"end": 9824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9797,
											"end": 9824,
											"name": "tag",
											"source": 5,
											"value": "462"
										},
										{
											"begin": 9797,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9852,
											"end": 9867,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 9852,
											"end": 9867,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9852,
											"end": 9867,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9852,
											"end": 9867,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9852,
											"end": 9867,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9852,
											"end": 9867,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9852,
											"end": 9859,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 9852,
											"end": 9867,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9852,
											"end": 9867,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9852,
											"end": 9867,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9852,
											"end": 9867,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9852,
											"end": 9867,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9852,
											"end": 9867,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9648,
											"end": 9824,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9648,
											"end": 9824,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9648,
											"end": 9824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9648,
											"end": 9824,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9648,
											"end": 9824,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9648,
											"end": 9824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9852,
											"end": 9877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "463"
										},
										{
											"begin": 9852,
											"end": 9877,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9648,
											"end": 9824,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9648,
											"end": 9824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9852,
											"end": 9877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 9852,
											"end": 9877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9852,
											"end": 9877,
											"name": "tag",
											"source": 5,
											"value": "463"
										},
										{
											"begin": 9852,
											"end": 9877,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9834,
											"end": 9849,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9849,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9849,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9849,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9834,
											"end": 9849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9849,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9849,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9841,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 9834,
											"end": 9849,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9834,
											"end": 9849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9849,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9849,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9849,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9834,
											"end": 9849,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9849,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9849,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9877,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9877,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9877,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9877,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9908,
											"end": 9915,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9908,
											"end": 9926,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9908,
											"end": 9944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "464"
										},
										{
											"begin": 9908,
											"end": 9944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9929,
											"end": 9944,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9929,
											"end": 9944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9908,
											"end": 9944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 9908,
											"end": 9944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9908,
											"end": 9944,
											"name": "tag",
											"source": 5,
											"value": "464"
										},
										{
											"begin": 9908,
											"end": 9944,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9887,
											"end": 9905,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9887,
											"end": 9905,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9887,
											"end": 9905,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9887,
											"end": 9905,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9887,
											"end": 9905,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9887,
											"end": 9905,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9887,
											"end": 9894,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 9887,
											"end": 9905,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9887,
											"end": 9905,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9887,
											"end": 9905,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9887,
											"end": 9905,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9887,
											"end": 9905,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9887,
											"end": 9905,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9887,
											"end": 9905,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9887,
											"end": 9905,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9887,
											"end": 9944,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9887,
											"end": 9944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9887,
											"end": 9944,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9887,
											"end": 9944,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9975,
											"end": 9982,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 9975,
											"end": 9993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9975,
											"end": 9993,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9975,
											"end": 9993,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9975,
											"end": 9993,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9975,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "455"
										},
										{
											"begin": 9975,
											"end": 10011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9996,
											"end": 10011,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9996,
											"end": 10011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9975,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 9975,
											"end": 10011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8924,
											"end": 9513,
											"name": "tag",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 8924,
											"end": 9513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9065,
											"end": 9080,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9094,
											"end": 9117,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9131,
											"end": 9154,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9168,
											"end": 9187,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9200,
											"end": 9227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "470"
										},
										{
											"begin": 9219,
											"end": 9226,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9200,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 9200,
											"end": 9227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9200,
											"end": 9227,
											"name": "tag",
											"source": 5,
											"value": "470"
										},
										{
											"begin": 9200,
											"end": 9227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9256,
											"end": 9271,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 9256,
											"end": 9271,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9256,
											"end": 9271,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9256,
											"end": 9271,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9256,
											"end": 9271,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9256,
											"end": 9271,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9256,
											"end": 9263,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 9256,
											"end": 9271,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9256,
											"end": 9271,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9256,
											"end": 9271,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9256,
											"end": 9271,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9256,
											"end": 9271,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9256,
											"end": 9271,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9051,
											"end": 9227,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9051,
											"end": 9227,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9051,
											"end": 9227,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9051,
											"end": 9227,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9051,
											"end": 9227,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9051,
											"end": 9227,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9256,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "454"
										},
										{
											"begin": 9256,
											"end": 9281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9051,
											"end": 9227,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9051,
											"end": 9227,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9256,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 9256,
											"end": 9281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10833,
											"end": 11545,
											"name": "tag",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 10833,
											"end": 11545,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10978,
											"end": 10993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11007,
											"end": 11030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11044,
											"end": 11067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11081,
											"end": 11100,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11113,
											"end": 11140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "477"
										},
										{
											"begin": 11132,
											"end": 11139,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11113,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 11113,
											"end": 11140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11113,
											"end": 11140,
											"name": "tag",
											"source": 5,
											"value": "477"
										},
										{
											"begin": 11113,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11168,
											"end": 11175,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 11168,
											"end": 11183,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10964,
											"end": 11140,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10964,
											"end": 11140,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10964,
											"end": 11140,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10964,
											"end": 11140,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10964,
											"end": 11140,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10964,
											"end": 11140,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11168,
											"end": 11193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "478"
										},
										{
											"begin": 11168,
											"end": 11193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11186,
											"end": 11193,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 11186,
											"end": 11193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11168,
											"end": 11193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 11168,
											"end": 11193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11168,
											"end": 11193,
											"name": "tag",
											"source": 5,
											"value": "478"
										},
										{
											"begin": 11168,
											"end": 11193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11150,
											"end": 11165,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 11150,
											"end": 11165,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11150,
											"end": 11165,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11150,
											"end": 11165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11150,
											"end": 11165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11150,
											"end": 11165,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11150,
											"end": 11157,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 11150,
											"end": 11165,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11150,
											"end": 11165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11150,
											"end": 11165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11150,
											"end": 11165,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11150,
											"end": 11165,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11150,
											"end": 11165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11150,
											"end": 11165,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11150,
											"end": 11165,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 11150,
											"end": 11193,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11150,
											"end": 11193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11150,
											"end": 11193,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11150,
											"end": 11193,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 11221,
											"end": 11228,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 11221,
											"end": 11236,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11221,
											"end": 11236,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11221,
											"end": 11236,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 11221,
											"end": 11236,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11221,
											"end": 11246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "463"
										},
										{
											"begin": 11221,
											"end": 11246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11239,
											"end": 11246,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11239,
											"end": 11246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11221,
											"end": 11246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 11221,
											"end": 11246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13413,
											"end": 14007,
											"name": "tag",
											"source": 5,
											"value": "457"
										},
										{
											"begin": 13413,
											"end": 14007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13539,
											"end": 13554,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13579,
											"end": 13582,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 13568,
											"end": 13575,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 13568,
											"end": 13575,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13558,
											"end": 13565,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13558,
											"end": 13575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "487"
										},
										{
											"begin": 13558,
											"end": 13575,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13558,
											"end": 13575,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13558,
											"end": 13575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 13558,
											"end": 13575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13558,
											"end": 13575,
											"name": "tag",
											"source": 5,
											"value": "487"
										},
										{
											"begin": 13558,
											"end": 13575,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13557,
											"end": 13582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "488"
										},
										{
											"begin": 13557,
											"end": 13582,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13557,
											"end": 13582,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13557,
											"end": 13582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 13557,
											"end": 13582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13557,
											"end": 13582,
											"name": "tag",
											"source": 5,
											"value": "488"
										},
										{
											"begin": 13557,
											"end": 13582,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13539,
											"end": 13582,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13596,
											"end": 13607,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13596,
											"end": 13607,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13592,
											"end": 14001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 13592,
											"end": 14001,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13623,
											"end": 13638,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13667,
											"end": 13668,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 13642,
											"end": 13663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "490"
										},
										{
											"begin": 13652,
											"end": 13663,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13642,
											"end": 13649,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13642,
											"end": 13663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 13642,
											"end": 13663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13642,
											"end": 13663,
											"name": "tag",
											"source": 5,
											"value": "490"
										},
										{
											"begin": 13642,
											"end": 13663,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13641,
											"end": 13668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "491"
										},
										{
											"begin": 13641,
											"end": 13668,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13641,
											"end": 13668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13641,
											"end": 13668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 13641,
											"end": 13668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13641,
											"end": 13668,
											"name": "tag",
											"source": 5,
											"value": "491"
										},
										{
											"begin": 13641,
											"end": 13668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13719,
											"end": 13736,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 13719,
											"end": 13736,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13719,
											"end": 13736,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13711,
											"end": 13737,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13711,
											"end": 13737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13711,
											"end": 13737,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13711,
											"end": 13737,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13711,
											"end": 13718,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 13711,
											"end": 13737,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13711,
											"end": 13737,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13711,
											"end": 13737,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13711,
											"end": 13737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13711,
											"end": 13737,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 13711,
											"end": 13737,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13623,
											"end": 13668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13623,
											"end": 13668,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13711,
											"end": 13747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "492"
										},
										{
											"begin": 13711,
											"end": 13747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13623,
											"end": 13668,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13623,
											"end": 13668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13711,
											"end": 13747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 13711,
											"end": 13747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13711,
											"end": 13747,
											"name": "tag",
											"source": 5,
											"value": "492"
										},
										{
											"begin": 13711,
											"end": 13747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13690,
											"end": 13707,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 13690,
											"end": 13707,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13690,
											"end": 13707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13690,
											"end": 13707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13690,
											"end": 13707,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13682,
											"end": 13708,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13682,
											"end": 13708,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13682,
											"end": 13708,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13682,
											"end": 13708,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13682,
											"end": 13689,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 13682,
											"end": 13708,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13682,
											"end": 13708,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13682,
											"end": 13708,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13682,
											"end": 13708,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13682,
											"end": 13708,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13682,
											"end": 13708,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 13682,
											"end": 13747,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 13682,
											"end": 13747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13682,
											"end": 13747,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 13682,
											"end": 13747,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 13816,
											"end": 13835,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 13816,
											"end": 13835,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13816,
											"end": 13835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13816,
											"end": 13835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13816,
											"end": 13835,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13808,
											"end": 13836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13808,
											"end": 13836,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13808,
											"end": 13836,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 13808,
											"end": 13836,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13808,
											"end": 13862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "493"
										},
										{
											"begin": 13808,
											"end": 13862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13855,
											"end": 13862,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13855,
											"end": 13862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13808,
											"end": 13862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 13808,
											"end": 13862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13808,
											"end": 13862,
											"name": "tag",
											"source": 5,
											"value": "493"
										},
										{
											"begin": 13808,
											"end": 13862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13769,
											"end": 13788,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 13769,
											"end": 13788,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13769,
											"end": 13788,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13769,
											"end": 13788,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13769,
											"end": 13788,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13761,
											"end": 13789,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13761,
											"end": 13789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13761,
											"end": 13789,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13761,
											"end": 13789,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13761,
											"end": 13768,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 13761,
											"end": 13789,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13761,
											"end": 13789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13761,
											"end": 13789,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13761,
											"end": 13789,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13761,
											"end": 13789,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13761,
											"end": 13789,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13761,
											"end": 13789,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13761,
											"end": 13789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13761,
											"end": 13789,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 13761,
											"end": 13862,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 13761,
											"end": 13862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13761,
											"end": 13862,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 13761,
											"end": 13862,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 13898,
											"end": 13915,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 13898,
											"end": 13915,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13881,
											"end": 13925,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13881,
											"end": 13925,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13898,
											"end": 13915,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13898,
											"end": 13915,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13898,
											"end": 13915,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13898,
											"end": 13915,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13881,
											"end": 13925,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13881,
											"end": 13925,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 13881,
											"end": 13925,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13881,
											"end": 13925,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13881,
											"end": 13925,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13881,
											"end": 13925,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13881,
											"end": 13925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13881,
											"end": 13925,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 13881,
											"end": 13925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13881,
											"end": 13925,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13881,
											"end": 13925,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13881,
											"end": 13925,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13881,
											"end": 13925,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 13961,
											"end": 13980,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 13961,
											"end": 13980,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13944,
											"end": 13990,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13944,
											"end": 13990,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13961,
											"end": 13980,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13961,
											"end": 13980,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13961,
											"end": 13980,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13961,
											"end": 13980,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13944,
											"end": 13990,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 13944,
											"end": 13990,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13944,
											"end": 13990,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13944,
											"end": 13990,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13944,
											"end": 13990,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1479,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1462,
											"end": 1480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13944,
											"end": 13990,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13944,
											"end": 13990,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 13944,
											"end": 13990,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13944,
											"end": 13990,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13944,
											"end": 13990,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13944,
											"end": 13990,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13944,
											"end": 13990,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 13609,
											"end": 14001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13529,
											"end": 14007,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13413,
											"end": 14007,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13413,
											"end": 14007,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13413,
											"end": 14007,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13413,
											"end": 14007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12346,
											"end": 12595,
											"name": "tag",
											"source": 5,
											"value": "459"
										},
										{
											"begin": 12346,
											"end": 12595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12423,
											"end": 12435,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12467,
											"end": 12470,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 12449,
											"end": 12463,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 12449,
											"end": 12463,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12439,
											"end": 12446,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12439,
											"end": 12463,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "497"
										},
										{
											"begin": 12439,
											"end": 12463,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12439,
											"end": 12463,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12439,
											"end": 12463,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 12439,
											"end": 12463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12439,
											"end": 12463,
											"name": "tag",
											"source": 5,
											"value": "497"
										},
										{
											"begin": 12439,
											"end": 12463,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12438,
											"end": 12470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "498"
										},
										{
											"begin": 12438,
											"end": 12470,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12438,
											"end": 12470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12438,
											"end": 12470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 12438,
											"end": 12470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12438,
											"end": 12470,
											"name": "tag",
											"source": 5,
											"value": "498"
										},
										{
											"begin": 12438,
											"end": 12470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12423,
											"end": 12470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12480,
											"end": 12492,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "499"
										},
										{
											"begin": 12502,
											"end": 12513,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12423,
											"end": 12470,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 12495,
											"end": 12513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "tag",
											"source": 5,
											"value": "499"
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12480,
											"end": 12513,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12480,
											"end": 12513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12544,
											"end": 12548,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12534,
											"end": 12541,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 12534,
											"end": 12541,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12534,
											"end": 12548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "500"
										},
										{
											"begin": 12534,
											"end": 12548,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12534,
											"end": 12548,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12534,
											"end": 12548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 12534,
											"end": 12548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12534,
											"end": 12548,
											"name": "tag",
											"source": 5,
											"value": "500"
										},
										{
											"begin": 12534,
											"end": 12548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12524,
											"end": 12531,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 12524,
											"end": 12548,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 12571,
											"end": 12581,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 12571,
											"end": 12581,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12571,
											"end": 12588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "501"
										},
										{
											"begin": 12571,
											"end": 12588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12584,
											"end": 12588,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12584,
											"end": 12588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12571,
											"end": 12588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 12571,
											"end": 12588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12571,
											"end": 12588,
											"name": "tag",
											"source": 5,
											"value": "501"
										},
										{
											"begin": 12571,
											"end": 12588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12558,
											"end": 12568,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 12558,
											"end": 12588,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12346,
											"end": 12595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 240,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 14,
											"end": 240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 187,
											"end": 210,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 187,
											"end": 210,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 245,
											"end": 663,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 245,
											"end": 663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 394,
											"end": 396,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 392,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 376,
											"end": 397,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 357,
											"end": 361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 432,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 420,
											"end": 433,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 466,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 453,
											"end": 462,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 449,
											"end": 467,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 442,
											"end": 476,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 523,
											"end": 525,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 515,
											"end": 521,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 511,
											"end": 526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 506,
											"end": 508,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 495,
											"end": 504,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 491,
											"end": 509,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 485,
											"end": 535,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 579,
											"end": 581,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 576,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 559,
											"end": 568,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 555,
											"end": 577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 551,
											"end": 582,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 544,
											"end": 586,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 654,
											"end": 656,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 647,
											"end": 649,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 643,
											"end": 650,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 638,
											"end": 640,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 630,
											"end": 636,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 626,
											"end": 641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 622,
											"end": 651,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 611,
											"end": 620,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 607,
											"end": 652,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 595,
											"end": 657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 595,
											"end": 657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 595,
											"end": 657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 245,
											"end": 663,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 245,
											"end": 663,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 245,
											"end": 663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 245,
											"end": 663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 245,
											"end": 663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 668,
											"end": 841,
											"name": "tag",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 668,
											"end": 841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 736,
											"end": 756,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 736,
											"end": 756,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 785,
											"end": 816,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 785,
											"end": 816,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 775,
											"end": 817,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 775,
											"end": 817,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 765,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 765,
											"end": 835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 831,
											"end": 832,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 833,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 765,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 765,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 668,
											"end": 841,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 668,
											"end": 841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 668,
											"end": 841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 668,
											"end": 841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 846,
											"end": 1146,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 846,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 914,
											"end": 920,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 928,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 972,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 954,
											"end": 961,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 950,
											"end": 973,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 946,
											"end": 978,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 943,
											"end": 995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 943,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 943,
											"end": 995,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 988,
											"end": 989,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 993,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 943,
											"end": 995,
											"name": "tag",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 943,
											"end": 995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 1033,
											"end": 1042,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 1014,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1014,
											"end": 1043,
											"name": "tag",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 1014,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1043,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1112,
											"end": 1114,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1097,
											"end": 1115,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1116,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 846,
											"end": 1146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 2107,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1733,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1810,
											"end": 1816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1832,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1881,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1867,
											"end": 1876,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1865,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1877,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1882,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1899,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 1847,
											"end": 1899,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1896,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1897,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1899,
											"name": "tag",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 1847,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 1937,
											"end": 1946,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 1918,
											"end": 1947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 1947,
											"name": "tag",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 1918,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1947,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "519"
										},
										{
											"begin": 2000,
											"end": 2002,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1989,
											"end": 1998,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2003,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 1966,
											"end": 2004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 2004,
											"name": "tag",
											"source": 6,
											"value": "519"
										},
										{
											"begin": 1966,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 2107,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 2107,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1956,
											"end": 2004,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1956,
											"end": 2004,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2073,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2058,
											"end": 2076,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2058,
											"end": 2076,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2058,
											"end": 2076,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2058,
											"end": 2076,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2077,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 2107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2301,
											"end": 2487,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2301,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2415,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2410,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2392,
											"end": 2399,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2411,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2384,
											"end": 2416,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2430,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2427,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2431,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "tag",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 2471,
											"end": 2480,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 2452,
											"end": 2481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2887,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2492,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2563,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2620,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2615,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2593,
											"end": 2616,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2589,
											"end": 2621,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2635,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2624,
											"end": 2636,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "tag",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2778,
											"end": 2780,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2781,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 2781,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2782,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2820,
											"end": 2835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2836,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2801,
											"end": 2837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2801,
											"end": 2837,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "526"
										},
										{
											"begin": 2791,
											"end": 2855,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2853,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2855,
											"name": "tag",
											"source": 6,
											"value": "526"
										},
										{
											"begin": 2791,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2881,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2864,
											"end": 2881,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2864,
											"end": 2881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2864,
											"end": 2881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2887,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2887,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2887,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3152,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2892,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 2966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3023,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3009,
											"end": 3018,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3007,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3019,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2992,
											"end": 3024,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3041,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 2989,
											"end": 3041,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3035,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3039,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3041,
											"name": "tag",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 2989,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "529"
										},
										{
											"begin": 3079,
											"end": 3088,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 3060,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "tag",
											"source": 6,
											"value": "529"
										},
										{
											"begin": 3060,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3089,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 3142,
											"end": 3144,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3131,
											"end": 3140,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3145,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 3108,
											"end": 3146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3146,
											"name": "tag",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 3108,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3098,
											"end": 3146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3152,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3152,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3152,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3152,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 3152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3697,
											"name": "tag",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 3570,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3641,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3626,
											"end": 3629,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3620,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3643,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3662,
											"end": 3666,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3659,
											"end": 3660,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3690,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3683,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3691,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3702,
											"end": 3830,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3702,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3778,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3778,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3778,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3790,
											"end": 3801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3790,
											"end": 3801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3790,
											"end": 3801,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3824,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3787,
											"end": 3824,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 3804,
											"end": 3822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3835,
											"end": 3960,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3835,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3900,
											"end": 3909,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3900,
											"end": 3909,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3900,
											"end": 3909,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3921,
											"end": 3931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3921,
											"end": 3931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3921,
											"end": 3931,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 3954,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3918,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3918,
											"end": 3954,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 3934,
											"end": 3952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4345,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3965,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4044,
											"end": 4045,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4040,
											"end": 4052,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4052,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4052,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4052,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4087,
											"end": 4099,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4087,
											"end": 4099,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4087,
											"end": 4099,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "540"
										},
										{
											"begin": 4108,
											"end": 4169,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4166,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 4154,
											"end": 4160,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4167,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4167,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4169,
											"name": "tag",
											"source": 6,
											"value": "540"
										},
										{
											"begin": 4108,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4217,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4207,
											"end": 4213,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4218,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4184,
											"end": 4202,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4181,
											"end": 4219,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4178,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "541"
										},
										{
											"begin": 4178,
											"end": 4339,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4271,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 4256,
											"end": 4259,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4252,
											"end": 4272,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4273,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4300,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4293,
											"end": 4294,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4286,
											"end": 4301,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4324,
											"end": 4328,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4321,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4314,
											"end": 4329,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4178,
											"end": 4339,
											"name": "tag",
											"source": 6,
											"value": "541"
										},
										{
											"begin": 4178,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4178,
											"end": 4339,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4345,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4345,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 4345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5066,
											"end": 5468,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 5066,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5268,
											"end": 5270,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5250,
											"end": 5271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5271,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5271,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5309,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5287,
											"end": 5305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5305,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5287,
											"end": 5305,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5280,
											"end": 5310,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5346,
											"end": 5380,
											"name": "PUSH",
											"source": 6,
											"value": "7A65726F20616464726573732063616E206E6F74206265207468652046656541"
										},
										{
											"begin": 5341,
											"end": 5343,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5326,
											"end": 5344,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5381,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18D8DBDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5412,
											"end": 5414,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5390,
											"end": 5426,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5458,
											"end": 5461,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5066,
											"end": 5468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6188,
											"end": 6315,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6188,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6249,
											"end": 6259,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 6244,
											"end": 6247,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6240,
											"end": 6260,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6238,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6230,
											"end": 6261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6280,
											"end": 6284,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 6277,
											"end": 6278,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6270,
											"end": 6285,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6301,
											"end": 6302,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6294,
											"end": 6309,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6320,
											"end": 6447,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 6320,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6391,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 6376,
											"end": 6379,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6372,
											"end": 6392,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6369,
											"end": 6370,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6362,
											"end": 6393,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6412,
											"end": 6416,
											"name": "PUSH",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 6409,
											"end": 6410,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6402,
											"end": 6417,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6440,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6433,
											"end": 6434,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6426,
											"end": 6441,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6452,
											"end": 6620,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 6452,
											"end": 6620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6534,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6534,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6525,
											"end": 6534,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6556,
											"end": 6565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6556,
											"end": 6565,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6567,
											"end": 6589,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6567,
											"end": 6589,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6553,
											"end": 6590,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6543,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6543,
											"end": 6614,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6594,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6594,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 6594,
											"end": 6612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9703,
											"end": 9920,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 9703,
											"end": 9920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9743,
											"end": 9744,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9769,
											"end": 9770,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "561"
										},
										{
											"begin": 9759,
											"end": 9891,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9813,
											"end": 9823,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 9808,
											"end": 9811,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 9804,
											"end": 9824,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 9801,
											"end": 9802,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9825,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9848,
											"end": 9852,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 9845,
											"end": 9846,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9838,
											"end": 9853,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 9880,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9873,
											"end": 9874,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9866,
											"end": 9881,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9891,
											"name": "tag",
											"source": 6,
											"value": "561"
										},
										{
											"begin": 9759,
											"end": 9891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9905,
											"end": 9914,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9703,
											"end": 9920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"CYBCC.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"changeDevelopmentAccount(address)": "706407fd",
							"changeMarketingAccount(address)": "c4863770",
							"changePairAddress(address)": "8873b15f",
							"decimals()": "313ce567",
							"excludeAccountFromReward(address)": "6049876e",
							"excludeFromFee(address)": "437823ec",
							"getDevelopmentAccount()": "1cf8fef5",
							"getMarketingAccount()": "838fcc90",
							"getTaxFee()": "f66608fe",
							"includeAccountinReward(address)": "fdeb889f",
							"isExcluded(address)": "cba0e996",
							"isExcludedFromFee(address)": "5342acb4",
							"isWhitelisted(address)": "3af32abf",
							"isWhitelistedAddress(address)": "5fae0576",
							"launchBlock()": "d00efb2f",
							"name()": "06fdde03",
							"openTrading()": "c9567bf9",
							"owner()": "8da5cb5b",
							"pairAddress()": "a8b08982",
							"reflect(uint256)": "053ab182",
							"reflectionFee()": "83ad7994",
							"reflectionFromToken(uint256,bool)": "4549b039",
							"symbol()": "95d89b41",
							"totalFeesRedistributed()": "32035504",
							"totalSupply()": "18160ddd",
							"tradingOpen()": "ffb54a99",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"whitelistedAddress(address)": "c30796ab"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFeeAccount\",\"type\":\"address\"}],\"name\":\"changeDevelopmentAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFeeAccount\",\"type\":\"address\"}],\"name\":\"changeMarketingAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pairAddress\",\"type\":\"address\"}],\"name\":\"changePairAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeAccountFromReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDevelopmentAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketingAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTaxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeAccountinReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcluded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelistedAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"}],\"name\":\"reflect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reflectionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"deductTransferFee\",\"type\":\"bool\"}],\"name\":\"reflectionFromToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFeesRedistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"whitelistedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CYBCC.sol\":\"CYBCC\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdb63a9f4c2a337faf57f2cab393316b89b404bc1ac699832cd5cdf7b73701368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdda80f2a9c1ae11b7349044863da89d5e447aea6dbdaf38987c791f871c21b6\",\"dweb:/ipfs/QmauBRwgcDXwz9HgPnzm5K4uRst84DhUrRSDgSK1TvbLCN\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"CYBCC.sol\":{\"keccak256\":\"0xfea59bd4ca23136a8d25aae1bdea09d44b82104a202cb409290486fc706c95dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae85f0984821d43e1baa91630ea2dd4929100ad10d74449bf0db16ce1d398a2\",\"dweb:/ipfs/QmermfUqRACab3T3GcMeB9g8x3qUBWvkBeZxn6WugkXJfn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 795,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_rOwned",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 799,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_tOwned",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 803,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_isExcludedFromFee",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 807,
								"contract": "CYBCC.sol:CYBCC",
								"label": "isWhitelisted",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 811,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_isExcluded",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 814,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_excluded",
								"offset": 0,
								"slot": "10",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 816,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_decimals",
								"offset": 0,
								"slot": "11",
								"type": "t_uint8"
							},
							{
								"astId": 820,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_owner",
								"offset": 1,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 829,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_tTotal",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 831,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_rTotal",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 834,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_tFeeTotal",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 836,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_reflectionFee",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 838,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_previousReflectionFee",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 840,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_taxFee",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 842,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_previousTaxFee",
								"offset": 0,
								"slot": "18",
								"type": "t_uint256"
							},
							{
								"astId": 844,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_marketingAccount",
								"offset": 0,
								"slot": "19",
								"type": "t_address"
							},
							{
								"astId": 846,
								"contract": "CYBCC.sol:CYBCC",
								"label": "_developmentAccount",
								"offset": 0,
								"slot": "20",
								"type": "t_address"
							},
							{
								"astId": 848,
								"contract": "CYBCC.sol:CYBCC",
								"label": "pairAddress",
								"offset": 0,
								"slot": "21",
								"type": "t_address"
							},
							{
								"astId": 858,
								"contract": "CYBCC.sol:CYBCC",
								"label": "maxWalletAmount",
								"offset": 0,
								"slot": "22",
								"type": "t_uint256"
							},
							{
								"astId": 860,
								"contract": "CYBCC.sol:CYBCC",
								"label": "launchBlock",
								"offset": 0,
								"slot": "23",
								"type": "t_uint256"
							},
							{
								"astId": 863,
								"contract": "CYBCC.sol:CYBCC",
								"label": "tradingOpen",
								"offset": 0,
								"slot": "24",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1638:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1648:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1656:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1681:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1594:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1615:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:1"
									},
									"scope": 651,
									"src": "1582:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1820:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1830:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1805:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:1"
									},
									"scope": 651,
									"src": "1760:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2024:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2034:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2009:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:1"
									},
									"scope": 651,
									"src": "1962:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2744:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2754:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2737:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:1"
									},
									"scope": 651,
									"src": "2688:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2891:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2908:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2901:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2882:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:1"
									},
									"scope": 651,
									"src": "2830:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3059:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3076:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3086:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3069:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3004:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3050:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:1"
									},
									"scope": 651,
									"src": "2985:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3371:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3381:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3397:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3436:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3419:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3456:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3314:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3326:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3365:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:1"
									},
									"scope": 651,
									"src": "3296:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3621:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3638:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3650:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3657:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3631:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3551:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3566:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:1"
									},
									"scope": 651,
									"src": "3532:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4058:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4068:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4084:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4115:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4122:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4131:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4106:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4147:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3996:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4013:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4052:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:1"
									},
									"scope": 651,
									"src": "3979:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4850:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4860:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4878:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4916:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4931:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4900:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4957:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4963:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4967:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4947:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "4983:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4779:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4793:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4805:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4844:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:1"
									},
									"scope": 651,
									"src": "4757:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5451:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5465:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5481:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5473:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5473:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5473:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5465:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5461:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5485:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5533:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5525:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5525:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5525:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5506:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5506:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5499:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5560:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5574:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5566:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5566:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5566:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5560:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5556:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5578:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5628:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5620:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5620:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5620:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5599:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5599:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5592:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5659:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5665:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5651:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5651:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5651:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5393:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5407:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5419:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5451:0:1"
									},
									"scope": 651,
									"src": "5374:308:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6072:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6086:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6102:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6094:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6094:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6094:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6086:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6260:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6282:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6274:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6274:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6296:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6306:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6296:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6274:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6329:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6343:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6329:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6325:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6350:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6400:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6406:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6419:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6375:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6375:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6368:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6453:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6560:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6570:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6560:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6578:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6592:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6578:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6560:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6560:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6082:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6106:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6222:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6238:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6222:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6222:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6636:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6650:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6642:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6642:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6642:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6636:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6851:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6865:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7010:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7020:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7010:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7027:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7010:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7010:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6632:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6654:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6668:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6799:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6815:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6799:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6799:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7081:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7087:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7091:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7072:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7072:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7067:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5688:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6006:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6022:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6014:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6014:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6036:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6028:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6048:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6040:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6040:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6013:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6072:0:1"
									},
									"scope": 651,
									"src": "5997:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7503:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7517:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7536:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7528:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7528:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7528:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7517:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7513:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7540:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7590:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7582:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7582:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7582:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7561:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7561:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7554:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7629:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7621:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7621:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7621:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7633:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7642:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7613:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7613:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7613:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7110:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7456:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7470:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7462:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7462:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7487:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7479:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7479:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7461:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7503:0:1"
									},
									"scope": 651,
									"src": "7447:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8029:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8043:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8062:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8054:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8054:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8054:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8043:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8039:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8066:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8114:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8106:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8106:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8106:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8087:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8080:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8145:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8162:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8154:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8154:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8154:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8166:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8137:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8137:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8137:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7661:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7982:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7996:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7988:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7988:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8013:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8005:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8005:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7987:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8029:0:1"
									},
									"scope": 651,
									"src": "7973:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8789:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8808:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8815:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8824:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8831:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8799:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8799:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8799:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8185:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8724:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8741:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8733:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8733:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8756:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8748:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8748:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8773:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8765:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8765:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8732:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8789:0:1"
									},
									"scope": 651,
									"src": "8715:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9788:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9802:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9819:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9811:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9811:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9811:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9802:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9798:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9823:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9873:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9865:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9865:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9865:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9844:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9844:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9837:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9900:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9919:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9911:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9911:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9911:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9900:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9896:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9923:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9972:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9964:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9964:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9964:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9944:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9944:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9937:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "9995:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10007:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9995:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10014:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9995:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10025:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9995:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "9995:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10044:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10040:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10055:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10083:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10090:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10099:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10074:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10074:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10069:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8849:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9699:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9716:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9708:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9708:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9731:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9723:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9723:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9748:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9740:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9740:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9760:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9755:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9755:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9707:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9788:0:1"
									},
									"scope": 651,
									"src": "9690:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10493:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10511:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10503:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10503:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10540:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10547:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10530:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10530:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10503:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10569:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10593:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10593:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10588:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10588:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10602:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10588:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10569:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10565:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10607:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10625:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10644:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10625:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10621:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10651:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10703:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10712:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10730:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10676:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10676:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10669:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10764:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10801:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10808:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10817:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10836:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10817:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10843:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10792:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10792:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10792:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10128:271:1",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10413:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10437:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10429:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10452:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10444:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10444:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10469:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10461:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10461:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10428:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10493:0:1"
									},
									"scope": 651,
									"src": "10404:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9776:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10778:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"CYBCC.sol": {
				"ast": {
					"absolutePath": "CYBCC.sol",
					"exportedSymbols": {
						"CYBCC": [
							2253
						],
						"ERC20": [
							651
						]
					},
					"id": 2254,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 789,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2254,
							"sourceUnit": 652,
							"src": "58:68:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 788,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 651,
										"src": "66:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 790,
										"name": "ERC20",
										"nameLocations": [
											"146:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "146:5:5"
									},
									"id": 791,
									"nodeType": "InheritanceSpecifier",
									"src": "146:5:5"
								}
							],
							"canonicalName": "CYBCC",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2253,
							"linearizedBaseContracts": [
								2253,
								651,
								41,
								755,
								729,
								785
							],
							"name": "CYBCC",
							"nameLocation": "137:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 795,
									"mutability": "mutable",
									"name": "_rOwned",
									"nameLocation": "194:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "158:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 794,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 792,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "166:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "158:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 793,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "177:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 799,
									"mutability": "mutable",
									"name": "_tOwned",
									"nameLocation": "243:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "207:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 798,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 796,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "215:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "207:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 797,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "226:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 803,
									"mutability": "mutable",
									"name": "_isExcludedFromFee",
									"nameLocation": "289:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "256:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 802,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 800,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "264:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "256:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 801,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "275:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "3af32abf",
									"id": 807,
									"mutability": "mutable",
									"name": "isWhitelisted",
									"nameLocation": "345:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "313:45:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 806,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 804,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "321:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "313:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 805,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "332:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 811,
									"mutability": "mutable",
									"name": "_isExcluded",
									"nameLocation": "398:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "365:44:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 810,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 808,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "373:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "365:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 809,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "384:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 814,
									"mutability": "mutable",
									"name": "_excluded",
									"nameLocation": "433:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "415:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 812,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "415:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 813,
										"nodeType": "ArrayTypeName",
										"src": "415:9:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 816,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "463:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "449:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 815,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "449:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 820,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "494:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "478:35:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 817,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "478:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"expression": {
											"id": 818,
											"name": "msg",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967281,
											"src": "503:3:5",
											"typeDescriptions": {
												"typeIdentifier": "t_magic_message",
												"typeString": "msg"
											}
										},
										"id": 819,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberLocation": "507:6:5",
										"memberName": "sender",
										"nodeType": "MemberAccess",
										"src": "503:10:5",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 827,
									"mutability": "constant",
									"name": "MAX",
									"nameLocation": "544:3:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "519:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 821,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "519:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 826,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "550:11:5",
										"subExpression": {
											"arguments": [
												{
													"hexValue": "30",
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "559:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													}
												],
												"id": 823,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "551:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint256_$",
													"typeString": "type(uint256)"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:5",
													"typeDescriptions": {}
												}
											},
											"id": 825,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "551:10:5",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 829,
									"mutability": "mutable",
									"name": "_tTotal",
									"nameLocation": "583:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "567:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 828,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "567:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 831,
									"mutability": "mutable",
									"name": "_rTotal",
									"nameLocation": "612:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "596:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 830,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "596:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 834,
									"mutability": "mutable",
									"name": "_tFeeTotal",
									"nameLocation": "641:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "625:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 832,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "625:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 833,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "654:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 836,
									"mutability": "mutable",
									"name": "_reflectionFee",
									"nameLocation": "678:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "662:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 835,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "662:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 838,
									"mutability": "mutable",
									"name": "_previousReflectionFee",
									"nameLocation": "714:22:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "698:38:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 837,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "698:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 840,
									"mutability": "mutable",
									"name": "_taxFee",
									"nameLocation": "759:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "743:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 839,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "743:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 842,
									"mutability": "mutable",
									"name": "_previousTaxFee",
									"nameLocation": "788:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "772:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 841,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "772:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 844,
									"mutability": "mutable",
									"name": "_marketingAccount",
									"nameLocation": "826:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "810:33:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 843,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "810:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 846,
									"mutability": "mutable",
									"name": "_developmentAccount",
									"nameLocation": "865:19:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "849:35:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 845,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "849:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "a8b08982",
									"id": 848,
									"mutability": "mutable",
									"name": "pairAddress",
									"nameLocation": "906:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "891:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 847,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "891:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 858,
									"mutability": "mutable",
									"name": "maxWalletAmount",
									"nameLocation": "940:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "924:67:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 849,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "924:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 857,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130303030303030",
											"id": 850,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "958:8:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000_by_1",
												"typeString": "int_const 10000000"
											},
											"value": "10000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 856,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 851,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "969:2:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"arguments": [
													{
														"id": 854,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "981:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													],
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "973:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_uint256_$",
														"typeString": "type(uint256)"
													},
													"typeName": {
														"id": 852,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "973:7:5",
														"typeDescriptions": {}
													}
												},
												"id": 855,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "typeConversion",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "973:18:5",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "969:22:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "958:33:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "d00efb2f",
									"id": 860,
									"mutability": "mutable",
									"name": "launchBlock",
									"nameLocation": "1013:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "998:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 859,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "998:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ffb54a99",
									"id": 863,
									"mutability": "mutable",
									"name": "tradingOpen",
									"nameLocation": "1042:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "1030:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 861,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1030:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 862,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1056:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "1114:779:5",
										"statements": [
											{
												"expression": {
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 870,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "1124:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 871,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1136:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "1124:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "1124:14:5"
											},
											{
												"expression": {
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 874,
														"name": "_tTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "1148:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "31303030303030303030",
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1158:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000_by_1",
																"typeString": "int_const 1000000000"
															},
															"value": "1000000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1171:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 879,
																		"name": "_decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 816,
																		"src": "1183:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1175:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 877,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1175:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1175:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1171:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1158:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1148:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "1148:45:5"
											},
											{
												"expression": {
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 885,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "1203:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 886,
																	"name": "MAX",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "1214:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 887,
																				"name": "MAX",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 827,
																				"src": "1221:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "%",
																			"rightExpression": {
																				"id": 888,
																				"name": "_tTotal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 829,
																				"src": "1227:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1221:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 890,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1220:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1214:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 892,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1203:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "1203:33:5"
											},
											{
												"expression": {
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 895,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "1247:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1264:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1247:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "1247:18:5"
											},
											{
												"expression": {
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 899,
														"name": "_previousReflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "1275:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 900,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "1300:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1275:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "1275:39:5"
											},
											{
												"expression": {
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 903,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "1325:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1335:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1325:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "1325:11:5"
											},
											{
												"expression": {
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 907,
														"name": "_previousTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "1346:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 908,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "1364:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1346:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "1346:25:5"
											},
											{
												"expression": {
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 911,
														"name": "_marketingAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "1382:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 912,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "1402:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1382:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "1382:26:5"
											},
											{
												"expression": {
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 915,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "1482:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 918,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 916,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "1501:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1501:7:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1482:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1512:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1482:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "1482:34:5"
											},
											{
												"expression": {
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 922,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "1526:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 924,
														"indexExpression": {
															"id": 923,
															"name": "_marketingAccount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "1545:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1526:37:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1566:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1526:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "1526:44:5"
											},
											{
												"expression": {
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 928,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "1580:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 930,
														"indexExpression": {
															"id": 929,
															"name": "_developmentAccount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "1599:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1580:39:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1622:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1580:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "1580:46:5"
											},
											{
												"expression": {
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 934,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "1636:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 939,
														"indexExpression": {
															"arguments": [
																{
																	"id": 937,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1663:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CYBCC_$2253",
																		"typeString": "contract CYBCC"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CYBCC_$2253",
																		"typeString": "contract CYBCC"
																	}
																],
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1655:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 935,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1655:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1655:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1636:33:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1672:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1636:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "1636:40:5"
											},
											{
												"expression": {
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 943,
															"name": "isWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "1686:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 946,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 944,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "1700:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1700:7:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1686:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1711:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1686:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "1686:29:5"
											},
											{
												"expression": {
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 950,
															"name": "isWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "1725:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 952,
														"indexExpression": {
															"id": 951,
															"name": "_marketingAccount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "1739:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1725:32:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 953,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1760:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1725:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "1725:39:5"
											},
											{
												"expression": {
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 956,
															"name": "isWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "1774:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 958,
														"indexExpression": {
															"id": 957,
															"name": "_developmentAccount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "1788:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1774:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 959,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1811:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1774:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "1774:41:5"
											},
											{
												"expression": {
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 962,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "1825:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 964,
														"indexExpression": {
															"id": 963,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "1833:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1825:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 965,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "1843:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1825:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "1825:25:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 969,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1866:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1870:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1866:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 971,
															"name": "_rTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "1878:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 968,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "1860:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1860:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "1860:26:5"
											}
										]
									},
									"id": 975,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "435942455243415453434f494e",
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1088:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_52ed978c1aeb1014ec164e7f664abe499b296124fc86da52866d6f63fbded442",
														"typeString": "literal_string \"CYBERCATSCOIN\""
													},
													"value": "CYBERCATSCOIN"
												},
												{
													"hexValue": "4359424343",
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1105:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a1e4d5bdd8a279313ac099637956bc9607cc279a897c73c77f26a34d39ed3031",
														"typeString": "literal_string \"CYBCC\""
													},
													"value": "CYBCC"
												}
											],
											"id": 868,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 865,
												"name": "ERC20",
												"nameLocations": [
													"1082:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "1082:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1082:31:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1079:2:5"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1114:0:5"
									},
									"scope": 2253,
									"src": "1068:825:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "1926:2:5",
										"statements": []
									},
									"id": 979,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1906:2:5"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1926:0:5"
									},
									"scope": 2253,
									"src": "1899:29:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "1989:30:5",
										"statements": [
											{
												"expression": {
													"id": 984,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "2006:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 983,
												"id": 985,
												"nodeType": "Return",
												"src": "1999:13:5"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1943:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1948:2:5"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1980:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1980:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1979:9:5"
									},
									"scope": 2253,
									"src": "1934:85:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "2046:45:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 989,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "2060:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2060:7:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 991,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2071:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2075:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2071:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2060:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 995,
												"nodeType": "IfStatement",
												"src": "2056:28:5",
												"trueBody": {
													"id": 994,
													"nodeType": "PlaceholderStatement",
													"src": "2083:1:5"
												}
											}
										]
									},
									"id": 997,
									"name": "onlyOwner",
									"nameLocation": "2034:9:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2043:2:5"
									},
									"src": "2025:66:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										215
									],
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "2162:33:5",
										"statements": [
											{
												"expression": {
													"id": 1003,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 816,
													"src": "2179:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1002,
												"id": 1004,
												"nodeType": "Return",
												"src": "2172:16:5"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2106:8:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 999,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2137:8:5"
									},
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2114:2:5"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "2155:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1000,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2155:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2154:7:5"
									},
									"scope": 2253,
									"src": "2097:98:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										224
									],
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "2271:31:5",
										"statements": [
											{
												"expression": {
													"id": 1012,
													"name": "_tTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 829,
													"src": "2288:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1011,
												"id": 1013,
												"nodeType": "Return",
												"src": "2281:14:5"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2210:11:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1008,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2244:8:5"
									},
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2221:2:5"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "2262:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2261:9:5"
									},
									"scope": 2253,
									"src": "2201:101:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "2363:38:5",
										"statements": [
											{
												"expression": {
													"id": 1020,
													"name": "_reflectionFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 836,
													"src": "2380:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1019,
												"id": 1021,
												"nodeType": "Return",
												"src": "2373:21:5"
											}
										]
									},
									"functionSelector": "83ad7994",
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reflectionFee",
									"nameLocation": "2317:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2330:2:5"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "2354:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2353:9:5"
									},
									"scope": 2253,
									"src": "2308:93:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "2458:31:5",
										"statements": [
											{
												"expression": {
													"id": 1028,
													"name": "_taxFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 840,
													"src": "2475:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1027,
												"id": 1029,
												"nodeType": "Return",
												"src": "2468:14:5"
											}
										]
									},
									"functionSelector": "f66608fe",
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaxFee",
									"nameLocation": "2416:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2425:2:5"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2449:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:9:5"
									},
									"scope": 2253,
									"src": "2407:82:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "2556:41:5",
										"statements": [
											{
												"expression": {
													"id": 1036,
													"name": "_marketingAccount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 844,
													"src": "2573:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1035,
												"id": 1037,
												"nodeType": "Return",
												"src": "2566:24:5"
											}
										]
									},
									"functionSelector": "838fcc90",
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketingAccount",
									"nameLocation": "2504:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2523:2:5"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2547:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2547:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2546:9:5"
									},
									"scope": 2253,
									"src": "2495:102:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "2666:43:5",
										"statements": [
											{
												"expression": {
													"id": 1044,
													"name": "_developmentAccount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 846,
													"src": "2683:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1043,
												"id": 1045,
												"nodeType": "Return",
												"src": "2676:26:5"
											}
										]
									},
									"functionSelector": "1cf8fef5",
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDevelopmentAccount",
									"nameLocation": "2612:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2633:2:5"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "2657:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2657:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2656:9:5"
									},
									"scope": 2253,
									"src": "2603:106:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "2786:51:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1054,
														"name": "_isExcludedFromFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "2803:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1056,
													"indexExpression": {
														"id": 1055,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "2822:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2803:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1053,
												"id": 1057,
												"nodeType": "Return",
												"src": "2796:34:5"
											}
										]
									},
									"functionSelector": "5342acb4",
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExcludedFromFee",
									"nameLocation": "2724:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2750:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "2742:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2742:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2741:17:5"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "2780:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1051,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2780:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:6:5"
									},
									"scope": 2253,
									"src": "2715:122:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										237
									],
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "2969:141:5",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 1067,
														"name": "_isExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "2983:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1069,
													"indexExpression": {
														"id": 1068,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "2995:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2983:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1075,
												"nodeType": "IfStatement",
												"src": "2979:72:5",
												"trueBody": {
													"id": 1074,
													"nodeType": "Block",
													"src": "3004:47:5",
													"statements": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1070,
																	"name": "_tOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "3025:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1072,
																"indexExpression": {
																	"id": 1071,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1061,
																	"src": "3033:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3025:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1066,
															"id": 1073,
															"nodeType": "Return",
															"src": "3018:22:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1077,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "3087:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1079,
															"indexExpression": {
																"id": 1078,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "3095:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3087:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1076,
														"name": "tokenFromReflection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "3067:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3067:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1066,
												"id": 1081,
												"nodeType": "Return",
												"src": "3060:43:5"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2852:9:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1063,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2930:8:5"
									},
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2870:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "2862:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2862:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2861:16:5"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "2956:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2956:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2955:9:5"
									},
									"scope": 2253,
									"src": "2843:267:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "3180:44:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1090,
														"name": "_isExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "3197:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1092,
													"indexExpression": {
														"id": 1091,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "3209:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3197:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1089,
												"id": 1093,
												"nodeType": "Return",
												"src": "3190:27:5"
											}
										]
									},
									"functionSelector": "cba0e996",
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isExcluded",
									"nameLocation": "3125:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3144:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "3136:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3135:17:5"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "3174:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1087,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3174:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3173:6:5"
									},
									"scope": 2253,
									"src": "3116:108:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "3294:34:5",
										"statements": [
											{
												"expression": {
													"id": 1100,
													"name": "_tFeeTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 834,
													"src": "3311:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1099,
												"id": 1101,
												"nodeType": "Return",
												"src": "3304:17:5"
											}
										]
									},
									"functionSelector": "32035504",
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalFeesRedistributed",
									"nameLocation": "3239:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3261:2:5"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "3285:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3285:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3284:9:5"
									},
									"scope": 2253,
									"src": "3230:98:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "3392:51:5",
										"statements": [
											{
												"expression": {
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1110,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "3402:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1112,
														"indexExpression": {
															"id": 1111,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "3421:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3402:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3432:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3402:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1115,
												"nodeType": "ExpressionStatement",
												"src": "3402:34:5"
											}
										]
									},
									"functionSelector": "437823ec",
									"id": 1117,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1108,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1107,
												"name": "onlyOwner",
												"nameLocations": [
													"3382:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 997,
												"src": "3382:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3382:9:5"
										}
									],
									"name": "excludeFromFee",
									"nameLocation": "3343:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3366:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "3358:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3358:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3357:17:5"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3392:0:5"
									},
									"scope": 2253,
									"src": "3334:109:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "3521:172:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1125,
																"name": "newFeeAccount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "3552:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3577:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3569:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1126,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3569:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3569:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3552:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7a65726f20616464726573732063616e206e6f7420626520746865204665654163636f756e74",
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3593:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f46c49ce218356b2edd982ef62c8e9487aefa42aa99cd4113ff0084c01552854",
																"typeString": "literal_string \"zero address can not be the FeeAccount\""
															},
															"value": "zero address can not be the FeeAccount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f46c49ce218356b2edd982ef62c8e9487aefa42aa99cd4113ff0084c01552854",
																"typeString": "literal_string \"zero address can not be the FeeAccount\""
															}
														],
														"id": 1124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3531:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3531:112:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "3531:112:5"
											},
											{
												"expression": {
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1134,
														"name": "_marketingAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "3653:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1135,
														"name": "newFeeAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "3673:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3653:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "3653:33:5"
											}
										]
									},
									"functionSelector": "c4863770",
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1122,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1121,
												"name": "onlyOwner",
												"nameLocations": [
													"3511:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 997,
												"src": "3511:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3511:9:5"
										}
									],
									"name": "changeMarketingAccount",
									"nameLocation": "3458:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "newFeeAccount",
												"nameLocation": "3489:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "3481:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3481:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3480:23:5"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3521:0:5"
									},
									"scope": 2253,
									"src": "3449:244:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "3773:174:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1147,
																"name": "newFeeAccount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1141,
																"src": "3804:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3829:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3821:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1148,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3821:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3821:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3804:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7a65726f20616464726573732063616e206e6f7420626520746865204665654163636f756e74",
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3845:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f46c49ce218356b2edd982ef62c8e9487aefa42aa99cd4113ff0084c01552854",
																"typeString": "literal_string \"zero address can not be the FeeAccount\""
															},
															"value": "zero address can not be the FeeAccount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f46c49ce218356b2edd982ef62c8e9487aefa42aa99cd4113ff0084c01552854",
																"typeString": "literal_string \"zero address can not be the FeeAccount\""
															}
														],
														"id": 1146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3783:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3783:112:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "3783:112:5"
											},
											{
												"expression": {
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1156,
														"name": "_developmentAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "3905:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1157,
														"name": "newFeeAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "3927:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3905:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "3905:35:5"
											}
										]
									},
									"functionSelector": "706407fd",
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1144,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1143,
												"name": "onlyOwner",
												"nameLocations": [
													"3763:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 997,
												"src": "3763:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3763:9:5"
										}
									],
									"name": "changeDevelopmentAccount",
									"nameLocation": "3708:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "newFeeAccount",
												"nameLocation": "3741:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "3733:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3733:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3732:23:5"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3773:0:5"
									},
									"scope": 2253,
									"src": "3699:248:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "4019:43:5",
										"statements": [
											{
												"expression": {
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1168,
														"name": "pairAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "4029:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1169,
														"name": "_pairAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "4043:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4029:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "4029:26:5"
											}
										]
									},
									"functionSelector": "8873b15f",
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1166,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1165,
												"name": "onlyOwner",
												"nameLocations": [
													"4009:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 997,
												"src": "4009:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4009:9:5"
										}
									],
									"name": "changePairAddress",
									"nameLocation": "3962:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "_pairAddress",
												"nameLocation": "3988:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "3980:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3980:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3979:22:5"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4019:0:5"
									},
									"scope": 2253,
									"src": "3953:109:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "4109:363:5",
										"statements": [
											{
												"assignments": [
													1179
												],
												"declarations": [
													{
														"constant": false,
														"id": 1179,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4127:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1219,
														"src": "4119:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1178,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4119:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1182,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1180,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4136:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4136:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4119:29:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4179:20:5",
															"subExpression": {
																"baseExpression": {
																	"id": 1184,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "4180:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1186,
																"indexExpression": {
																	"id": 1185,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "4192:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4180:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4578636c75646564206164647265737365732063616e6e6f742063616c6c20746869732066756e6374696f6e",
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4213:46:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4",
																"typeString": "literal_string \"Excluded addresses cannot call this function\""
															},
															"value": "Excluded addresses cannot call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecefcaf5fbcf9ca6dcdb02298ba1da96f4ead317b0a4779917ecb2e5e7dc3ac4",
																"typeString": "literal_string \"Excluded addresses cannot call this function\""
															}
														],
														"id": 1183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4158:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4158:111:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "4158:111:5"
											},
											{
												"assignments": [
													1192,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1192,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "4288:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1219,
														"src": "4280:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1191,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4280:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1196,
												"initialValue": {
													"arguments": [
														{
															"id": 1194,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "4324:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1193,
														"name": "_getTransferValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2050,
														"src": "4305:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4305:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:53:5"
											},
											{
												"expression": {
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1197,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "4342:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1199,
														"indexExpression": {
															"id": 1198,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "4350:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4342:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1200,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "4360:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1202,
															"indexExpression": {
																"id": 1201,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "4368:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4360:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1203,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "4378:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4360:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4342:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "4342:43:5"
											},
											{
												"expression": {
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1207,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "4395:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1208,
															"name": "_rTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "4405:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1209,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "4415:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4405:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4395:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "4395:27:5"
											},
											{
												"expression": {
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1213,
														"name": "_tFeeTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "4432:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1214,
															"name": "_tFeeTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "4445:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1215,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "4458:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4445:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4432:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1218,
												"nodeType": "ExpressionStatement",
												"src": "4432:33:5"
											}
										]
									},
									"functionSelector": "053ab182",
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reflect",
									"nameLocation": "4077:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "4093:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "4085:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4085:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4084:17:5"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4109:0:5"
									},
									"scope": 2253,
									"src": "4068:404:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "4606:346:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1230,
																"name": "tAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1222,
																"src": "4624:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1231,
																"name": "_tTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "4635:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4624:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265206c657373207468616e20737570706c79",
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4644:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b",
																"typeString": "literal_string \"Amount must be less than supply\""
															},
															"value": "Amount must be less than supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c3d5d630711c57d95621b0547fb0a19eab6922a3a0e7e9054d9f9c5458b757b",
																"typeString": "literal_string \"Amount must be less than supply\""
															}
														],
														"id": 1229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4616:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4616:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "4616:62:5"
											},
											{
												"condition": {
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4692:18:5",
													"subExpression": {
														"id": 1236,
														"name": "deductTransferFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "4693:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1255,
													"nodeType": "Block",
													"src": "4824:122:5",
													"statements": [
														{
															"assignments": [
																null,
																1248,
																null,
																null
															],
															"declarations": [
																null,
																{
																	"constant": false,
																	"id": 1248,
																	"mutability": "mutable",
																	"name": "rTransferAmount",
																	"nameLocation": "4849:15:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1255,
																	"src": "4841:23:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1247,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4841:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null
															],
															"id": 1252,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1250,
																		"name": "tAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1222,
																		"src": "4891:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1249,
																	"name": "_getTransferValues",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2050,
																	"src": "4872:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4872:27:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4838:61:5"
														},
														{
															"expression": {
																"id": 1253,
																"name": "rTransferAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1248,
																"src": "4920:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1228,
															"id": 1254,
															"nodeType": "Return",
															"src": "4913:22:5"
														}
													]
												},
												"id": 1256,
												"nodeType": "IfStatement",
												"src": "4688:258:5",
												"trueBody": {
													"id": 1246,
													"nodeType": "Block",
													"src": "4712:106:5",
													"statements": [
														{
															"assignments": [
																1239,
																null,
																null,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1239,
																	"mutability": "mutable",
																	"name": "rAmount",
																	"nameLocation": "4735:7:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1246,
																	"src": "4727:15:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1238,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4727:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null,
																null
															],
															"id": 1243,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1241,
																		"name": "tAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1222,
																		"src": "4771:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1240,
																	"name": "_getTransferValues",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2050,
																	"src": "4752:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
																	}
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4752:27:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256,uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4726:53:5"
														},
														{
															"expression": {
																"id": 1244,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "4800:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1228,
															"id": 1245,
															"nodeType": "Return",
															"src": "4793:14:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4549b039",
									"id": 1258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reflectionFromToken",
									"nameLocation": "4487:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "4515:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "4507:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4507:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "deductTransferFee",
												"nameLocation": "4529:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "4524:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4524:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4506:41:5"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "4593:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4592:9:5"
									},
									"scope": 2253,
									"src": "4478:474:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "5063:204:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1266,
																"name": "rAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1260,
																"src": "5094:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1267,
																"name": "_rTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "5105:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5094:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265206c657373207468616e20746f74616c207265666c656374696f6e73",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5126:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
																"typeString": "literal_string \"Amount must be less than total reflections\""
															},
															"value": "Amount must be less than total reflections"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812",
																"typeString": "literal_string \"Amount must be less than total reflections\""
															}
														],
														"id": 1265,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5073:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5073:107:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "5073:107:5"
											},
											{
												"assignments": [
													1273
												],
												"declarations": [
													{
														"constant": false,
														"id": 1273,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "5198:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1281,
														"src": "5190:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1272,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5190:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1276,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1274,
														"name": "_getRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2102,
														"src": "5212:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5212:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5190:32:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1277,
														"name": "rAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "5239:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1278,
														"name": "currentRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "5249:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5239:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1264,
												"id": 1280,
												"nodeType": "Return",
												"src": "5232:28:5"
											}
										]
									},
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenFromReflection",
									"nameLocation": "4967:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "rAmount",
												"nameLocation": "4995:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "4987:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4987:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4986:17:5"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "5050:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5050:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5049:9:5"
									},
									"scope": 2253,
									"src": "4958:309:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "5341:264:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5359:21:5",
															"subExpression": {
																"baseExpression": {
																	"id": 1290,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "5360:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1292,
																"indexExpression": {
																	"id": 1291,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "5372:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5360:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c7265616479206578636c75646564",
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5382:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															},
															"value": "Account is already excluded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_40ff67f743a73c63981ce97facdb4b14324f60afa0e3049344c62414448ff258",
																"typeString": "literal_string \"Account is already excluded\""
															}
														],
														"id": 1289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5351:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5351:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1296,
												"nodeType": "ExpressionStatement",
												"src": "5351:61:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1297,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "5426:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1299,
														"indexExpression": {
															"id": 1298,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "5434:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5426:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1300,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5445:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5426:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1313,
												"nodeType": "IfStatement",
												"src": "5422:107:5",
												"trueBody": {
													"id": 1312,
													"nodeType": "Block",
													"src": "5448:81:5",
													"statements": [
														{
															"expression": {
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1302,
																		"name": "_tOwned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "5462:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1304,
																	"indexExpression": {
																		"id": 1303,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1284,
																		"src": "5470:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5462:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1306,
																				"name": "_rOwned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 795,
																				"src": "5501:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1308,
																			"indexExpression": {
																				"id": 1307,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1284,
																				"src": "5509:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5501:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1305,
																		"name": "tokenFromReflection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1282,
																		"src": "5481:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5481:37:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5462:56:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1311,
															"nodeType": "ExpressionStatement",
															"src": "5462:56:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1314,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "5538:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1316,
														"indexExpression": {
															"id": 1315,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "5550:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5538:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5561:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5538:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1319,
												"nodeType": "ExpressionStatement",
												"src": "5538:27:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1323,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "5590:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1320,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "5575:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5585:4:5",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5575:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5575:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "5575:23:5"
											}
										]
									},
									"functionSelector": "6049876e",
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1287,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1286,
												"name": "onlyOwner",
												"nameLocations": [
													"5331:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 997,
												"src": "5331:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "5331:9:5"
										}
									],
									"name": "excludeAccountFromReward",
									"nameLocation": "5282:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5315:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "5307:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5307:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5306:17:5"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5341:0:5"
									},
									"scope": 2253,
									"src": "5273:332:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "5677:405:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1335,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "5695:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1337,
															"indexExpression": {
																"id": 1336,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1329,
																"src": "5707:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5695:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c726561647920696e636c75646564",
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5717:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_576d474a317be5ec9e893ed65484812cc21983357d333143b1b7e67d92963e14",
																"typeString": "literal_string \"Account is already included\""
															},
															"value": "Account is already included"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_576d474a317be5ec9e893ed65484812cc21983357d333143b1b7e67d92963e14",
																"typeString": "literal_string \"Account is already included\""
															}
														],
														"id": 1334,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5687:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5687:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1340,
												"nodeType": "ExpressionStatement",
												"src": "5687:60:5"
											},
											{
												"body": {
													"id": 1388,
													"nodeType": "Block",
													"src": "5804:272:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1352,
																		"name": "_excluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 814,
																		"src": "5822:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1354,
																	"indexExpression": {
																		"id": 1353,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1342,
																		"src": "5832:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5822:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1355,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1329,
																	"src": "5838:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5822:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1387,
															"nodeType": "IfStatement",
															"src": "5818:248:5",
															"trueBody": {
																"id": 1386,
																"nodeType": "Block",
																"src": "5847:219:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1357,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 814,
																					"src": "5865:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1359,
																				"indexExpression": {
																					"id": 1358,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1342,
																					"src": "5875:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5865:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1360,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 814,
																					"src": "5880:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1365,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1364,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1361,
																							"name": "_excluded",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 814,
																							"src": "5890:9:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 1362,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5900:6:5",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "5890:16:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1363,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5909:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "5890:20:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5880:31:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "5865:46:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1367,
																		"nodeType": "ExpressionStatement",
																		"src": "5865:46:5"
																	},
																	{
																		"expression": {
																			"id": 1372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1368,
																					"name": "_tOwned",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 799,
																					"src": "5929:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1370,
																				"indexExpression": {
																					"id": 1369,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1329,
																					"src": "5937:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5929:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 1371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5948:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "5929:20:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1373,
																		"nodeType": "ExpressionStatement",
																		"src": "5929:20:5"
																	},
																	{
																		"expression": {
																			"id": 1378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1374,
																					"name": "_isExcluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 811,
																					"src": "5967:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																						"typeString": "mapping(address => bool)"
																					}
																				},
																				"id": 1376,
																				"indexExpression": {
																					"id": 1375,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1329,
																					"src": "5979:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5967:20:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "66616c7365",
																				"id": 1377,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5990:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			},
																			"src": "5967:28:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1379,
																		"nodeType": "ExpressionStatement",
																		"src": "5967:28:5"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1380,
																					"name": "_excluded",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 814,
																					"src": "6013:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1382,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6023:3:5",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "6013:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 1383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6013:15:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1384,
																		"nodeType": "ExpressionStatement",
																		"src": "6013:15:5"
																	},
																	{
																		"id": 1385,
																		"nodeType": "Break",
																		"src": "6046:5:5"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1345,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "5777:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1346,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "5781:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5791:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5781:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5777:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1389,
												"initializationExpression": {
													"assignments": [
														1342
													],
													"declarations": [
														{
															"constant": false,
															"id": 1342,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5770:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 1389,
															"src": "5762:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1341,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5762:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1344,
													"initialValue": {
														"hexValue": "30",
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5774:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5762:13:5"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5799:3:5",
														"subExpression": {
															"id": 1349,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "5799:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1351,
													"nodeType": "ExpressionStatement",
													"src": "5799:3:5"
												},
												"nodeType": "ForStatement",
												"src": "5757:319:5"
											}
										]
									},
									"functionSelector": "fdeb889f",
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1332,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1331,
												"name": "onlyOwner",
												"nameLocations": [
													"5667:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 997,
												"src": "5667:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "5667:9:5"
										}
									],
									"name": "includeAccountinReward",
									"nameLocation": "5620:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5651:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "5643:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5642:17:5"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5677:0:5"
									},
									"scope": 2253,
									"src": "5611:471:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "6162:46:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1398,
														"name": "isWhitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "6179:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1400,
													"indexExpression": {
														"id": 1399,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "6193:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6179:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1397,
												"id": 1401,
												"nodeType": "Return",
												"src": "6172:29:5"
											}
										]
									},
									"functionSelector": "5fae0576",
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhitelistedAddress",
									"nameLocation": "6097:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6126:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "6118:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6118:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6117:17:5"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "6156:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1395,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6156:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6155:6:5"
									},
									"scope": 2253,
									"src": "6088:120:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1424,
										"nodeType": "Block",
										"src": "6276:122:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6294:23:5",
															"subExpression": {
																"baseExpression": {
																	"id": 1411,
																	"name": "isWhitelisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "6295:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1413,
																"indexExpression": {
																	"id": 1412,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1405,
																	"src": "6309:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6295:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320697320616c72656164792077686974656c6973746564",
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6319:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8aec14595104da5ab7d605fcd41f2ffdd252bbd2899a5204d414bd9202d79ddc",
																"typeString": "literal_string \"Address is already whitelisted\""
															},
															"value": "Address is already whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8aec14595104da5ab7d605fcd41f2ffdd252bbd2899a5204d414bd9202d79ddc",
																"typeString": "literal_string \"Address is already whitelisted\""
															}
														],
														"id": 1410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6286:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6286:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "6286:66:5"
											},
											{
												"expression": {
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1418,
															"name": "isWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "6362:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1420,
														"indexExpression": {
															"id": 1419,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "6376:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6362:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6387:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6362:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "6362:29:5"
											}
										]
									},
									"functionSelector": "c30796ab",
									"id": 1425,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1408,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1407,
												"name": "onlyOwner",
												"nameLocations": [
													"6266:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 997,
												"src": "6266:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "6266:9:5"
										}
									],
									"name": "whitelistedAddress",
									"nameLocation": "6223:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6250:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "6242:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6242:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6241:17:5"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6276:0:5"
									},
									"scope": 2253,
									"src": "6214:184:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1439,
										"nodeType": "Block",
										"src": "6446:71:5",
										"statements": [
											{
												"expression": {
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1430,
														"name": "tradingOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "6456:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6470:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6456:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1433,
												"nodeType": "ExpressionStatement",
												"src": "6456:18:5"
											},
											{
												"expression": {
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1434,
														"name": "launchBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "6484:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1435,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6498:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6504:6:5",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "6498:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6484:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "6484:26:5"
											}
										]
									},
									"functionSelector": "c9567bf9",
									"id": 1440,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1428,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1427,
												"name": "onlyOwner",
												"nameLocations": [
													"6436:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 997,
												"src": "6436:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "6436:9:5"
										}
									],
									"name": "openTrading",
									"nameLocation": "6413:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6424:2:5"
									},
									"returnParameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6446:0:5"
									},
									"scope": 2253,
									"src": "6404:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "6575:316:5",
										"statements": [
											{
												"condition": {
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6589:12:5",
													"subExpression": {
														"id": 1446,
														"name": "tradingOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "6590:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1456,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6691:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6697:6:5",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "6691:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1458,
																"name": "launchBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "6707:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "33",
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6721:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "6707:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6691:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1470,
													"nodeType": "IfStatement",
													"src": "6687:187:5",
													"trueBody": {
														"id": 1469,
														"nodeType": "Block",
														"src": "6724:150:5",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1463,
																				"name": "isWhitelisted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 807,
																				"src": "6807:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 1465,
																			"indexExpression": {
																				"id": 1464,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1444,
																				"src": "6821:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6807:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "4c61756e63682070726f74656374696f6e3a206e6f742077686974656c6973746564",
																			"id": 1466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6826:36:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_543833c2a7234931e588d3a22e1a6ee61feec11e0267fb9d55ed0dd8a807ca27",
																				"typeString": "literal_string \"Launch protection: not whitelisted\""
																			},
																			"value": "Launch protection: not whitelisted"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_543833c2a7234931e588d3a22e1a6ee61feec11e0267fb9d55ed0dd8a807ca27",
																				"typeString": "literal_string \"Launch protection: not whitelisted\""
																			}
																		],
																		"id": 1462,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "6799:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6799:64:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1468,
																"nodeType": "ExpressionStatement",
																"src": "6799:64:5"
															}
														]
													}
												},
												"id": 1471,
												"nodeType": "IfStatement",
												"src": "6585:289:5",
												"trueBody": {
													"id": 1455,
													"nodeType": "Block",
													"src": "6603:78:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1449,
																			"name": "isWhitelisted",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 807,
																			"src": "6625:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 1451,
																		"indexExpression": {
																			"id": 1450,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1444,
																			"src": "6639:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6625:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54726164696e67206e6f742079657420656e61626c6564",
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6644:25:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e5bba2366766584da2131202babfffd26ff440a4e29b0b132c9866fb7e5cd5d3",
																			"typeString": "literal_string \"Trading not yet enabled\""
																		},
																		"value": "Trading not yet enabled"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e5bba2366766584da2131202babfffd26ff440a4e29b0b132c9866fb7e5cd5d3",
																			"typeString": "literal_string \"Trading not yet enabled\""
																		}
																	],
																	"id": 1448,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6617:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6617:53:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1454,
															"nodeType": "ExpressionStatement",
															"src": "6617:53:5"
														}
													]
												}
											},
											{
												"id": 1472,
												"nodeType": "PlaceholderStatement",
												"src": "6883:1:5"
											}
										]
									},
									"id": 1474,
									"name": "launchProtection",
									"nameLocation": "6532:16:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6557:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "6549:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6549:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6571:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "6563:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6563:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:26:5"
									},
									"src": "6523:368:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										381
									],
									"body": {
										"id": 1561,
										"nodeType": "Block",
										"src": "7059:717:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1489,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "7077:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7095:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7087:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1490,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7087:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7087:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7077:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7099:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1488,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7069:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7069:70:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1497,
												"nodeType": "ExpressionStatement",
												"src": "7069:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1499,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "7157:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7178:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7170:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1500,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7170:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7170:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7157:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7182:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7149:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7149:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1507,
												"nodeType": "ExpressionStatement",
												"src": "7149:71:5"
											},
											{
												"assignments": [
													1509
												],
												"declarations": [
													{
														"constant": false,
														"id": 1509,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "7238:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1561,
														"src": "7230:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1508,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7230:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1513,
												"initialValue": {
													"arguments": [
														{
															"id": 1511,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "7264:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1510,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1083
														],
														"referencedDeclaration": 1083,
														"src": "7254:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7254:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7230:41:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1515,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1509,
																"src": "7302:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1516,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1480,
																"src": "7319:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7302:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7339:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 1514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7281:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7281:108:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1520,
												"nodeType": "ExpressionStatement",
												"src": "7281:108:5"
											},
											{
												"condition": {
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7404:29:5",
													"subExpression": {
														"arguments": [
															{
																"id": 1522,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "7423:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1521,
															"name": "isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "7405:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7405:28:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1537,
												"nodeType": "IfStatement",
												"src": "7400:183:5",
												"trueBody": {
													"id": 1536,
													"nodeType": "Block",
													"src": "7435:148:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1527,
																						"name": "recipient",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1478,
																						"src": "7484:9:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1526,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						1083
																					],
																					"referencedDeclaration": 1083,
																					"src": "7474:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view returns (uint256)"
																					}
																				},
																				"id": 1528,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7474:20:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1529,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1480,
																				"src": "7497:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7474:29:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1531,
																			"name": "maxWalletAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 858,
																			"src": "7507:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7474:48:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5768616c652064657465637465642121",
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7540:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_72cc28bfc68dcd6bff959b08390cdfb73a6c41c525dcd3929d90d896ff51c27d",
																			"typeString": "literal_string \"Whale detected!!\""
																		},
																		"value": "Whale detected!!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_72cc28bfc68dcd6bff959b08390cdfb73a6c41c525dcd3929d90d896ff51c27d",
																			"typeString": "literal_string \"Whale detected!!\""
																		}
																	],
																	"id": 1525,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7449:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7449:123:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1535,
															"nodeType": "ExpressionStatement",
															"src": "7449:123:5"
														}
													]
												}
											},
											{
												"assignments": [
													1539
												],
												"declarations": [
													{
														"constant": false,
														"id": 1539,
														"mutability": "mutable",
														"name": "takeFee",
														"nameLocation": "7597:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1561,
														"src": "7592:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1538,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7592:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1540,
												"nodeType": "VariableDeclarationStatement",
												"src": "7592:12:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1541,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "7619:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1542,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "7629:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "7619:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1544,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "7644:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1545,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "7657:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "7644:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7619:49:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1553,
												"nodeType": "IfStatement",
												"src": "7615:94:5",
												"trueBody": {
													"id": 1552,
													"nodeType": "Block",
													"src": "7670:39:5",
													"statements": [
														{
															"expression": {
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1548,
																	"name": "takeFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1539,
																	"src": "7684:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7694:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7684:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1551,
															"nodeType": "ExpressionStatement",
															"src": "7684:14:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1555,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "7734:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1556,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "7742:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1557,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "7753:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1558,
															"name": "takeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "7761:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1554,
														"name": "_tokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "7719:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7719:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1560,
												"nodeType": "ExpressionStatement",
												"src": "7719:50:5"
											}
										]
									},
									"id": 1562,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1484,
													"name": "sender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1476,
													"src": "7040:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1485,
													"name": "recipient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1478,
													"src": "7048:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1486,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1483,
												"name": "launchProtection",
												"nameLocations": [
													"7023:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1474,
												"src": "7023:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "7023:35:5"
										}
									],
									"name": "_transfer",
									"nameLocation": "6906:9:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1482,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7014:8:5"
									},
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6933:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "6925:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6925:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6957:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "6949:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6949:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6984:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1562,
												"src": "6976:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6915:81:5"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7059:0:5"
									},
									"scope": 2253,
									"src": "6897:879:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1658,
										"nodeType": "Block",
										"src": "7907:644:5",
										"statements": [
											{
												"condition": {
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7921:8:5",
													"subExpression": {
														"id": 1573,
														"name": "takeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "7922:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1579,
												"nodeType": "IfStatement",
												"src": "7917:53:5",
												"trueBody": {
													"id": 1578,
													"nodeType": "Block",
													"src": "7931:39:5",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1575,
																	"name": "removeAllFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1688,
																	"src": "7945:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7945:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1577,
															"nodeType": "ExpressionStatement",
															"src": "7945:14:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1580,
															"name": "_isExcluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "7984:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1582,
														"indexExpression": {
															"id": 1581,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "7996:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7984:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "8005:16:5",
														"subExpression": {
															"baseExpression": {
																"id": 1583,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "8006:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1585,
															"indexExpression": {
																"id": 1584,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1566,
																"src": "8018:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8006:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7984:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "8096:18:5",
															"subExpression": {
																"baseExpression": {
																	"id": 1595,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "8097:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1597,
																"indexExpression": {
																	"id": 1596,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1564,
																	"src": "8109:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8097:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"baseExpression": {
																"id": 1599,
																"name": "_isExcluded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "8118:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1601,
															"indexExpression": {
																"id": 1600,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1566,
																"src": "8130:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8118:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "8096:37:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "8206:18:5",
																"subExpression": {
																	"baseExpression": {
																		"id": 1610,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 811,
																		"src": "8207:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1612,
																	"indexExpression": {
																		"id": 1611,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1564,
																		"src": "8219:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8207:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "8228:16:5",
																"subExpression": {
																	"baseExpression": {
																		"id": 1614,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 811,
																		"src": "8229:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1616,
																	"indexExpression": {
																		"id": 1615,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "8241:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8229:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8206:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1626,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 811,
																		"src": "8315:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1628,
																	"indexExpression": {
																		"id": 1627,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1564,
																		"src": "8327:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8315:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1629,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 811,
																		"src": "8336:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1631,
																	"indexExpression": {
																		"id": 1630,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "8348:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8336:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8315:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1646,
																"nodeType": "Block",
																"src": "8422:59:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1641,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1564,
																					"src": "8454:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1642,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1566,
																					"src": "8460:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1643,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1568,
																					"src": "8464:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1640,
																				"name": "_transferStandard",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1759,
																				"src": "8436:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8436:34:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1645,
																		"nodeType": "ExpressionStatement",
																		"src": "8436:34:5"
																	}
																]
															},
															"id": 1647,
															"nodeType": "IfStatement",
															"src": "8311:170:5",
															"trueBody": {
																"id": 1639,
																"nodeType": "Block",
																"src": "8353:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1634,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1564,
																					"src": "8389:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1635,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1566,
																					"src": "8395:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1636,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1568,
																					"src": "8399:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1633,
																				"name": "_transferBothExcluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1976,
																				"src": "8367:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8367:38:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1638,
																		"nodeType": "ExpressionStatement",
																		"src": "8367:38:5"
																	}
																]
															}
														},
														"id": 1648,
														"nodeType": "IfStatement",
														"src": "8202:279:5",
														"trueBody": {
															"id": 1625,
															"nodeType": "Block",
															"src": "8246:59:5",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1620,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1564,
																				"src": "8278:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1621,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1566,
																				"src": "8284:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1622,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1568,
																				"src": "8288:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1619,
																			"name": "_transferStandard",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1759,
																			"src": "8260:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8260:34:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1624,
																	"nodeType": "ExpressionStatement",
																	"src": "8260:34:5"
																}
															]
														}
													},
													"id": 1649,
													"nodeType": "IfStatement",
													"src": "8092:389:5",
													"trueBody": {
														"id": 1609,
														"nodeType": "Block",
														"src": "8135:61:5",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1604,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1564,
																			"src": "8169:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1605,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1566,
																			"src": "8175:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1606,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1568,
																			"src": "8179:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1603,
																		"name": "_transferToExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1828,
																		"src": "8149:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,address,uint256)"
																		}
																	},
																	"id": 1607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8149:36:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1608,
																"nodeType": "ExpressionStatement",
																"src": "8149:36:5"
															}
														]
													}
												},
												"id": 1650,
												"nodeType": "IfStatement",
												"src": "7980:501:5",
												"trueBody": {
													"id": 1594,
													"nodeType": "Block",
													"src": "8023:63:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1589,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1564,
																		"src": "8059:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1590,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "8065:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1591,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1568,
																		"src": "8069:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1588,
																	"name": "_transferFromExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1897,
																	"src": "8037:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8037:38:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1593,
															"nodeType": "ExpressionStatement",
															"src": "8037:38:5"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8495:8:5",
													"subExpression": {
														"id": 1651,
														"name": "takeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "8496:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1657,
												"nodeType": "IfStatement",
												"src": "8491:54:5",
												"trueBody": {
													"id": 1656,
													"nodeType": "Block",
													"src": "8505:40:5",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1653,
																	"name": "restoreAllFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1700,
																	"src": "8519:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8519:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1655,
															"nodeType": "ExpressionStatement",
															"src": "8519:15:5"
														}
													]
												}
											}
										]
									},
									"id": 1659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenTransfer",
									"nameLocation": "7791:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7823:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "7815:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7815:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7845:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "7837:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7837:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7865:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "7857:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7857:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "takeFee",
												"nameLocation": "7885:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "7880:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7880:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7805:93:5"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7907:0:5"
									},
									"scope": 2253,
									"src": "7782:769:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1687,
										"nodeType": "Block",
										"src": "8589:199:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1662,
															"name": "_reflectionFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "8603:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8621:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8603:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1665,
															"name": "_taxFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "8626:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8637:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8626:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8603:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1670,
												"nodeType": "IfStatement",
												"src": "8599:48:5",
												"trueBody": {
													"functionReturnParameters": 1661,
													"id": 1669,
													"nodeType": "Return",
													"src": "8640:7:5"
												}
											},
											{
												"expression": {
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1671,
														"name": "_previousReflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "8657:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1672,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "8682:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8657:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1674,
												"nodeType": "ExpressionStatement",
												"src": "8657:39:5"
											},
											{
												"expression": {
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1675,
														"name": "_previousTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "8706:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1676,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "8724:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8706:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "8706:25:5"
											},
											{
												"expression": {
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1679,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "8742:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8759:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8742:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "8742:18:5"
											},
											{
												"expression": {
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1683,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "8770:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8780:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8770:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1686,
												"nodeType": "ExpressionStatement",
												"src": "8770:11:5"
											}
										]
									},
									"id": 1688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeAllFee",
									"nameLocation": "8566:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8578:2:5"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8589:0:5"
									},
									"scope": 2253,
									"src": "8557:231:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "8827:91:5",
										"statements": [
											{
												"expression": {
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1691,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "8837:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1692,
														"name": "_previousReflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "8854:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8837:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1694,
												"nodeType": "ExpressionStatement",
												"src": "8837:39:5"
											},
											{
												"expression": {
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1695,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "8886:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1696,
														"name": "_previousTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "8896:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8886:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1698,
												"nodeType": "ExpressionStatement",
												"src": "8886:25:5"
											}
										]
									},
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "restoreAllFee",
									"nameLocation": "8803:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8816:2:5"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8827:0:5"
									},
									"scope": 2253,
									"src": "8794:124:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1758,
										"nodeType": "Block",
										"src": "9041:472:5",
										"statements": [
											{
												"assignments": [
													1710,
													1712,
													1714,
													1716
												],
												"declarations": [
													{
														"constant": false,
														"id": 1710,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "9073:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1758,
														"src": "9065:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1709,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9065:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1712,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "9102:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1758,
														"src": "9094:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1711,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9094:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1714,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "9139:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1758,
														"src": "9131:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1713,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9131:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1716,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "9176:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1758,
														"src": "9168:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9168:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1720,
												"initialValue": {
													"arguments": [
														{
															"id": 1718,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "9219:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1717,
														"name": "_getTransferValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2050,
														"src": "9200:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9200:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9051:176:5"
											},
											{
												"expression": {
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1721,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "9238:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1723,
														"indexExpression": {
															"id": 1722,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "9246:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9238:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1724,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "9256:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1726,
															"indexExpression": {
																"id": 1725,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1702,
																"src": "9264:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9256:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1727,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "9274:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9256:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9238:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "9238:43:5"
											},
											{
												"expression": {
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1731,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "9291:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1733,
														"indexExpression": {
															"id": 1732,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "9299:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9291:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1734,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "9312:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1736,
															"indexExpression": {
																"id": 1735,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "9320:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9312:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1737,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "9333:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9312:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9291:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1740,
												"nodeType": "ExpressionStatement",
												"src": "9291:57:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1742,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "9374:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1743,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "9382:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1744,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "9391:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1741,
														"name": "taxFeeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2252,
														"src": "9359:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9359:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1746,
												"nodeType": "ExpressionStatement",
												"src": "9359:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1748,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "9425:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1749,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "9434:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1747,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2085,
														"src": "9413:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9413:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1751,
												"nodeType": "ExpressionStatement",
												"src": "9413:33:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1753,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "9471:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1754,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "9479:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1755,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "9490:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1752,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "9462:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9462:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1757,
												"nodeType": "EmitStatement",
												"src": "9457:49:5"
											}
										]
									},
									"id": 1759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferStandard",
									"nameLocation": "8933:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8968:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "8960:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8960:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8992:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "8984:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8984:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "9019:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "9011:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9011:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8950:82:5"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9041:0:5"
									},
									"scope": 2253,
									"src": "8924:589:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1827,
										"nodeType": "Block",
										"src": "9638:538:5",
										"statements": [
											{
												"assignments": [
													1769,
													1771,
													1773,
													1775
												],
												"declarations": [
													{
														"constant": false,
														"id": 1769,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "9670:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1827,
														"src": "9662:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1768,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9662:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1771,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "9699:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1827,
														"src": "9691:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9691:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1773,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "9736:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1827,
														"src": "9728:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1772,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9728:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1775,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "9773:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1827,
														"src": "9765:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1774,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9765:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1779,
												"initialValue": {
													"arguments": [
														{
															"id": 1777,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "9816:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1776,
														"name": "_getTransferValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2050,
														"src": "9797:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9797:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9648:176:5"
											},
											{
												"expression": {
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1780,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "9834:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1782,
														"indexExpression": {
															"id": 1781,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "9842:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9834:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1783,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "9852:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1785,
															"indexExpression": {
																"id": 1784,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1761,
																"src": "9860:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9852:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1786,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1769,
															"src": "9870:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9852:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9834:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1789,
												"nodeType": "ExpressionStatement",
												"src": "9834:43:5"
											},
											{
												"expression": {
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1790,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "9887:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1792,
														"indexExpression": {
															"id": 1791,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "9895:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9887:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1793,
																"name": "_tOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "9908:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1795,
															"indexExpression": {
																"id": 1794,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1763,
																"src": "9916:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9908:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1796,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "9929:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9908:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9887:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1799,
												"nodeType": "ExpressionStatement",
												"src": "9887:57:5"
											},
											{
												"expression": {
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1800,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "9954:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1802,
														"indexExpression": {
															"id": 1801,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "9962:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9954:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1803,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "9975:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1805,
															"indexExpression": {
																"id": 1804,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1763,
																"src": "9983:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9975:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1806,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1771,
															"src": "9996:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9975:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9954:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1809,
												"nodeType": "ExpressionStatement",
												"src": "9954:57:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1811,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "10037:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1812,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "10045:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1813,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "10054:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1810,
														"name": "taxFeeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2252,
														"src": "10022:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10022:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1815,
												"nodeType": "ExpressionStatement",
												"src": "10022:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1817,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1765,
															"src": "10088:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1818,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "10097:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1816,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2085,
														"src": "10076:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10076:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1820,
												"nodeType": "ExpressionStatement",
												"src": "10076:33:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1822,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "10134:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1823,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "10142:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1824,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "10153:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1821,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "10125:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10125:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1826,
												"nodeType": "EmitStatement",
												"src": "10120:49:5"
											}
										]
									},
									"id": 1828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferToExcluded",
									"nameLocation": "9528:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9565:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "9557:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9557:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "9589:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "9581:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9581:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "9616:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "9608:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9608:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9547:82:5"
									},
									"returnParameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9638:0:5"
									},
									"scope": 2253,
									"src": "9519:657:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1896,
										"nodeType": "Block",
										"src": "10303:524:5",
										"statements": [
											{
												"assignments": [
													1838,
													1840,
													1842,
													1844
												],
												"declarations": [
													{
														"constant": false,
														"id": 1838,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "10335:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1896,
														"src": "10327:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1837,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10327:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1840,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "10364:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1896,
														"src": "10356:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1839,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10356:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1842,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "10401:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1896,
														"src": "10393:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1841,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10393:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1844,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "10438:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1896,
														"src": "10430:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1843,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10430:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1848,
												"initialValue": {
													"arguments": [
														{
															"id": 1846,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "10481:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1845,
														"name": "_getTransferValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2050,
														"src": "10462:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10462:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10313:176:5"
											},
											{
												"expression": {
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1849,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "10499:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1851,
														"indexExpression": {
															"id": 1850,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "10507:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10499:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1852,
																"name": "_tOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "10517:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1854,
															"indexExpression": {
																"id": 1853,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1830,
																"src": "10525:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10517:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1855,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "10535:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10517:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10499:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1858,
												"nodeType": "ExpressionStatement",
												"src": "10499:43:5"
											},
											{
												"expression": {
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1859,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "10552:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1861,
														"indexExpression": {
															"id": 1860,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "10560:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10552:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1862,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "10570:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1864,
															"indexExpression": {
																"id": 1863,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1830,
																"src": "10578:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10570:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1865,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1838,
															"src": "10588:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10570:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10552:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1868,
												"nodeType": "ExpressionStatement",
												"src": "10552:43:5"
											},
											{
												"expression": {
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1869,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "10605:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1871,
														"indexExpression": {
															"id": 1870,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1832,
															"src": "10613:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10605:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1872,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "10626:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1874,
															"indexExpression": {
																"id": 1873,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1832,
																"src": "10634:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10626:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1875,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "10647:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10626:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10605:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1878,
												"nodeType": "ExpressionStatement",
												"src": "10605:57:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1880,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "10688:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1881,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "10696:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1882,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1844,
															"src": "10705:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1879,
														"name": "taxFeeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2252,
														"src": "10673:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10673:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1884,
												"nodeType": "ExpressionStatement",
												"src": "10673:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1886,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "10739:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1887,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1844,
															"src": "10748:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1885,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2085,
														"src": "10727:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10727:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1889,
												"nodeType": "ExpressionStatement",
												"src": "10727:33:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1891,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "10785:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1892,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1832,
															"src": "10793:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1893,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "10804:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1890,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "10776:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10776:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1895,
												"nodeType": "EmitStatement",
												"src": "10771:49:5"
											}
										]
									},
									"id": 1897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferFromExcluded",
									"nameLocation": "10191:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "10230:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "10222:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10254:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "10246:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10246:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "10281:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "10273:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10273:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10212:82:5"
									},
									"returnParameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10303:0:5"
									},
									"scope": 2253,
									"src": "10182:645:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1975,
										"nodeType": "Block",
										"src": "10954:591:5",
										"statements": [
											{
												"assignments": [
													1907,
													1909,
													1911,
													1913
												],
												"declarations": [
													{
														"constant": false,
														"id": 1907,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "10986:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1975,
														"src": "10978:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1906,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10978:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1909,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "11015:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1975,
														"src": "11007:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1908,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11007:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1911,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "11052:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1975,
														"src": "11044:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1910,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11044:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1913,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "11089:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1975,
														"src": "11081:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1912,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11081:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1917,
												"initialValue": {
													"arguments": [
														{
															"id": 1915,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1903,
															"src": "11132:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1914,
														"name": "_getTransferValues",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2050,
														"src": "11113:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11113:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10964:176:5"
											},
											{
												"expression": {
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1918,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "11150:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1920,
														"indexExpression": {
															"id": 1919,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1899,
															"src": "11158:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11150:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1921,
																"name": "_tOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "11168:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1923,
															"indexExpression": {
																"id": 1922,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1899,
																"src": "11176:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11168:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1924,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1903,
															"src": "11186:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11168:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11150:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1927,
												"nodeType": "ExpressionStatement",
												"src": "11150:43:5"
											},
											{
												"expression": {
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1928,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "11203:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1930,
														"indexExpression": {
															"id": 1929,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1899,
															"src": "11211:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11203:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1931,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "11221:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1933,
															"indexExpression": {
																"id": 1932,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1899,
																"src": "11229:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11221:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1934,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "11239:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11221:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11203:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1937,
												"nodeType": "ExpressionStatement",
												"src": "11203:43:5"
											},
											{
												"expression": {
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1938,
															"name": "_tOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "11256:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1940,
														"indexExpression": {
															"id": 1939,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1901,
															"src": "11264:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11256:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1941,
																"name": "_tOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "11277:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1943,
															"indexExpression": {
																"id": 1942,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1901,
																"src": "11285:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11277:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1944,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "11298:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11277:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11256:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1947,
												"nodeType": "ExpressionStatement",
												"src": "11256:57:5"
											},
											{
												"expression": {
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1948,
															"name": "_rOwned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "11323:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1950,
														"indexExpression": {
															"id": 1949,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1901,
															"src": "11331:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11323:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1951,
																"name": "_rOwned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "11344:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1953,
															"indexExpression": {
																"id": 1952,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1901,
																"src": "11352:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11344:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1954,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "11365:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11344:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11323:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "11323:57:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1959,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1899,
															"src": "11406:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1960,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1903,
															"src": "11414:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1961,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1913,
															"src": "11423:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1958,
														"name": "taxFeeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2252,
														"src": "11391:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11391:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1963,
												"nodeType": "ExpressionStatement",
												"src": "11391:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1965,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1903,
															"src": "11457:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1966,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1913,
															"src": "11466:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1964,
														"name": "_reflectFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2085,
														"src": "11445:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11445:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1968,
												"nodeType": "ExpressionStatement",
												"src": "11445:33:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1970,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1899,
															"src": "11503:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1971,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1901,
															"src": "11511:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1972,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "11522:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1969,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "11494:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11494:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1974,
												"nodeType": "EmitStatement",
												"src": "11489:49:5"
											}
										]
									},
									"id": 1976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferBothExcluded",
									"nameLocation": "10842:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "10881:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "10873:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10873:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10905:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "10897:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10897:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "10932:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1976,
												"src": "10924:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10924:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10863:82:5"
									},
									"returnParameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10954:0:5"
									},
									"scope": 2253,
									"src": "10833:712:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2000,
										"nodeType": "Block",
										"src": "11657:140:5",
										"statements": [
											{
												"assignments": [
													1984
												],
												"declarations": [
													{
														"constant": false,
														"id": 1984,
														"mutability": "mutable",
														"name": "allTaxes",
														"nameLocation": "11675:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 2000,
														"src": "11667:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1983,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11667:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1988,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1985,
														"name": "_reflectionFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "11686:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1986,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "11703:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11686:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11667:43:5"
											},
											{
												"assignments": [
													1990
												],
												"declarations": [
													{
														"constant": false,
														"id": 1990,
														"mutability": "mutable",
														"name": "taxValue",
														"nameLocation": "11728:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 2000,
														"src": "11720:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1989,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11720:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1997,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1991,
																	"name": "tAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1978,
																	"src": "11740:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1992,
																	"name": "allTaxes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1984,
																	"src": "11750:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11740:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1994,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11739:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1995,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11762:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "11739:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11720:45:5"
											},
											{
												"expression": {
													"id": 1998,
													"name": "taxValue",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1990,
													"src": "11782:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1982,
												"id": 1999,
												"nodeType": "Return",
												"src": "11775:15:5"
											}
										]
									},
									"id": 2001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getCompleteTaxValue",
									"nameLocation": "11560:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "11589:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "11581:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11581:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11580:17:5"
									},
									"returnParameters": {
										"id": 1982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "11644:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11644:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11643:9:5"
									},
									"scope": 2253,
									"src": "11551:246:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2049,
										"nodeType": "Block",
										"src": "11992:348:5",
										"statements": [
											{
												"assignments": [
													2015
												],
												"declarations": [
													{
														"constant": false,
														"id": 2015,
														"mutability": "mutable",
														"name": "taxValue",
														"nameLocation": "12010:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 2049,
														"src": "12002:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2014,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12002:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2019,
												"initialValue": {
													"arguments": [
														{
															"id": 2017,
															"name": "tAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2003,
															"src": "12042:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2016,
														"name": "_getCompleteTaxValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2001,
														"src": "12021:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12021:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12002:48:5"
											},
											{
												"assignments": [
													2021
												],
												"declarations": [
													{
														"constant": false,
														"id": 2021,
														"mutability": "mutable",
														"name": "tTransferAmount",
														"nameLocation": "12068:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 2049,
														"src": "12060:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2020,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12060:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2025,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2022,
														"name": "tAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2003,
														"src": "12086:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2023,
														"name": "taxValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "12096:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12086:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12060:44:5"
											},
											{
												"assignments": [
													2027
												],
												"declarations": [
													{
														"constant": false,
														"id": 2027,
														"mutability": "mutable",
														"name": "currentRate",
														"nameLocation": "12122:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 2049,
														"src": "12114:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2026,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12114:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2030,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2028,
														"name": "_getRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2102,
														"src": "12136:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12136:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12114:32:5"
											},
											{
												"assignments": [
													2032
												],
												"declarations": [
													{
														"constant": false,
														"id": 2032,
														"mutability": "mutable",
														"name": "rTransferAmount",
														"nameLocation": "12164:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 2049,
														"src": "12156:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2031,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12156:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2036,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2033,
														"name": "tTransferAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "12182:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2034,
														"name": "currentRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2027,
														"src": "12200:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12182:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12156:55:5"
											},
											{
												"assignments": [
													2038
												],
												"declarations": [
													{
														"constant": false,
														"id": 2038,
														"mutability": "mutable",
														"name": "rAmount",
														"nameLocation": "12229:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 2049,
														"src": "12221:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2037,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12221:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2042,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2039,
														"name": "tAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2003,
														"src": "12239:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2040,
														"name": "currentRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2027,
														"src": "12249:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12239:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12221:39:5"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2043,
															"name": "rAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2038,
															"src": "12278:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2044,
															"name": "rTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "12287:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2045,
															"name": "tTransferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "12304:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2046,
															"name": "currentRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2027,
															"src": "12321:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2047,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "12277:56:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 2013,
												"id": 2048,
												"nodeType": "Return",
												"src": "12270:63:5"
											}
										]
									},
									"id": 2050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTransferValues",
									"nameLocation": "11812:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "11839:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "11831:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11831:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11830:17:5"
									},
									"returnParameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "11907:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11907:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "11928:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11928:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "11949:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11949:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "11970:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11970:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11893:94:5"
									},
									"scope": 2253,
									"src": "11803:537:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2084,
										"nodeType": "Block",
										"src": "12413:182:5",
										"statements": [
											{
												"assignments": [
													2058
												],
												"declarations": [
													{
														"constant": false,
														"id": 2058,
														"mutability": "mutable",
														"name": "tFee",
														"nameLocation": "12431:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 2084,
														"src": "12423:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2057,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12423:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2065,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2059,
																	"name": "tAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2052,
																	"src": "12439:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2060,
																	"name": "_reflectionFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "12449:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12439:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2062,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "12438:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 2063,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12467:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "12438:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12423:47:5"
											},
											{
												"assignments": [
													2067
												],
												"declarations": [
													{
														"constant": false,
														"id": 2067,
														"mutability": "mutable",
														"name": "rFee",
														"nameLocation": "12488:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 2084,
														"src": "12480:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2066,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12480:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2071,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2068,
														"name": "tFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2058,
														"src": "12495:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2069,
														"name": "currentRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2054,
														"src": "12502:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12495:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12480:33:5"
											},
											{
												"expression": {
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2072,
														"name": "_rTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "12524:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2073,
															"name": "_rTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "12534:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 2074,
															"name": "rFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2067,
															"src": "12544:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12534:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12524:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2077,
												"nodeType": "ExpressionStatement",
												"src": "12524:24:5"
											},
											{
												"expression": {
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2078,
														"name": "_tFeeTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "12558:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2079,
															"name": "_tFeeTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "12571:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2080,
															"name": "tFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "12584:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12571:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12558:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2083,
												"nodeType": "ExpressionStatement",
												"src": "12558:30:5"
											}
										]
									},
									"id": 2085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reflectFee",
									"nameLocation": "12355:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "12375:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "12367:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12367:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "currentRate",
												"nameLocation": "12392:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "12384:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12384:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12366:38:5"
									},
									"returnParameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12413:0:5"
									},
									"scope": 2253,
									"src": "12346:249:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2101,
										"nodeType": "Block",
										"src": "12652:107:5",
										"statements": [
											{
												"assignments": [
													2091,
													2093
												],
												"declarations": [
													{
														"constant": false,
														"id": 2091,
														"mutability": "mutable",
														"name": "rSupply",
														"nameLocation": "12671:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 2101,
														"src": "12663:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2090,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2093,
														"mutability": "mutable",
														"name": "tSupply",
														"nameLocation": "12688:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 2101,
														"src": "12680:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2092,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12680:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2096,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2094,
														"name": "_getCurrentSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2187,
														"src": "12699:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function () view returns (uint256,uint256)"
														}
													},
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12699:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12662:56:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2097,
														"name": "rSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2091,
														"src": "12735:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2098,
														"name": "tSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2093,
														"src": "12745:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12735:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2089,
												"id": 2100,
												"nodeType": "Return",
												"src": "12728:24:5"
											}
										]
									},
									"id": 2102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRate",
									"nameLocation": "12610:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12618:2:5"
									},
									"returnParameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "12643:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12643:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12642:9:5"
									},
									"scope": 2253,
									"src": "12601:158:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2186,
										"nodeType": "Block",
										"src": "12834:573:5",
										"statements": [
											{
												"assignments": [
													2110
												],
												"declarations": [
													{
														"constant": false,
														"id": 2110,
														"mutability": "mutable",
														"name": "rSupply",
														"nameLocation": "12852:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 2186,
														"src": "12844:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2109,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12844:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2112,
												"initialValue": {
													"id": 2111,
													"name": "_rTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 831,
													"src": "12862:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12844:25:5"
											},
											{
												"assignments": [
													2114
												],
												"declarations": [
													{
														"constant": false,
														"id": 2114,
														"mutability": "mutable",
														"name": "tSupply",
														"nameLocation": "12887:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 2186,
														"src": "12879:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2113,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12879:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2116,
												"initialValue": {
													"id": 2115,
													"name": "_tTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 829,
													"src": "12897:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12879:25:5"
											},
											{
												"body": {
													"id": 2169,
													"nodeType": "Block",
													"src": "12962:310:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2128,
																			"name": "_rOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 795,
																			"src": "12997:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2132,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2129,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 814,
																				"src": "13005:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2131,
																			"indexExpression": {
																				"id": 2130,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2118,
																				"src": "13015:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13005:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12997:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2133,
																		"name": "rSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2110,
																		"src": "13021:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12997:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2135,
																			"name": "_tOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "13048:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2139,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2136,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 814,
																				"src": "13056:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2138,
																			"indexExpression": {
																				"id": 2137,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2118,
																				"src": "13066:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13056:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13048:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2140,
																		"name": "tSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2114,
																		"src": "13072:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13048:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "12997:82:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2148,
															"nodeType": "IfStatement",
															"src": "12976:176:5",
															"trueBody": {
																"id": 2147,
																"nodeType": "Block",
																"src": "13094:58:5",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"id": 2143,
																					"name": "_rTotal",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 831,
																					"src": "13120:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2144,
																					"name": "_tTotal",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 829,
																					"src": "13129:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2145,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "13119:18:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"functionReturnParameters": 2108,
																		"id": 2146,
																		"nodeType": "Return",
																		"src": "13112:25:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2149,
																	"name": "rSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "13165:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2150,
																		"name": "rSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2110,
																		"src": "13175:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 2151,
																			"name": "_rOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 795,
																			"src": "13185:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2155,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2152,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 814,
																				"src": "13193:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2154,
																			"indexExpression": {
																				"id": 2153,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2118,
																				"src": "13203:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13193:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13185:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13175:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13165:41:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2158,
															"nodeType": "ExpressionStatement",
															"src": "13165:41:5"
														},
														{
															"expression": {
																"id": 2167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2159,
																	"name": "tSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2114,
																	"src": "13220:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2160,
																		"name": "tSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2114,
																		"src": "13230:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 2161,
																			"name": "_tOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "13240:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2165,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2162,
																				"name": "_excluded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 814,
																				"src": "13248:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2164,
																			"indexExpression": {
																				"id": 2163,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2118,
																				"src": "13258:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13248:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13240:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13230:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13220:41:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2168,
															"nodeType": "ExpressionStatement",
															"src": "13220:41:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2121,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2118,
														"src": "12935:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2122,
															"name": "_excluded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "12939:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12949:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12939:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12935:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2170,
												"initializationExpression": {
													"assignments": [
														2118
													],
													"declarations": [
														{
															"constant": false,
															"id": 2118,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12928:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 2170,
															"src": "12920:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2117,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12920:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2120,
													"initialValue": {
														"hexValue": "30",
														"id": 2119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12932:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12920:13:5"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12957:3:5",
														"subExpression": {
															"id": 2125,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "12957:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2127,
													"nodeType": "ExpressionStatement",
													"src": "12957:3:5"
												},
												"nodeType": "ForStatement",
												"src": "12915:357:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2171,
														"name": "rSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2110,
														"src": "13286:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2172,
															"name": "_rTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "13296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2173,
															"name": "_tTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "13306:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13296:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13286:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2181,
												"nodeType": "IfStatement",
												"src": "13282:83:5",
												"trueBody": {
													"id": 2180,
													"nodeType": "Block",
													"src": "13315:50:5",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"id": 2176,
																		"name": "_rTotal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 831,
																		"src": "13337:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2177,
																		"name": "_tTotal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "13346:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2178,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13336:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 2108,
															"id": 2179,
															"nodeType": "Return",
															"src": "13329:25:5"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 2182,
															"name": "rSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2110,
															"src": "13383:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2183,
															"name": "tSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2114,
															"src": "13392:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2184,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13382:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 2108,
												"id": 2185,
												"nodeType": "Return",
												"src": "13375:25:5"
											}
										]
									},
									"id": 2187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getCurrentSupply",
									"nameLocation": "12774:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12791:2:5"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "12816:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12816:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "12825:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12825:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12815:18:5"
									},
									"scope": 2253,
									"src": "12765:642:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2251,
										"nodeType": "Block",
										"src": "13529:478:5",
										"statements": [
											{
												"assignments": [
													2197
												],
												"declarations": [
													{
														"constant": false,
														"id": 2197,
														"mutability": "mutable",
														"name": "tTaxFee",
														"nameLocation": "13547:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 2251,
														"src": "13539:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2196,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13539:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2204,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2198,
																	"name": "tAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2191,
																	"src": "13558:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2199,
																	"name": "_taxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "13568:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13558:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2201,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "13557:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 2202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13579:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "13557:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13539:43:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2205,
														"name": "tTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2197,
														"src": "13596:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13606:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13596:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2250,
												"nodeType": "IfStatement",
												"src": "13592:409:5",
												"trueBody": {
													"id": 2249,
													"nodeType": "Block",
													"src": "13609:392:5",
													"statements": [
														{
															"assignments": [
																2209
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2209,
																	"mutability": "mutable",
																	"name": "rTaxFee",
																	"nameLocation": "13631:7:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 2249,
																	"src": "13623:15:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2208,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13623:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2216,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2210,
																				"name": "tTaxFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2197,
																				"src": "13642:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2211,
																				"name": "currentRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2193,
																				"src": "13652:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13642:21:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2213,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "13641:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13667:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "13641:27:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13623:45:5"
														},
														{
															"expression": {
																"id": 2225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2217,
																		"name": "_rOwned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 795,
																		"src": "13682:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2219,
																	"indexExpression": {
																		"id": 2218,
																		"name": "_marketingAccount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "13690:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "13682:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2220,
																			"name": "_rOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 795,
																			"src": "13711:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2222,
																		"indexExpression": {
																			"id": 2221,
																			"name": "_marketingAccount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 844,
																			"src": "13719:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13711:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2223,
																		"name": "rTaxFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2209,
																		"src": "13740:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13711:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13682:65:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2226,
															"nodeType": "ExpressionStatement",
															"src": "13682:65:5"
														},
														{
															"expression": {
																"id": 2235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2227,
																		"name": "_rOwned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 795,
																		"src": "13761:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2229,
																	"indexExpression": {
																		"id": 2228,
																		"name": "_developmentAccount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "13769:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "13761:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2230,
																			"name": "_rOwned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 795,
																			"src": "13808:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2232,
																		"indexExpression": {
																			"id": 2231,
																			"name": "_developmentAccount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 846,
																			"src": "13816:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13808:28:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2233,
																		"name": "rTaxFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2209,
																		"src": "13855:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13808:54:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13761:101:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2236,
															"nodeType": "ExpressionStatement",
															"src": "13761:101:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2238,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2189,
																		"src": "13890:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2239,
																		"name": "_marketingAccount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "13898:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2240,
																		"name": "tTaxFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "13917:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2237,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "13881:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13881:44:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2242,
															"nodeType": "EmitStatement",
															"src": "13876:49:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2244,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2189,
																		"src": "13953:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2245,
																		"name": "_developmentAccount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "13961:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2246,
																		"name": "tTaxFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "13982:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2243,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "13944:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13944:46:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2248,
															"nodeType": "EmitStatement",
															"src": "13939:51:5"
														}
													]
												}
											}
										]
									},
									"id": 2252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "taxFeeTransfer",
									"nameLocation": "13422:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "13454:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "13446:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13446:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "tAmount",
												"nameLocation": "13478:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "13470:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13470:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "currentRate",
												"nameLocation": "13503:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "13495:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13495:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13436:84:5"
									},
									"returnParameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13529:0:5"
									},
									"scope": 2253,
									"src": "13413:594:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2254,
							"src": "128:13881:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "33:13977:5"
				},
				"id": 5
			}
		}
	}
}